
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Usuarios
 * 
 */
export type Usuarios = $Result.DefaultSelection<Prisma.$UsuariosPayload>
/**
 * Model Estabelecimento
 * 
 */
export type Estabelecimento = $Result.DefaultSelection<Prisma.$EstabelecimentoPayload>
/**
 * Model PecasOP
 * 
 */
export type PecasOP = $Result.DefaultSelection<Prisma.$PecasOPPayload>
/**
 * Model Etapa
 * 
 */
export type Etapa = $Result.DefaultSelection<Prisma.$EtapaPayload>
/**
 * Model PecasEtapas
 * 
 */
export type PecasEtapas = $Result.DefaultSelection<Prisma.$PecasEtapasPayload>
/**
 * Model Producao
 * 
 */
export type Producao = $Result.DefaultSelection<Prisma.$ProducaoPayload>
/**
 * Model Estoque_Tecidos
 * 
 */
export type Estoque_Tecidos = $Result.DefaultSelection<Prisma.$Estoque_TecidosPayload>
/**
 * Model Estoque_Agulhas
 * 
 */
export type Estoque_Agulhas = $Result.DefaultSelection<Prisma.$Estoque_AgulhasPayload>
/**
 * Model Tarefas
 * 
 */
export type Tarefas = $Result.DefaultSelection<Prisma.$TarefasPayload>
/**
 * Model EquipesGrupos
 * 
 */
export type EquipesGrupos = $Result.DefaultSelection<Prisma.$EquipesGruposPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Usuarios
 * const usuarios = await prisma.usuarios.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Usuarios
   * const usuarios = await prisma.usuarios.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.usuarios`: Exposes CRUD operations for the **Usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Usuarios
    * const usuarios = await prisma.usuarios.findMany()
    * ```
    */
  get usuarios(): Prisma.UsuariosDelegate<ExtArgs>;

  /**
   * `prisma.estabelecimento`: Exposes CRUD operations for the **Estabelecimento** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estabelecimentos
    * const estabelecimentos = await prisma.estabelecimento.findMany()
    * ```
    */
  get estabelecimento(): Prisma.EstabelecimentoDelegate<ExtArgs>;

  /**
   * `prisma.pecasOP`: Exposes CRUD operations for the **PecasOP** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PecasOPS
    * const pecasOPS = await prisma.pecasOP.findMany()
    * ```
    */
  get pecasOP(): Prisma.PecasOPDelegate<ExtArgs>;

  /**
   * `prisma.etapa`: Exposes CRUD operations for the **Etapa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Etapas
    * const etapas = await prisma.etapa.findMany()
    * ```
    */
  get etapa(): Prisma.EtapaDelegate<ExtArgs>;

  /**
   * `prisma.pecasEtapas`: Exposes CRUD operations for the **PecasEtapas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PecasEtapas
    * const pecasEtapas = await prisma.pecasEtapas.findMany()
    * ```
    */
  get pecasEtapas(): Prisma.PecasEtapasDelegate<ExtArgs>;

  /**
   * `prisma.producao`: Exposes CRUD operations for the **Producao** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Producaos
    * const producaos = await prisma.producao.findMany()
    * ```
    */
  get producao(): Prisma.ProducaoDelegate<ExtArgs>;

  /**
   * `prisma.estoque_Tecidos`: Exposes CRUD operations for the **Estoque_Tecidos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estoque_Tecidos
    * const estoque_Tecidos = await prisma.estoque_Tecidos.findMany()
    * ```
    */
  get estoque_Tecidos(): Prisma.Estoque_TecidosDelegate<ExtArgs>;

  /**
   * `prisma.estoque_Agulhas`: Exposes CRUD operations for the **Estoque_Agulhas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Estoque_Agulhas
    * const estoque_Agulhas = await prisma.estoque_Agulhas.findMany()
    * ```
    */
  get estoque_Agulhas(): Prisma.Estoque_AgulhasDelegate<ExtArgs>;

  /**
   * `prisma.tarefas`: Exposes CRUD operations for the **Tarefas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tarefas
    * const tarefas = await prisma.tarefas.findMany()
    * ```
    */
  get tarefas(): Prisma.TarefasDelegate<ExtArgs>;

  /**
   * `prisma.equipesGrupos`: Exposes CRUD operations for the **EquipesGrupos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EquipesGrupos
    * const equipesGrupos = await prisma.equipesGrupos.findMany()
    * ```
    */
  get equipesGrupos(): Prisma.EquipesGruposDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.1.0
   * Query Engine version: 11f085a2012c0f4778414c8db2651556ee0ef959
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Usuarios: 'Usuarios',
    Estabelecimento: 'Estabelecimento',
    PecasOP: 'PecasOP',
    Etapa: 'Etapa',
    PecasEtapas: 'PecasEtapas',
    Producao: 'Producao',
    Estoque_Tecidos: 'Estoque_Tecidos',
    Estoque_Agulhas: 'Estoque_Agulhas',
    Tarefas: 'Tarefas',
    EquipesGrupos: 'EquipesGrupos'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "usuarios" | "estabelecimento" | "pecasOP" | "etapa" | "pecasEtapas" | "producao" | "estoque_Tecidos" | "estoque_Agulhas" | "tarefas" | "equipesGrupos"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Usuarios: {
        payload: Prisma.$UsuariosPayload<ExtArgs>
        fields: Prisma.UsuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UsuariosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UsuariosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          findFirst: {
            args: Prisma.UsuariosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UsuariosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          findMany: {
            args: Prisma.UsuariosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>[]
          }
          create: {
            args: Prisma.UsuariosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          createMany: {
            args: Prisma.UsuariosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UsuariosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          update: {
            args: Prisma.UsuariosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          deleteMany: {
            args: Prisma.UsuariosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UsuariosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UsuariosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UsuariosPayload>
          }
          aggregate: {
            args: Prisma.UsuariosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsuarios>
          }
          groupBy: {
            args: Prisma.UsuariosGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.UsuariosCountArgs<ExtArgs>
            result: $Utils.Optional<UsuariosCountAggregateOutputType> | number
          }
        }
      }
      Estabelecimento: {
        payload: Prisma.$EstabelecimentoPayload<ExtArgs>
        fields: Prisma.EstabelecimentoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EstabelecimentoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstabelecimentoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EstabelecimentoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstabelecimentoPayload>
          }
          findFirst: {
            args: Prisma.EstabelecimentoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstabelecimentoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EstabelecimentoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstabelecimentoPayload>
          }
          findMany: {
            args: Prisma.EstabelecimentoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstabelecimentoPayload>[]
          }
          create: {
            args: Prisma.EstabelecimentoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstabelecimentoPayload>
          }
          createMany: {
            args: Prisma.EstabelecimentoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EstabelecimentoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstabelecimentoPayload>
          }
          update: {
            args: Prisma.EstabelecimentoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstabelecimentoPayload>
          }
          deleteMany: {
            args: Prisma.EstabelecimentoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EstabelecimentoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EstabelecimentoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EstabelecimentoPayload>
          }
          aggregate: {
            args: Prisma.EstabelecimentoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstabelecimento>
          }
          groupBy: {
            args: Prisma.EstabelecimentoGroupByArgs<ExtArgs>
            result: $Utils.Optional<EstabelecimentoGroupByOutputType>[]
          }
          count: {
            args: Prisma.EstabelecimentoCountArgs<ExtArgs>
            result: $Utils.Optional<EstabelecimentoCountAggregateOutputType> | number
          }
        }
      }
      PecasOP: {
        payload: Prisma.$PecasOPPayload<ExtArgs>
        fields: Prisma.PecasOPFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PecasOPFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasOPPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PecasOPFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasOPPayload>
          }
          findFirst: {
            args: Prisma.PecasOPFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasOPPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PecasOPFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasOPPayload>
          }
          findMany: {
            args: Prisma.PecasOPFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasOPPayload>[]
          }
          create: {
            args: Prisma.PecasOPCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasOPPayload>
          }
          createMany: {
            args: Prisma.PecasOPCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PecasOPDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasOPPayload>
          }
          update: {
            args: Prisma.PecasOPUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasOPPayload>
          }
          deleteMany: {
            args: Prisma.PecasOPDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PecasOPUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PecasOPUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasOPPayload>
          }
          aggregate: {
            args: Prisma.PecasOPAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePecasOP>
          }
          groupBy: {
            args: Prisma.PecasOPGroupByArgs<ExtArgs>
            result: $Utils.Optional<PecasOPGroupByOutputType>[]
          }
          count: {
            args: Prisma.PecasOPCountArgs<ExtArgs>
            result: $Utils.Optional<PecasOPCountAggregateOutputType> | number
          }
        }
      }
      Etapa: {
        payload: Prisma.$EtapaPayload<ExtArgs>
        fields: Prisma.EtapaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EtapaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EtapaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EtapaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EtapaPayload>
          }
          findFirst: {
            args: Prisma.EtapaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EtapaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EtapaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EtapaPayload>
          }
          findMany: {
            args: Prisma.EtapaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EtapaPayload>[]
          }
          create: {
            args: Prisma.EtapaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EtapaPayload>
          }
          createMany: {
            args: Prisma.EtapaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EtapaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EtapaPayload>
          }
          update: {
            args: Prisma.EtapaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EtapaPayload>
          }
          deleteMany: {
            args: Prisma.EtapaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EtapaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EtapaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EtapaPayload>
          }
          aggregate: {
            args: Prisma.EtapaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEtapa>
          }
          groupBy: {
            args: Prisma.EtapaGroupByArgs<ExtArgs>
            result: $Utils.Optional<EtapaGroupByOutputType>[]
          }
          count: {
            args: Prisma.EtapaCountArgs<ExtArgs>
            result: $Utils.Optional<EtapaCountAggregateOutputType> | number
          }
        }
      }
      PecasEtapas: {
        payload: Prisma.$PecasEtapasPayload<ExtArgs>
        fields: Prisma.PecasEtapasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PecasEtapasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasEtapasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PecasEtapasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasEtapasPayload>
          }
          findFirst: {
            args: Prisma.PecasEtapasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasEtapasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PecasEtapasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasEtapasPayload>
          }
          findMany: {
            args: Prisma.PecasEtapasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasEtapasPayload>[]
          }
          create: {
            args: Prisma.PecasEtapasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasEtapasPayload>
          }
          createMany: {
            args: Prisma.PecasEtapasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PecasEtapasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasEtapasPayload>
          }
          update: {
            args: Prisma.PecasEtapasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasEtapasPayload>
          }
          deleteMany: {
            args: Prisma.PecasEtapasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PecasEtapasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PecasEtapasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PecasEtapasPayload>
          }
          aggregate: {
            args: Prisma.PecasEtapasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePecasEtapas>
          }
          groupBy: {
            args: Prisma.PecasEtapasGroupByArgs<ExtArgs>
            result: $Utils.Optional<PecasEtapasGroupByOutputType>[]
          }
          count: {
            args: Prisma.PecasEtapasCountArgs<ExtArgs>
            result: $Utils.Optional<PecasEtapasCountAggregateOutputType> | number
          }
        }
      }
      Producao: {
        payload: Prisma.$ProducaoPayload<ExtArgs>
        fields: Prisma.ProducaoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProducaoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProducaoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProducaoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProducaoPayload>
          }
          findFirst: {
            args: Prisma.ProducaoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProducaoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProducaoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProducaoPayload>
          }
          findMany: {
            args: Prisma.ProducaoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProducaoPayload>[]
          }
          create: {
            args: Prisma.ProducaoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProducaoPayload>
          }
          createMany: {
            args: Prisma.ProducaoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProducaoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProducaoPayload>
          }
          update: {
            args: Prisma.ProducaoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProducaoPayload>
          }
          deleteMany: {
            args: Prisma.ProducaoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProducaoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProducaoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProducaoPayload>
          }
          aggregate: {
            args: Prisma.ProducaoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProducao>
          }
          groupBy: {
            args: Prisma.ProducaoGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProducaoGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProducaoCountArgs<ExtArgs>
            result: $Utils.Optional<ProducaoCountAggregateOutputType> | number
          }
        }
      }
      Estoque_Tecidos: {
        payload: Prisma.$Estoque_TecidosPayload<ExtArgs>
        fields: Prisma.Estoque_TecidosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Estoque_TecidosFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_TecidosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Estoque_TecidosFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_TecidosPayload>
          }
          findFirst: {
            args: Prisma.Estoque_TecidosFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_TecidosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Estoque_TecidosFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_TecidosPayload>
          }
          findMany: {
            args: Prisma.Estoque_TecidosFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_TecidosPayload>[]
          }
          create: {
            args: Prisma.Estoque_TecidosCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_TecidosPayload>
          }
          createMany: {
            args: Prisma.Estoque_TecidosCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Estoque_TecidosDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_TecidosPayload>
          }
          update: {
            args: Prisma.Estoque_TecidosUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_TecidosPayload>
          }
          deleteMany: {
            args: Prisma.Estoque_TecidosDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Estoque_TecidosUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Estoque_TecidosUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_TecidosPayload>
          }
          aggregate: {
            args: Prisma.Estoque_TecidosAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstoque_Tecidos>
          }
          groupBy: {
            args: Prisma.Estoque_TecidosGroupByArgs<ExtArgs>
            result: $Utils.Optional<Estoque_TecidosGroupByOutputType>[]
          }
          count: {
            args: Prisma.Estoque_TecidosCountArgs<ExtArgs>
            result: $Utils.Optional<Estoque_TecidosCountAggregateOutputType> | number
          }
        }
      }
      Estoque_Agulhas: {
        payload: Prisma.$Estoque_AgulhasPayload<ExtArgs>
        fields: Prisma.Estoque_AgulhasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.Estoque_AgulhasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_AgulhasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.Estoque_AgulhasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_AgulhasPayload>
          }
          findFirst: {
            args: Prisma.Estoque_AgulhasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_AgulhasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.Estoque_AgulhasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_AgulhasPayload>
          }
          findMany: {
            args: Prisma.Estoque_AgulhasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_AgulhasPayload>[]
          }
          create: {
            args: Prisma.Estoque_AgulhasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_AgulhasPayload>
          }
          createMany: {
            args: Prisma.Estoque_AgulhasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.Estoque_AgulhasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_AgulhasPayload>
          }
          update: {
            args: Prisma.Estoque_AgulhasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_AgulhasPayload>
          }
          deleteMany: {
            args: Prisma.Estoque_AgulhasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.Estoque_AgulhasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.Estoque_AgulhasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$Estoque_AgulhasPayload>
          }
          aggregate: {
            args: Prisma.Estoque_AgulhasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEstoque_Agulhas>
          }
          groupBy: {
            args: Prisma.Estoque_AgulhasGroupByArgs<ExtArgs>
            result: $Utils.Optional<Estoque_AgulhasGroupByOutputType>[]
          }
          count: {
            args: Prisma.Estoque_AgulhasCountArgs<ExtArgs>
            result: $Utils.Optional<Estoque_AgulhasCountAggregateOutputType> | number
          }
        }
      }
      Tarefas: {
        payload: Prisma.$TarefasPayload<ExtArgs>
        fields: Prisma.TarefasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TarefasFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarefasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TarefasFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarefasPayload>
          }
          findFirst: {
            args: Prisma.TarefasFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarefasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TarefasFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarefasPayload>
          }
          findMany: {
            args: Prisma.TarefasFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarefasPayload>[]
          }
          create: {
            args: Prisma.TarefasCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarefasPayload>
          }
          createMany: {
            args: Prisma.TarefasCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.TarefasDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarefasPayload>
          }
          update: {
            args: Prisma.TarefasUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarefasPayload>
          }
          deleteMany: {
            args: Prisma.TarefasDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.TarefasUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.TarefasUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$TarefasPayload>
          }
          aggregate: {
            args: Prisma.TarefasAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTarefas>
          }
          groupBy: {
            args: Prisma.TarefasGroupByArgs<ExtArgs>
            result: $Utils.Optional<TarefasGroupByOutputType>[]
          }
          count: {
            args: Prisma.TarefasCountArgs<ExtArgs>
            result: $Utils.Optional<TarefasCountAggregateOutputType> | number
          }
        }
      }
      EquipesGrupos: {
        payload: Prisma.$EquipesGruposPayload<ExtArgs>
        fields: Prisma.EquipesGruposFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EquipesGruposFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipesGruposPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EquipesGruposFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipesGruposPayload>
          }
          findFirst: {
            args: Prisma.EquipesGruposFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipesGruposPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EquipesGruposFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipesGruposPayload>
          }
          findMany: {
            args: Prisma.EquipesGruposFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipesGruposPayload>[]
          }
          create: {
            args: Prisma.EquipesGruposCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipesGruposPayload>
          }
          createMany: {
            args: Prisma.EquipesGruposCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.EquipesGruposDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipesGruposPayload>
          }
          update: {
            args: Prisma.EquipesGruposUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipesGruposPayload>
          }
          deleteMany: {
            args: Prisma.EquipesGruposDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EquipesGruposUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.EquipesGruposUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EquipesGruposPayload>
          }
          aggregate: {
            args: Prisma.EquipesGruposAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEquipesGrupos>
          }
          groupBy: {
            args: Prisma.EquipesGruposGroupByArgs<ExtArgs>
            result: $Utils.Optional<EquipesGruposGroupByOutputType>[]
          }
          count: {
            args: Prisma.EquipesGruposCountArgs<ExtArgs>
            result: $Utils.Optional<EquipesGruposCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UsuariosCountOutputType
   */

  export type UsuariosCountOutputType = {
    EquipesGrupos: number
    producao_funcionario: number
  }

  export type UsuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EquipesGrupos?: boolean | UsuariosCountOutputTypeCountEquipesGruposArgs
    producao_funcionario?: boolean | UsuariosCountOutputTypeCountProducao_funcionarioArgs
  }

  // Custom InputTypes
  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsuariosCountOutputType
     */
    select?: UsuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountEquipesGruposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipesGruposWhereInput
  }

  /**
   * UsuariosCountOutputType without action
   */
  export type UsuariosCountOutputTypeCountProducao_funcionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProducaoWhereInput
  }


  /**
   * Count Type EstabelecimentoCountOutputType
   */

  export type EstabelecimentoCountOutputType = {
    usuarios: number
    EquipesGrupos: number
    estoque_tecidos: number
    estoque_agulhas: number
    tarefas: number
    PecasOP: number
    Producao: number
  }

  export type EstabelecimentoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | EstabelecimentoCountOutputTypeCountUsuariosArgs
    EquipesGrupos?: boolean | EstabelecimentoCountOutputTypeCountEquipesGruposArgs
    estoque_tecidos?: boolean | EstabelecimentoCountOutputTypeCountEstoque_tecidosArgs
    estoque_agulhas?: boolean | EstabelecimentoCountOutputTypeCountEstoque_agulhasArgs
    tarefas?: boolean | EstabelecimentoCountOutputTypeCountTarefasArgs
    PecasOP?: boolean | EstabelecimentoCountOutputTypeCountPecasOPArgs
    Producao?: boolean | EstabelecimentoCountOutputTypeCountProducaoArgs
  }

  // Custom InputTypes
  /**
   * EstabelecimentoCountOutputType without action
   */
  export type EstabelecimentoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EstabelecimentoCountOutputType
     */
    select?: EstabelecimentoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EstabelecimentoCountOutputType without action
   */
  export type EstabelecimentoCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuariosWhereInput
  }

  /**
   * EstabelecimentoCountOutputType without action
   */
  export type EstabelecimentoCountOutputTypeCountEquipesGruposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipesGruposWhereInput
  }

  /**
   * EstabelecimentoCountOutputType without action
   */
  export type EstabelecimentoCountOutputTypeCountEstoque_tecidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Estoque_TecidosWhereInput
  }

  /**
   * EstabelecimentoCountOutputType without action
   */
  export type EstabelecimentoCountOutputTypeCountEstoque_agulhasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Estoque_AgulhasWhereInput
  }

  /**
   * EstabelecimentoCountOutputType without action
   */
  export type EstabelecimentoCountOutputTypeCountTarefasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TarefasWhereInput
  }

  /**
   * EstabelecimentoCountOutputType without action
   */
  export type EstabelecimentoCountOutputTypeCountPecasOPArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PecasOPWhereInput
  }

  /**
   * EstabelecimentoCountOutputType without action
   */
  export type EstabelecimentoCountOutputTypeCountProducaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProducaoWhereInput
  }


  /**
   * Count Type PecasOPCountOutputType
   */

  export type PecasOPCountOutputType = {
    producao_peca: number
    etapas: number
  }

  export type PecasOPCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    producao_peca?: boolean | PecasOPCountOutputTypeCountProducao_pecaArgs
    etapas?: boolean | PecasOPCountOutputTypeCountEtapasArgs
  }

  // Custom InputTypes
  /**
   * PecasOPCountOutputType without action
   */
  export type PecasOPCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOPCountOutputType
     */
    select?: PecasOPCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PecasOPCountOutputType without action
   */
  export type PecasOPCountOutputTypeCountProducao_pecaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProducaoWhereInput
  }

  /**
   * PecasOPCountOutputType without action
   */
  export type PecasOPCountOutputTypeCountEtapasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PecasEtapasWhereInput
  }


  /**
   * Count Type EtapaCountOutputType
   */

  export type EtapaCountOutputType = {
    pecas: number
    producao_etapa: number
  }

  export type EtapaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pecas?: boolean | EtapaCountOutputTypeCountPecasArgs
    producao_etapa?: boolean | EtapaCountOutputTypeCountProducao_etapaArgs
  }

  // Custom InputTypes
  /**
   * EtapaCountOutputType without action
   */
  export type EtapaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EtapaCountOutputType
     */
    select?: EtapaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EtapaCountOutputType without action
   */
  export type EtapaCountOutputTypeCountPecasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PecasEtapasWhereInput
  }

  /**
   * EtapaCountOutputType without action
   */
  export type EtapaCountOutputTypeCountProducao_etapaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProducaoWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Usuarios
   */

  export type AggregateUsuarios = {
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  export type UsuariosAvgAggregateOutputType = {
    idade: number | null
  }

  export type UsuariosSumAggregateOutputType = {
    idade: number | null
  }

  export type UsuariosMinAggregateOutputType = {
    nome: string | null
    email: string | null
    senha: string | null
    foto: string | null
    idade: number | null
    funcoes: string | null
    identidade: string | null
    cpf: string | null
    pis: string | null
    pix: string | null
    notas: string | null
    estabelecimentoCnpj: string | null
  }

  export type UsuariosMaxAggregateOutputType = {
    nome: string | null
    email: string | null
    senha: string | null
    foto: string | null
    idade: number | null
    funcoes: string | null
    identidade: string | null
    cpf: string | null
    pis: string | null
    pix: string | null
    notas: string | null
    estabelecimentoCnpj: string | null
  }

  export type UsuariosCountAggregateOutputType = {
    nome: number
    email: number
    senha: number
    foto: number
    idade: number
    funcoes: number
    identidade: number
    cpf: number
    pis: number
    pix: number
    notas: number
    estabelecimentoCnpj: number
    _all: number
  }


  export type UsuariosAvgAggregateInputType = {
    idade?: true
  }

  export type UsuariosSumAggregateInputType = {
    idade?: true
  }

  export type UsuariosMinAggregateInputType = {
    nome?: true
    email?: true
    senha?: true
    foto?: true
    idade?: true
    funcoes?: true
    identidade?: true
    cpf?: true
    pis?: true
    pix?: true
    notas?: true
    estabelecimentoCnpj?: true
  }

  export type UsuariosMaxAggregateInputType = {
    nome?: true
    email?: true
    senha?: true
    foto?: true
    idade?: true
    funcoes?: true
    identidade?: true
    cpf?: true
    pis?: true
    pix?: true
    notas?: true
    estabelecimentoCnpj?: true
  }

  export type UsuariosCountAggregateInputType = {
    nome?: true
    email?: true
    senha?: true
    foto?: true
    idade?: true
    funcoes?: true
    identidade?: true
    cpf?: true
    pis?: true
    pix?: true
    notas?: true
    estabelecimentoCnpj?: true
    _all?: true
  }

  export type UsuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to aggregate.
     */
    where?: UsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Usuarios
    **/
    _count?: true | UsuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsuariosMaxAggregateInputType
  }

  export type GetUsuariosAggregateType<T extends UsuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateUsuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsuarios[P]>
      : GetScalarType<T[P], AggregateUsuarios[P]>
  }




  export type UsuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UsuariosWhereInput
    orderBy?: UsuariosOrderByWithAggregationInput | UsuariosOrderByWithAggregationInput[]
    by: UsuariosScalarFieldEnum[] | UsuariosScalarFieldEnum
    having?: UsuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsuariosCountAggregateInputType | true
    _avg?: UsuariosAvgAggregateInputType
    _sum?: UsuariosSumAggregateInputType
    _min?: UsuariosMinAggregateInputType
    _max?: UsuariosMaxAggregateInputType
  }

  export type UsuariosGroupByOutputType = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes: string | null
    identidade: string | null
    cpf: string | null
    pis: string | null
    pix: string | null
    notas: string | null
    estabelecimentoCnpj: string
    _count: UsuariosCountAggregateOutputType | null
    _avg: UsuariosAvgAggregateOutputType | null
    _sum: UsuariosSumAggregateOutputType | null
    _min: UsuariosMinAggregateOutputType | null
    _max: UsuariosMaxAggregateOutputType | null
  }

  type GetUsuariosGroupByPayload<T extends UsuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
            : GetScalarType<T[P], UsuariosGroupByOutputType[P]>
        }
      >
    >


  export type UsuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    nome?: boolean
    email?: boolean
    senha?: boolean
    foto?: boolean
    idade?: boolean
    funcoes?: boolean
    identidade?: boolean
    cpf?: boolean
    pis?: boolean
    pix?: boolean
    notas?: boolean
    estabelecimentoCnpj?: boolean
    EquipesGrupos?: boolean | Usuarios$EquipesGruposArgs<ExtArgs>
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
    producao_funcionario?: boolean | Usuarios$producao_funcionarioArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["usuarios"]>


  export type UsuariosSelectScalar = {
    nome?: boolean
    email?: boolean
    senha?: boolean
    foto?: boolean
    idade?: boolean
    funcoes?: boolean
    identidade?: boolean
    cpf?: boolean
    pis?: boolean
    pix?: boolean
    notas?: boolean
    estabelecimentoCnpj?: boolean
  }

  export type UsuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EquipesGrupos?: boolean | Usuarios$EquipesGruposArgs<ExtArgs>
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
    producao_funcionario?: boolean | Usuarios$producao_funcionarioArgs<ExtArgs>
    _count?: boolean | UsuariosCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UsuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Usuarios"
    objects: {
      EquipesGrupos: Prisma.$EquipesGruposPayload<ExtArgs>[]
      Estabelecimento: Prisma.$EstabelecimentoPayload<ExtArgs>
      producao_funcionario: Prisma.$ProducaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      nome: string
      email: string
      senha: string
      foto: string
      idade: number
      funcoes: string | null
      identidade: string | null
      cpf: string | null
      pis: string | null
      pix: string | null
      notas: string | null
      estabelecimentoCnpj: string
    }, ExtArgs["result"]["usuarios"]>
    composites: {}
  }

  type UsuariosGetPayload<S extends boolean | null | undefined | UsuariosDefaultArgs> = $Result.GetResult<Prisma.$UsuariosPayload, S>

  type UsuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UsuariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UsuariosCountAggregateInputType | true
    }

  export interface UsuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Usuarios'], meta: { name: 'Usuarios' } }
    /**
     * Find zero or one Usuarios that matches the filter.
     * @param {UsuariosFindUniqueArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UsuariosFindUniqueArgs>(args: SelectSubset<T, UsuariosFindUniqueArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Usuarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UsuariosFindUniqueOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UsuariosFindUniqueOrThrowArgs>(args: SelectSubset<T, UsuariosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosFindFirstArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UsuariosFindFirstArgs>(args?: SelectSubset<T, UsuariosFindFirstArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosFindFirstOrThrowArgs} args - Arguments to find a Usuarios
     * @example
     * // Get one Usuarios
     * const usuarios = await prisma.usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UsuariosFindFirstOrThrowArgs>(args?: SelectSubset<T, UsuariosFindFirstOrThrowArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Usuarios
     * const usuarios = await prisma.usuarios.findMany()
     * 
     * // Get first 10 Usuarios
     * const usuarios = await prisma.usuarios.findMany({ take: 10 })
     * 
     * // Only select the `nome`
     * const usuariosWithNomeOnly = await prisma.usuarios.findMany({ select: { nome: true } })
     * 
     */
    findMany<T extends UsuariosFindManyArgs>(args?: SelectSubset<T, UsuariosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Usuarios.
     * @param {UsuariosCreateArgs} args - Arguments to create a Usuarios.
     * @example
     * // Create one Usuarios
     * const Usuarios = await prisma.usuarios.create({
     *   data: {
     *     // ... data to create a Usuarios
     *   }
     * })
     * 
     */
    create<T extends UsuariosCreateArgs>(args: SelectSubset<T, UsuariosCreateArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Usuarios.
     * @param {UsuariosCreateManyArgs} args - Arguments to create many Usuarios.
     * @example
     * // Create many Usuarios
     * const usuarios = await prisma.usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UsuariosCreateManyArgs>(args?: SelectSubset<T, UsuariosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Usuarios.
     * @param {UsuariosDeleteArgs} args - Arguments to delete one Usuarios.
     * @example
     * // Delete one Usuarios
     * const Usuarios = await prisma.usuarios.delete({
     *   where: {
     *     // ... filter to delete one Usuarios
     *   }
     * })
     * 
     */
    delete<T extends UsuariosDeleteArgs>(args: SelectSubset<T, UsuariosDeleteArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Usuarios.
     * @param {UsuariosUpdateArgs} args - Arguments to update one Usuarios.
     * @example
     * // Update one Usuarios
     * const usuarios = await prisma.usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UsuariosUpdateArgs>(args: SelectSubset<T, UsuariosUpdateArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Usuarios.
     * @param {UsuariosDeleteManyArgs} args - Arguments to filter Usuarios to delete.
     * @example
     * // Delete a few Usuarios
     * const { count } = await prisma.usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UsuariosDeleteManyArgs>(args?: SelectSubset<T, UsuariosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Usuarios
     * const usuarios = await prisma.usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UsuariosUpdateManyArgs>(args: SelectSubset<T, UsuariosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Usuarios.
     * @param {UsuariosUpsertArgs} args - Arguments to update or create a Usuarios.
     * @example
     * // Update or create a Usuarios
     * const usuarios = await prisma.usuarios.upsert({
     *   create: {
     *     // ... data to create a Usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Usuarios we want to update
     *   }
     * })
     */
    upsert<T extends UsuariosUpsertArgs>(args: SelectSubset<T, UsuariosUpsertArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosCountArgs} args - Arguments to filter Usuarios to count.
     * @example
     * // Count the number of Usuarios
     * const count = await prisma.usuarios.count({
     *   where: {
     *     // ... the filter for the Usuarios we want to count
     *   }
     * })
    **/
    count<T extends UsuariosCountArgs>(
      args?: Subset<T, UsuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsuariosAggregateArgs>(args: Subset<T, UsuariosAggregateArgs>): Prisma.PrismaPromise<GetUsuariosAggregateType<T>>

    /**
     * Group by Usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UsuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UsuariosGroupByArgs['orderBy'] }
        : { orderBy?: UsuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UsuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Usuarios model
   */
  readonly fields: UsuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UsuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    EquipesGrupos<T extends Usuarios$EquipesGruposArgs<ExtArgs> = {}>(args?: Subset<T, Usuarios$EquipesGruposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "findMany"> | Null>
    Estabelecimento<T extends EstabelecimentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstabelecimentoDefaultArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    producao_funcionario<T extends Usuarios$producao_funcionarioArgs<ExtArgs> = {}>(args?: Subset<T, Usuarios$producao_funcionarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Usuarios model
   */ 
  interface UsuariosFieldRefs {
    readonly nome: FieldRef<"Usuarios", 'String'>
    readonly email: FieldRef<"Usuarios", 'String'>
    readonly senha: FieldRef<"Usuarios", 'String'>
    readonly foto: FieldRef<"Usuarios", 'String'>
    readonly idade: FieldRef<"Usuarios", 'Int'>
    readonly funcoes: FieldRef<"Usuarios", 'String'>
    readonly identidade: FieldRef<"Usuarios", 'String'>
    readonly cpf: FieldRef<"Usuarios", 'String'>
    readonly pis: FieldRef<"Usuarios", 'String'>
    readonly pix: FieldRef<"Usuarios", 'String'>
    readonly notas: FieldRef<"Usuarios", 'String'>
    readonly estabelecimentoCnpj: FieldRef<"Usuarios", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Usuarios findUnique
   */
  export type UsuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where: UsuariosWhereUniqueInput
  }

  /**
   * Usuarios findUniqueOrThrow
   */
  export type UsuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where: UsuariosWhereUniqueInput
  }

  /**
   * Usuarios findFirst
   */
  export type UsuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * Usuarios findFirstOrThrow
   */
  export type UsuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Usuarios.
     */
    cursor?: UsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Usuarios.
     */
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * Usuarios findMany
   */
  export type UsuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter, which Usuarios to fetch.
     */
    where?: UsuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Usuarios to fetch.
     */
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Usuarios.
     */
    cursor?: UsuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Usuarios.
     */
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * Usuarios create
   */
  export type UsuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a Usuarios.
     */
    data: XOR<UsuariosCreateInput, UsuariosUncheckedCreateInput>
  }

  /**
   * Usuarios createMany
   */
  export type UsuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Usuarios.
     */
    data: UsuariosCreateManyInput | UsuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Usuarios update
   */
  export type UsuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a Usuarios.
     */
    data: XOR<UsuariosUpdateInput, UsuariosUncheckedUpdateInput>
    /**
     * Choose, which Usuarios to update.
     */
    where: UsuariosWhereUniqueInput
  }

  /**
   * Usuarios updateMany
   */
  export type UsuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Usuarios.
     */
    data: XOR<UsuariosUpdateManyMutationInput, UsuariosUncheckedUpdateManyInput>
    /**
     * Filter which Usuarios to update
     */
    where?: UsuariosWhereInput
  }

  /**
   * Usuarios upsert
   */
  export type UsuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the Usuarios to update in case it exists.
     */
    where: UsuariosWhereUniqueInput
    /**
     * In case the Usuarios found by the `where` argument doesn't exist, create a new Usuarios with this data.
     */
    create: XOR<UsuariosCreateInput, UsuariosUncheckedCreateInput>
    /**
     * In case the Usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UsuariosUpdateInput, UsuariosUncheckedUpdateInput>
  }

  /**
   * Usuarios delete
   */
  export type UsuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    /**
     * Filter which Usuarios to delete.
     */
    where: UsuariosWhereUniqueInput
  }

  /**
   * Usuarios deleteMany
   */
  export type UsuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Usuarios to delete
     */
    where?: UsuariosWhereInput
  }

  /**
   * Usuarios.EquipesGrupos
   */
  export type Usuarios$EquipesGruposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    where?: EquipesGruposWhereInput
    orderBy?: EquipesGruposOrderByWithRelationInput | EquipesGruposOrderByWithRelationInput[]
    cursor?: EquipesGruposWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipesGruposScalarFieldEnum | EquipesGruposScalarFieldEnum[]
  }

  /**
   * Usuarios.producao_funcionario
   */
  export type Usuarios$producao_funcionarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    where?: ProducaoWhereInput
    orderBy?: ProducaoOrderByWithRelationInput | ProducaoOrderByWithRelationInput[]
    cursor?: ProducaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProducaoScalarFieldEnum | ProducaoScalarFieldEnum[]
  }

  /**
   * Usuarios without action
   */
  export type UsuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
  }


  /**
   * Model Estabelecimento
   */

  export type AggregateEstabelecimento = {
    _count: EstabelecimentoCountAggregateOutputType | null
    _min: EstabelecimentoMinAggregateOutputType | null
    _max: EstabelecimentoMaxAggregateOutputType | null
  }

  export type EstabelecimentoMinAggregateOutputType = {
    cnpj: string | null
  }

  export type EstabelecimentoMaxAggregateOutputType = {
    cnpj: string | null
  }

  export type EstabelecimentoCountAggregateOutputType = {
    cnpj: number
    _all: number
  }


  export type EstabelecimentoMinAggregateInputType = {
    cnpj?: true
  }

  export type EstabelecimentoMaxAggregateInputType = {
    cnpj?: true
  }

  export type EstabelecimentoCountAggregateInputType = {
    cnpj?: true
    _all?: true
  }

  export type EstabelecimentoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estabelecimento to aggregate.
     */
    where?: EstabelecimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estabelecimentos to fetch.
     */
    orderBy?: EstabelecimentoOrderByWithRelationInput | EstabelecimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EstabelecimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estabelecimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estabelecimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Estabelecimentos
    **/
    _count?: true | EstabelecimentoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EstabelecimentoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EstabelecimentoMaxAggregateInputType
  }

  export type GetEstabelecimentoAggregateType<T extends EstabelecimentoAggregateArgs> = {
        [P in keyof T & keyof AggregateEstabelecimento]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstabelecimento[P]>
      : GetScalarType<T[P], AggregateEstabelecimento[P]>
  }




  export type EstabelecimentoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EstabelecimentoWhereInput
    orderBy?: EstabelecimentoOrderByWithAggregationInput | EstabelecimentoOrderByWithAggregationInput[]
    by: EstabelecimentoScalarFieldEnum[] | EstabelecimentoScalarFieldEnum
    having?: EstabelecimentoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EstabelecimentoCountAggregateInputType | true
    _min?: EstabelecimentoMinAggregateInputType
    _max?: EstabelecimentoMaxAggregateInputType
  }

  export type EstabelecimentoGroupByOutputType = {
    cnpj: string
    _count: EstabelecimentoCountAggregateOutputType | null
    _min: EstabelecimentoMinAggregateOutputType | null
    _max: EstabelecimentoMaxAggregateOutputType | null
  }

  type GetEstabelecimentoGroupByPayload<T extends EstabelecimentoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EstabelecimentoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EstabelecimentoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EstabelecimentoGroupByOutputType[P]>
            : GetScalarType<T[P], EstabelecimentoGroupByOutputType[P]>
        }
      >
    >


  export type EstabelecimentoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    cnpj?: boolean
    usuarios?: boolean | Estabelecimento$usuariosArgs<ExtArgs>
    EquipesGrupos?: boolean | Estabelecimento$EquipesGruposArgs<ExtArgs>
    estoque_tecidos?: boolean | Estabelecimento$estoque_tecidosArgs<ExtArgs>
    estoque_agulhas?: boolean | Estabelecimento$estoque_agulhasArgs<ExtArgs>
    tarefas?: boolean | Estabelecimento$tarefasArgs<ExtArgs>
    PecasOP?: boolean | Estabelecimento$PecasOPArgs<ExtArgs>
    Producao?: boolean | Estabelecimento$ProducaoArgs<ExtArgs>
    _count?: boolean | EstabelecimentoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estabelecimento"]>


  export type EstabelecimentoSelectScalar = {
    cnpj?: boolean
  }

  export type EstabelecimentoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | Estabelecimento$usuariosArgs<ExtArgs>
    EquipesGrupos?: boolean | Estabelecimento$EquipesGruposArgs<ExtArgs>
    estoque_tecidos?: boolean | Estabelecimento$estoque_tecidosArgs<ExtArgs>
    estoque_agulhas?: boolean | Estabelecimento$estoque_agulhasArgs<ExtArgs>
    tarefas?: boolean | Estabelecimento$tarefasArgs<ExtArgs>
    PecasOP?: boolean | Estabelecimento$PecasOPArgs<ExtArgs>
    Producao?: boolean | Estabelecimento$ProducaoArgs<ExtArgs>
    _count?: boolean | EstabelecimentoCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $EstabelecimentoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Estabelecimento"
    objects: {
      usuarios: Prisma.$UsuariosPayload<ExtArgs>[]
      EquipesGrupos: Prisma.$EquipesGruposPayload<ExtArgs>[]
      estoque_tecidos: Prisma.$Estoque_TecidosPayload<ExtArgs>[]
      estoque_agulhas: Prisma.$Estoque_AgulhasPayload<ExtArgs>[]
      tarefas: Prisma.$TarefasPayload<ExtArgs>[]
      PecasOP: Prisma.$PecasOPPayload<ExtArgs>[]
      Producao: Prisma.$ProducaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      cnpj: string
    }, ExtArgs["result"]["estabelecimento"]>
    composites: {}
  }

  type EstabelecimentoGetPayload<S extends boolean | null | undefined | EstabelecimentoDefaultArgs> = $Result.GetResult<Prisma.$EstabelecimentoPayload, S>

  type EstabelecimentoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EstabelecimentoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EstabelecimentoCountAggregateInputType | true
    }

  export interface EstabelecimentoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Estabelecimento'], meta: { name: 'Estabelecimento' } }
    /**
     * Find zero or one Estabelecimento that matches the filter.
     * @param {EstabelecimentoFindUniqueArgs} args - Arguments to find a Estabelecimento
     * @example
     * // Get one Estabelecimento
     * const estabelecimento = await prisma.estabelecimento.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EstabelecimentoFindUniqueArgs>(args: SelectSubset<T, EstabelecimentoFindUniqueArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Estabelecimento that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EstabelecimentoFindUniqueOrThrowArgs} args - Arguments to find a Estabelecimento
     * @example
     * // Get one Estabelecimento
     * const estabelecimento = await prisma.estabelecimento.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EstabelecimentoFindUniqueOrThrowArgs>(args: SelectSubset<T, EstabelecimentoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Estabelecimento that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstabelecimentoFindFirstArgs} args - Arguments to find a Estabelecimento
     * @example
     * // Get one Estabelecimento
     * const estabelecimento = await prisma.estabelecimento.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EstabelecimentoFindFirstArgs>(args?: SelectSubset<T, EstabelecimentoFindFirstArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Estabelecimento that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstabelecimentoFindFirstOrThrowArgs} args - Arguments to find a Estabelecimento
     * @example
     * // Get one Estabelecimento
     * const estabelecimento = await prisma.estabelecimento.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EstabelecimentoFindFirstOrThrowArgs>(args?: SelectSubset<T, EstabelecimentoFindFirstOrThrowArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Estabelecimentos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstabelecimentoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimento.findMany()
     * 
     * // Get first 10 Estabelecimentos
     * const estabelecimentos = await prisma.estabelecimento.findMany({ take: 10 })
     * 
     * // Only select the `cnpj`
     * const estabelecimentoWithCnpjOnly = await prisma.estabelecimento.findMany({ select: { cnpj: true } })
     * 
     */
    findMany<T extends EstabelecimentoFindManyArgs>(args?: SelectSubset<T, EstabelecimentoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Estabelecimento.
     * @param {EstabelecimentoCreateArgs} args - Arguments to create a Estabelecimento.
     * @example
     * // Create one Estabelecimento
     * const Estabelecimento = await prisma.estabelecimento.create({
     *   data: {
     *     // ... data to create a Estabelecimento
     *   }
     * })
     * 
     */
    create<T extends EstabelecimentoCreateArgs>(args: SelectSubset<T, EstabelecimentoCreateArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Estabelecimentos.
     * @param {EstabelecimentoCreateManyArgs} args - Arguments to create many Estabelecimentos.
     * @example
     * // Create many Estabelecimentos
     * const estabelecimento = await prisma.estabelecimento.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EstabelecimentoCreateManyArgs>(args?: SelectSubset<T, EstabelecimentoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Estabelecimento.
     * @param {EstabelecimentoDeleteArgs} args - Arguments to delete one Estabelecimento.
     * @example
     * // Delete one Estabelecimento
     * const Estabelecimento = await prisma.estabelecimento.delete({
     *   where: {
     *     // ... filter to delete one Estabelecimento
     *   }
     * })
     * 
     */
    delete<T extends EstabelecimentoDeleteArgs>(args: SelectSubset<T, EstabelecimentoDeleteArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Estabelecimento.
     * @param {EstabelecimentoUpdateArgs} args - Arguments to update one Estabelecimento.
     * @example
     * // Update one Estabelecimento
     * const estabelecimento = await prisma.estabelecimento.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EstabelecimentoUpdateArgs>(args: SelectSubset<T, EstabelecimentoUpdateArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Estabelecimentos.
     * @param {EstabelecimentoDeleteManyArgs} args - Arguments to filter Estabelecimentos to delete.
     * @example
     * // Delete a few Estabelecimentos
     * const { count } = await prisma.estabelecimento.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EstabelecimentoDeleteManyArgs>(args?: SelectSubset<T, EstabelecimentoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estabelecimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstabelecimentoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estabelecimentos
     * const estabelecimento = await prisma.estabelecimento.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EstabelecimentoUpdateManyArgs>(args: SelectSubset<T, EstabelecimentoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Estabelecimento.
     * @param {EstabelecimentoUpsertArgs} args - Arguments to update or create a Estabelecimento.
     * @example
     * // Update or create a Estabelecimento
     * const estabelecimento = await prisma.estabelecimento.upsert({
     *   create: {
     *     // ... data to create a Estabelecimento
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estabelecimento we want to update
     *   }
     * })
     */
    upsert<T extends EstabelecimentoUpsertArgs>(args: SelectSubset<T, EstabelecimentoUpsertArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Estabelecimentos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstabelecimentoCountArgs} args - Arguments to filter Estabelecimentos to count.
     * @example
     * // Count the number of Estabelecimentos
     * const count = await prisma.estabelecimento.count({
     *   where: {
     *     // ... the filter for the Estabelecimentos we want to count
     *   }
     * })
    **/
    count<T extends EstabelecimentoCountArgs>(
      args?: Subset<T, EstabelecimentoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EstabelecimentoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estabelecimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstabelecimentoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EstabelecimentoAggregateArgs>(args: Subset<T, EstabelecimentoAggregateArgs>): Prisma.PrismaPromise<GetEstabelecimentoAggregateType<T>>

    /**
     * Group by Estabelecimento.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EstabelecimentoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EstabelecimentoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EstabelecimentoGroupByArgs['orderBy'] }
        : { orderBy?: EstabelecimentoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EstabelecimentoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstabelecimentoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Estabelecimento model
   */
  readonly fields: EstabelecimentoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Estabelecimento.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EstabelecimentoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    usuarios<T extends Estabelecimento$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, Estabelecimento$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findMany"> | Null>
    EquipesGrupos<T extends Estabelecimento$EquipesGruposArgs<ExtArgs> = {}>(args?: Subset<T, Estabelecimento$EquipesGruposArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "findMany"> | Null>
    estoque_tecidos<T extends Estabelecimento$estoque_tecidosArgs<ExtArgs> = {}>(args?: Subset<T, Estabelecimento$estoque_tecidosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Estoque_TecidosPayload<ExtArgs>, T, "findMany"> | Null>
    estoque_agulhas<T extends Estabelecimento$estoque_agulhasArgs<ExtArgs> = {}>(args?: Subset<T, Estabelecimento$estoque_agulhasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Estoque_AgulhasPayload<ExtArgs>, T, "findMany"> | Null>
    tarefas<T extends Estabelecimento$tarefasArgs<ExtArgs> = {}>(args?: Subset<T, Estabelecimento$tarefasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TarefasPayload<ExtArgs>, T, "findMany"> | Null>
    PecasOP<T extends Estabelecimento$PecasOPArgs<ExtArgs> = {}>(args?: Subset<T, Estabelecimento$PecasOPArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "findMany"> | Null>
    Producao<T extends Estabelecimento$ProducaoArgs<ExtArgs> = {}>(args?: Subset<T, Estabelecimento$ProducaoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Estabelecimento model
   */ 
  interface EstabelecimentoFieldRefs {
    readonly cnpj: FieldRef<"Estabelecimento", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Estabelecimento findUnique
   */
  export type EstabelecimentoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estabelecimento
     */
    select?: EstabelecimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstabelecimentoInclude<ExtArgs> | null
    /**
     * Filter, which Estabelecimento to fetch.
     */
    where: EstabelecimentoWhereUniqueInput
  }

  /**
   * Estabelecimento findUniqueOrThrow
   */
  export type EstabelecimentoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estabelecimento
     */
    select?: EstabelecimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstabelecimentoInclude<ExtArgs> | null
    /**
     * Filter, which Estabelecimento to fetch.
     */
    where: EstabelecimentoWhereUniqueInput
  }

  /**
   * Estabelecimento findFirst
   */
  export type EstabelecimentoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estabelecimento
     */
    select?: EstabelecimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstabelecimentoInclude<ExtArgs> | null
    /**
     * Filter, which Estabelecimento to fetch.
     */
    where?: EstabelecimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estabelecimentos to fetch.
     */
    orderBy?: EstabelecimentoOrderByWithRelationInput | EstabelecimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estabelecimentos.
     */
    cursor?: EstabelecimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estabelecimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estabelecimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estabelecimentos.
     */
    distinct?: EstabelecimentoScalarFieldEnum | EstabelecimentoScalarFieldEnum[]
  }

  /**
   * Estabelecimento findFirstOrThrow
   */
  export type EstabelecimentoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estabelecimento
     */
    select?: EstabelecimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstabelecimentoInclude<ExtArgs> | null
    /**
     * Filter, which Estabelecimento to fetch.
     */
    where?: EstabelecimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estabelecimentos to fetch.
     */
    orderBy?: EstabelecimentoOrderByWithRelationInput | EstabelecimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estabelecimentos.
     */
    cursor?: EstabelecimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estabelecimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estabelecimentos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estabelecimentos.
     */
    distinct?: EstabelecimentoScalarFieldEnum | EstabelecimentoScalarFieldEnum[]
  }

  /**
   * Estabelecimento findMany
   */
  export type EstabelecimentoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estabelecimento
     */
    select?: EstabelecimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstabelecimentoInclude<ExtArgs> | null
    /**
     * Filter, which Estabelecimentos to fetch.
     */
    where?: EstabelecimentoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estabelecimentos to fetch.
     */
    orderBy?: EstabelecimentoOrderByWithRelationInput | EstabelecimentoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Estabelecimentos.
     */
    cursor?: EstabelecimentoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estabelecimentos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estabelecimentos.
     */
    skip?: number
    distinct?: EstabelecimentoScalarFieldEnum | EstabelecimentoScalarFieldEnum[]
  }

  /**
   * Estabelecimento create
   */
  export type EstabelecimentoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estabelecimento
     */
    select?: EstabelecimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstabelecimentoInclude<ExtArgs> | null
    /**
     * The data needed to create a Estabelecimento.
     */
    data: XOR<EstabelecimentoCreateInput, EstabelecimentoUncheckedCreateInput>
  }

  /**
   * Estabelecimento createMany
   */
  export type EstabelecimentoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Estabelecimentos.
     */
    data: EstabelecimentoCreateManyInput | EstabelecimentoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Estabelecimento update
   */
  export type EstabelecimentoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estabelecimento
     */
    select?: EstabelecimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstabelecimentoInclude<ExtArgs> | null
    /**
     * The data needed to update a Estabelecimento.
     */
    data: XOR<EstabelecimentoUpdateInput, EstabelecimentoUncheckedUpdateInput>
    /**
     * Choose, which Estabelecimento to update.
     */
    where: EstabelecimentoWhereUniqueInput
  }

  /**
   * Estabelecimento updateMany
   */
  export type EstabelecimentoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Estabelecimentos.
     */
    data: XOR<EstabelecimentoUpdateManyMutationInput, EstabelecimentoUncheckedUpdateManyInput>
    /**
     * Filter which Estabelecimentos to update
     */
    where?: EstabelecimentoWhereInput
  }

  /**
   * Estabelecimento upsert
   */
  export type EstabelecimentoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estabelecimento
     */
    select?: EstabelecimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstabelecimentoInclude<ExtArgs> | null
    /**
     * The filter to search for the Estabelecimento to update in case it exists.
     */
    where: EstabelecimentoWhereUniqueInput
    /**
     * In case the Estabelecimento found by the `where` argument doesn't exist, create a new Estabelecimento with this data.
     */
    create: XOR<EstabelecimentoCreateInput, EstabelecimentoUncheckedCreateInput>
    /**
     * In case the Estabelecimento was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EstabelecimentoUpdateInput, EstabelecimentoUncheckedUpdateInput>
  }

  /**
   * Estabelecimento delete
   */
  export type EstabelecimentoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estabelecimento
     */
    select?: EstabelecimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstabelecimentoInclude<ExtArgs> | null
    /**
     * Filter which Estabelecimento to delete.
     */
    where: EstabelecimentoWhereUniqueInput
  }

  /**
   * Estabelecimento deleteMany
   */
  export type EstabelecimentoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estabelecimentos to delete
     */
    where?: EstabelecimentoWhereInput
  }

  /**
   * Estabelecimento.usuarios
   */
  export type Estabelecimento$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Usuarios
     */
    select?: UsuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UsuariosInclude<ExtArgs> | null
    where?: UsuariosWhereInput
    orderBy?: UsuariosOrderByWithRelationInput | UsuariosOrderByWithRelationInput[]
    cursor?: UsuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UsuariosScalarFieldEnum | UsuariosScalarFieldEnum[]
  }

  /**
   * Estabelecimento.EquipesGrupos
   */
  export type Estabelecimento$EquipesGruposArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    where?: EquipesGruposWhereInput
    orderBy?: EquipesGruposOrderByWithRelationInput | EquipesGruposOrderByWithRelationInput[]
    cursor?: EquipesGruposWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EquipesGruposScalarFieldEnum | EquipesGruposScalarFieldEnum[]
  }

  /**
   * Estabelecimento.estoque_tecidos
   */
  export type Estabelecimento$estoque_tecidosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
    where?: Estoque_TecidosWhereInput
    orderBy?: Estoque_TecidosOrderByWithRelationInput | Estoque_TecidosOrderByWithRelationInput[]
    cursor?: Estoque_TecidosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Estoque_TecidosScalarFieldEnum | Estoque_TecidosScalarFieldEnum[]
  }

  /**
   * Estabelecimento.estoque_agulhas
   */
  export type Estabelecimento$estoque_agulhasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
    where?: Estoque_AgulhasWhereInput
    orderBy?: Estoque_AgulhasOrderByWithRelationInput | Estoque_AgulhasOrderByWithRelationInput[]
    cursor?: Estoque_AgulhasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Estoque_AgulhasScalarFieldEnum | Estoque_AgulhasScalarFieldEnum[]
  }

  /**
   * Estabelecimento.tarefas
   */
  export type Estabelecimento$tarefasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
    where?: TarefasWhereInput
    orderBy?: TarefasOrderByWithRelationInput | TarefasOrderByWithRelationInput[]
    cursor?: TarefasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TarefasScalarFieldEnum | TarefasScalarFieldEnum[]
  }

  /**
   * Estabelecimento.PecasOP
   */
  export type Estabelecimento$PecasOPArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
    where?: PecasOPWhereInput
    orderBy?: PecasOPOrderByWithRelationInput | PecasOPOrderByWithRelationInput[]
    cursor?: PecasOPWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PecasOPScalarFieldEnum | PecasOPScalarFieldEnum[]
  }

  /**
   * Estabelecimento.Producao
   */
  export type Estabelecimento$ProducaoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    where?: ProducaoWhereInput
    orderBy?: ProducaoOrderByWithRelationInput | ProducaoOrderByWithRelationInput[]
    cursor?: ProducaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProducaoScalarFieldEnum | ProducaoScalarFieldEnum[]
  }

  /**
   * Estabelecimento without action
   */
  export type EstabelecimentoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estabelecimento
     */
    select?: EstabelecimentoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EstabelecimentoInclude<ExtArgs> | null
  }


  /**
   * Model PecasOP
   */

  export type AggregatePecasOP = {
    _count: PecasOPCountAggregateOutputType | null
    _avg: PecasOPAvgAggregateOutputType | null
    _sum: PecasOPSumAggregateOutputType | null
    _min: PecasOPMinAggregateOutputType | null
    _max: PecasOPMaxAggregateOutputType | null
  }

  export type PecasOPAvgAggregateOutputType = {
    id_da_op: number | null
    quantidade_pecas: number | null
    valor_peca: number | null
    tempo_estimado: number | null
    tempo_esperado: number | null
  }

  export type PecasOPSumAggregateOutputType = {
    id_da_op: number | null
    quantidade_pecas: number | null
    valor_peca: number | null
    tempo_estimado: number | null
    tempo_esperado: number | null
  }

  export type PecasOPMinAggregateOutputType = {
    id_da_op: number | null
    id_Estabelecimento: string | null
    status: string | null
    descricao: string | null
    quantidade_pecas: number | null
    pedido_por: string | null
    valor_peca: number | null
    data_do_pedido: string | null
    data_de_entrega: string | null
    notas: string | null
    tempo_estimado: number | null
    tempo_esperado: number | null
  }

  export type PecasOPMaxAggregateOutputType = {
    id_da_op: number | null
    id_Estabelecimento: string | null
    status: string | null
    descricao: string | null
    quantidade_pecas: number | null
    pedido_por: string | null
    valor_peca: number | null
    data_do_pedido: string | null
    data_de_entrega: string | null
    notas: string | null
    tempo_estimado: number | null
    tempo_esperado: number | null
  }

  export type PecasOPCountAggregateOutputType = {
    id_da_op: number
    id_Estabelecimento: number
    status: number
    descricao: number
    quantidade_pecas: number
    pedido_por: number
    valor_peca: number
    data_do_pedido: number
    data_de_entrega: number
    notas: number
    tempo_estimado: number
    tempo_esperado: number
    _all: number
  }


  export type PecasOPAvgAggregateInputType = {
    id_da_op?: true
    quantidade_pecas?: true
    valor_peca?: true
    tempo_estimado?: true
    tempo_esperado?: true
  }

  export type PecasOPSumAggregateInputType = {
    id_da_op?: true
    quantidade_pecas?: true
    valor_peca?: true
    tempo_estimado?: true
    tempo_esperado?: true
  }

  export type PecasOPMinAggregateInputType = {
    id_da_op?: true
    id_Estabelecimento?: true
    status?: true
    descricao?: true
    quantidade_pecas?: true
    pedido_por?: true
    valor_peca?: true
    data_do_pedido?: true
    data_de_entrega?: true
    notas?: true
    tempo_estimado?: true
    tempo_esperado?: true
  }

  export type PecasOPMaxAggregateInputType = {
    id_da_op?: true
    id_Estabelecimento?: true
    status?: true
    descricao?: true
    quantidade_pecas?: true
    pedido_por?: true
    valor_peca?: true
    data_do_pedido?: true
    data_de_entrega?: true
    notas?: true
    tempo_estimado?: true
    tempo_esperado?: true
  }

  export type PecasOPCountAggregateInputType = {
    id_da_op?: true
    id_Estabelecimento?: true
    status?: true
    descricao?: true
    quantidade_pecas?: true
    pedido_por?: true
    valor_peca?: true
    data_do_pedido?: true
    data_de_entrega?: true
    notas?: true
    tempo_estimado?: true
    tempo_esperado?: true
    _all?: true
  }

  export type PecasOPAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PecasOP to aggregate.
     */
    where?: PecasOPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PecasOPS to fetch.
     */
    orderBy?: PecasOPOrderByWithRelationInput | PecasOPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PecasOPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PecasOPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PecasOPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PecasOPS
    **/
    _count?: true | PecasOPCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PecasOPAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PecasOPSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PecasOPMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PecasOPMaxAggregateInputType
  }

  export type GetPecasOPAggregateType<T extends PecasOPAggregateArgs> = {
        [P in keyof T & keyof AggregatePecasOP]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePecasOP[P]>
      : GetScalarType<T[P], AggregatePecasOP[P]>
  }




  export type PecasOPGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PecasOPWhereInput
    orderBy?: PecasOPOrderByWithAggregationInput | PecasOPOrderByWithAggregationInput[]
    by: PecasOPScalarFieldEnum[] | PecasOPScalarFieldEnum
    having?: PecasOPScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PecasOPCountAggregateInputType | true
    _avg?: PecasOPAvgAggregateInputType
    _sum?: PecasOPSumAggregateInputType
    _min?: PecasOPMinAggregateInputType
    _max?: PecasOPMaxAggregateInputType
  }

  export type PecasOPGroupByOutputType = {
    id_da_op: number
    id_Estabelecimento: string
    status: string | null
    descricao: string | null
    quantidade_pecas: number | null
    pedido_por: string | null
    valor_peca: number | null
    data_do_pedido: string | null
    data_de_entrega: string | null
    notas: string | null
    tempo_estimado: number | null
    tempo_esperado: number | null
    _count: PecasOPCountAggregateOutputType | null
    _avg: PecasOPAvgAggregateOutputType | null
    _sum: PecasOPSumAggregateOutputType | null
    _min: PecasOPMinAggregateOutputType | null
    _max: PecasOPMaxAggregateOutputType | null
  }

  type GetPecasOPGroupByPayload<T extends PecasOPGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PecasOPGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PecasOPGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PecasOPGroupByOutputType[P]>
            : GetScalarType<T[P], PecasOPGroupByOutputType[P]>
        }
      >
    >


  export type PecasOPSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_da_op?: boolean
    id_Estabelecimento?: boolean
    status?: boolean
    descricao?: boolean
    quantidade_pecas?: boolean
    pedido_por?: boolean
    valor_peca?: boolean
    data_do_pedido?: boolean
    data_de_entrega?: boolean
    notas?: boolean
    tempo_estimado?: boolean
    tempo_esperado?: boolean
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
    producao_peca?: boolean | PecasOP$producao_pecaArgs<ExtArgs>
    etapas?: boolean | PecasOP$etapasArgs<ExtArgs>
    _count?: boolean | PecasOPCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pecasOP"]>


  export type PecasOPSelectScalar = {
    id_da_op?: boolean
    id_Estabelecimento?: boolean
    status?: boolean
    descricao?: boolean
    quantidade_pecas?: boolean
    pedido_por?: boolean
    valor_peca?: boolean
    data_do_pedido?: boolean
    data_de_entrega?: boolean
    notas?: boolean
    tempo_estimado?: boolean
    tempo_esperado?: boolean
  }

  export type PecasOPInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
    producao_peca?: boolean | PecasOP$producao_pecaArgs<ExtArgs>
    etapas?: boolean | PecasOP$etapasArgs<ExtArgs>
    _count?: boolean | PecasOPCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PecasOPPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PecasOP"
    objects: {
      Estabelecimento: Prisma.$EstabelecimentoPayload<ExtArgs>
      producao_peca: Prisma.$ProducaoPayload<ExtArgs>[]
      etapas: Prisma.$PecasEtapasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_da_op: number
      id_Estabelecimento: string
      status: string | null
      descricao: string | null
      quantidade_pecas: number | null
      pedido_por: string | null
      valor_peca: number | null
      data_do_pedido: string | null
      data_de_entrega: string | null
      notas: string | null
      tempo_estimado: number | null
      tempo_esperado: number | null
    }, ExtArgs["result"]["pecasOP"]>
    composites: {}
  }

  type PecasOPGetPayload<S extends boolean | null | undefined | PecasOPDefaultArgs> = $Result.GetResult<Prisma.$PecasOPPayload, S>

  type PecasOPCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PecasOPFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PecasOPCountAggregateInputType | true
    }

  export interface PecasOPDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PecasOP'], meta: { name: 'PecasOP' } }
    /**
     * Find zero or one PecasOP that matches the filter.
     * @param {PecasOPFindUniqueArgs} args - Arguments to find a PecasOP
     * @example
     * // Get one PecasOP
     * const pecasOP = await prisma.pecasOP.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PecasOPFindUniqueArgs>(args: SelectSubset<T, PecasOPFindUniqueArgs<ExtArgs>>): Prisma__PecasOPClient<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PecasOP that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PecasOPFindUniqueOrThrowArgs} args - Arguments to find a PecasOP
     * @example
     * // Get one PecasOP
     * const pecasOP = await prisma.pecasOP.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PecasOPFindUniqueOrThrowArgs>(args: SelectSubset<T, PecasOPFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PecasOPClient<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PecasOP that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasOPFindFirstArgs} args - Arguments to find a PecasOP
     * @example
     * // Get one PecasOP
     * const pecasOP = await prisma.pecasOP.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PecasOPFindFirstArgs>(args?: SelectSubset<T, PecasOPFindFirstArgs<ExtArgs>>): Prisma__PecasOPClient<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PecasOP that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasOPFindFirstOrThrowArgs} args - Arguments to find a PecasOP
     * @example
     * // Get one PecasOP
     * const pecasOP = await prisma.pecasOP.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PecasOPFindFirstOrThrowArgs>(args?: SelectSubset<T, PecasOPFindFirstOrThrowArgs<ExtArgs>>): Prisma__PecasOPClient<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PecasOPS that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasOPFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PecasOPS
     * const pecasOPS = await prisma.pecasOP.findMany()
     * 
     * // Get first 10 PecasOPS
     * const pecasOPS = await prisma.pecasOP.findMany({ take: 10 })
     * 
     * // Only select the `id_da_op`
     * const pecasOPWithId_da_opOnly = await prisma.pecasOP.findMany({ select: { id_da_op: true } })
     * 
     */
    findMany<T extends PecasOPFindManyArgs>(args?: SelectSubset<T, PecasOPFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PecasOP.
     * @param {PecasOPCreateArgs} args - Arguments to create a PecasOP.
     * @example
     * // Create one PecasOP
     * const PecasOP = await prisma.pecasOP.create({
     *   data: {
     *     // ... data to create a PecasOP
     *   }
     * })
     * 
     */
    create<T extends PecasOPCreateArgs>(args: SelectSubset<T, PecasOPCreateArgs<ExtArgs>>): Prisma__PecasOPClient<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PecasOPS.
     * @param {PecasOPCreateManyArgs} args - Arguments to create many PecasOPS.
     * @example
     * // Create many PecasOPS
     * const pecasOP = await prisma.pecasOP.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PecasOPCreateManyArgs>(args?: SelectSubset<T, PecasOPCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PecasOP.
     * @param {PecasOPDeleteArgs} args - Arguments to delete one PecasOP.
     * @example
     * // Delete one PecasOP
     * const PecasOP = await prisma.pecasOP.delete({
     *   where: {
     *     // ... filter to delete one PecasOP
     *   }
     * })
     * 
     */
    delete<T extends PecasOPDeleteArgs>(args: SelectSubset<T, PecasOPDeleteArgs<ExtArgs>>): Prisma__PecasOPClient<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PecasOP.
     * @param {PecasOPUpdateArgs} args - Arguments to update one PecasOP.
     * @example
     * // Update one PecasOP
     * const pecasOP = await prisma.pecasOP.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PecasOPUpdateArgs>(args: SelectSubset<T, PecasOPUpdateArgs<ExtArgs>>): Prisma__PecasOPClient<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PecasOPS.
     * @param {PecasOPDeleteManyArgs} args - Arguments to filter PecasOPS to delete.
     * @example
     * // Delete a few PecasOPS
     * const { count } = await prisma.pecasOP.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PecasOPDeleteManyArgs>(args?: SelectSubset<T, PecasOPDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PecasOPS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasOPUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PecasOPS
     * const pecasOP = await prisma.pecasOP.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PecasOPUpdateManyArgs>(args: SelectSubset<T, PecasOPUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PecasOP.
     * @param {PecasOPUpsertArgs} args - Arguments to update or create a PecasOP.
     * @example
     * // Update or create a PecasOP
     * const pecasOP = await prisma.pecasOP.upsert({
     *   create: {
     *     // ... data to create a PecasOP
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PecasOP we want to update
     *   }
     * })
     */
    upsert<T extends PecasOPUpsertArgs>(args: SelectSubset<T, PecasOPUpsertArgs<ExtArgs>>): Prisma__PecasOPClient<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PecasOPS.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasOPCountArgs} args - Arguments to filter PecasOPS to count.
     * @example
     * // Count the number of PecasOPS
     * const count = await prisma.pecasOP.count({
     *   where: {
     *     // ... the filter for the PecasOPS we want to count
     *   }
     * })
    **/
    count<T extends PecasOPCountArgs>(
      args?: Subset<T, PecasOPCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PecasOPCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PecasOP.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasOPAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PecasOPAggregateArgs>(args: Subset<T, PecasOPAggregateArgs>): Prisma.PrismaPromise<GetPecasOPAggregateType<T>>

    /**
     * Group by PecasOP.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasOPGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PecasOPGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PecasOPGroupByArgs['orderBy'] }
        : { orderBy?: PecasOPGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PecasOPGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPecasOPGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PecasOP model
   */
  readonly fields: PecasOPFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PecasOP.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PecasOPClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Estabelecimento<T extends EstabelecimentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstabelecimentoDefaultArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    producao_peca<T extends PecasOP$producao_pecaArgs<ExtArgs> = {}>(args?: Subset<T, PecasOP$producao_pecaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "findMany"> | Null>
    etapas<T extends PecasOP$etapasArgs<ExtArgs> = {}>(args?: Subset<T, PecasOP$etapasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PecasOP model
   */ 
  interface PecasOPFieldRefs {
    readonly id_da_op: FieldRef<"PecasOP", 'Int'>
    readonly id_Estabelecimento: FieldRef<"PecasOP", 'String'>
    readonly status: FieldRef<"PecasOP", 'String'>
    readonly descricao: FieldRef<"PecasOP", 'String'>
    readonly quantidade_pecas: FieldRef<"PecasOP", 'Int'>
    readonly pedido_por: FieldRef<"PecasOP", 'String'>
    readonly valor_peca: FieldRef<"PecasOP", 'Float'>
    readonly data_do_pedido: FieldRef<"PecasOP", 'String'>
    readonly data_de_entrega: FieldRef<"PecasOP", 'String'>
    readonly notas: FieldRef<"PecasOP", 'String'>
    readonly tempo_estimado: FieldRef<"PecasOP", 'Float'>
    readonly tempo_esperado: FieldRef<"PecasOP", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * PecasOP findUnique
   */
  export type PecasOPFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
    /**
     * Filter, which PecasOP to fetch.
     */
    where: PecasOPWhereUniqueInput
  }

  /**
   * PecasOP findUniqueOrThrow
   */
  export type PecasOPFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
    /**
     * Filter, which PecasOP to fetch.
     */
    where: PecasOPWhereUniqueInput
  }

  /**
   * PecasOP findFirst
   */
  export type PecasOPFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
    /**
     * Filter, which PecasOP to fetch.
     */
    where?: PecasOPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PecasOPS to fetch.
     */
    orderBy?: PecasOPOrderByWithRelationInput | PecasOPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PecasOPS.
     */
    cursor?: PecasOPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PecasOPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PecasOPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PecasOPS.
     */
    distinct?: PecasOPScalarFieldEnum | PecasOPScalarFieldEnum[]
  }

  /**
   * PecasOP findFirstOrThrow
   */
  export type PecasOPFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
    /**
     * Filter, which PecasOP to fetch.
     */
    where?: PecasOPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PecasOPS to fetch.
     */
    orderBy?: PecasOPOrderByWithRelationInput | PecasOPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PecasOPS.
     */
    cursor?: PecasOPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PecasOPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PecasOPS.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PecasOPS.
     */
    distinct?: PecasOPScalarFieldEnum | PecasOPScalarFieldEnum[]
  }

  /**
   * PecasOP findMany
   */
  export type PecasOPFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
    /**
     * Filter, which PecasOPS to fetch.
     */
    where?: PecasOPWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PecasOPS to fetch.
     */
    orderBy?: PecasOPOrderByWithRelationInput | PecasOPOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PecasOPS.
     */
    cursor?: PecasOPWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PecasOPS from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PecasOPS.
     */
    skip?: number
    distinct?: PecasOPScalarFieldEnum | PecasOPScalarFieldEnum[]
  }

  /**
   * PecasOP create
   */
  export type PecasOPCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
    /**
     * The data needed to create a PecasOP.
     */
    data: XOR<PecasOPCreateInput, PecasOPUncheckedCreateInput>
  }

  /**
   * PecasOP createMany
   */
  export type PecasOPCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PecasOPS.
     */
    data: PecasOPCreateManyInput | PecasOPCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PecasOP update
   */
  export type PecasOPUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
    /**
     * The data needed to update a PecasOP.
     */
    data: XOR<PecasOPUpdateInput, PecasOPUncheckedUpdateInput>
    /**
     * Choose, which PecasOP to update.
     */
    where: PecasOPWhereUniqueInput
  }

  /**
   * PecasOP updateMany
   */
  export type PecasOPUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PecasOPS.
     */
    data: XOR<PecasOPUpdateManyMutationInput, PecasOPUncheckedUpdateManyInput>
    /**
     * Filter which PecasOPS to update
     */
    where?: PecasOPWhereInput
  }

  /**
   * PecasOP upsert
   */
  export type PecasOPUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
    /**
     * The filter to search for the PecasOP to update in case it exists.
     */
    where: PecasOPWhereUniqueInput
    /**
     * In case the PecasOP found by the `where` argument doesn't exist, create a new PecasOP with this data.
     */
    create: XOR<PecasOPCreateInput, PecasOPUncheckedCreateInput>
    /**
     * In case the PecasOP was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PecasOPUpdateInput, PecasOPUncheckedUpdateInput>
  }

  /**
   * PecasOP delete
   */
  export type PecasOPDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
    /**
     * Filter which PecasOP to delete.
     */
    where: PecasOPWhereUniqueInput
  }

  /**
   * PecasOP deleteMany
   */
  export type PecasOPDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PecasOPS to delete
     */
    where?: PecasOPWhereInput
  }

  /**
   * PecasOP.producao_peca
   */
  export type PecasOP$producao_pecaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    where?: ProducaoWhereInput
    orderBy?: ProducaoOrderByWithRelationInput | ProducaoOrderByWithRelationInput[]
    cursor?: ProducaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProducaoScalarFieldEnum | ProducaoScalarFieldEnum[]
  }

  /**
   * PecasOP.etapas
   */
  export type PecasOP$etapasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    where?: PecasEtapasWhereInput
    orderBy?: PecasEtapasOrderByWithRelationInput | PecasEtapasOrderByWithRelationInput[]
    cursor?: PecasEtapasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PecasEtapasScalarFieldEnum | PecasEtapasScalarFieldEnum[]
  }

  /**
   * PecasOP without action
   */
  export type PecasOPDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasOP
     */
    select?: PecasOPSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasOPInclude<ExtArgs> | null
  }


  /**
   * Model Etapa
   */

  export type AggregateEtapa = {
    _count: EtapaCountAggregateOutputType | null
    _avg: EtapaAvgAggregateOutputType | null
    _sum: EtapaSumAggregateOutputType | null
    _min: EtapaMinAggregateOutputType | null
    _max: EtapaMaxAggregateOutputType | null
  }

  export type EtapaAvgAggregateOutputType = {
    id_da_funcao: number | null
  }

  export type EtapaSumAggregateOutputType = {
    id_da_funcao: number | null
  }

  export type EtapaMinAggregateOutputType = {
    id_da_funcao: number | null
    descricao: string | null
  }

  export type EtapaMaxAggregateOutputType = {
    id_da_funcao: number | null
    descricao: string | null
  }

  export type EtapaCountAggregateOutputType = {
    id_da_funcao: number
    descricao: number
    _all: number
  }


  export type EtapaAvgAggregateInputType = {
    id_da_funcao?: true
  }

  export type EtapaSumAggregateInputType = {
    id_da_funcao?: true
  }

  export type EtapaMinAggregateInputType = {
    id_da_funcao?: true
    descricao?: true
  }

  export type EtapaMaxAggregateInputType = {
    id_da_funcao?: true
    descricao?: true
  }

  export type EtapaCountAggregateInputType = {
    id_da_funcao?: true
    descricao?: true
    _all?: true
  }

  export type EtapaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Etapa to aggregate.
     */
    where?: EtapaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Etapas to fetch.
     */
    orderBy?: EtapaOrderByWithRelationInput | EtapaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EtapaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Etapas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Etapas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Etapas
    **/
    _count?: true | EtapaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EtapaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EtapaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EtapaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EtapaMaxAggregateInputType
  }

  export type GetEtapaAggregateType<T extends EtapaAggregateArgs> = {
        [P in keyof T & keyof AggregateEtapa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEtapa[P]>
      : GetScalarType<T[P], AggregateEtapa[P]>
  }




  export type EtapaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EtapaWhereInput
    orderBy?: EtapaOrderByWithAggregationInput | EtapaOrderByWithAggregationInput[]
    by: EtapaScalarFieldEnum[] | EtapaScalarFieldEnum
    having?: EtapaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EtapaCountAggregateInputType | true
    _avg?: EtapaAvgAggregateInputType
    _sum?: EtapaSumAggregateInputType
    _min?: EtapaMinAggregateInputType
    _max?: EtapaMaxAggregateInputType
  }

  export type EtapaGroupByOutputType = {
    id_da_funcao: number
    descricao: string
    _count: EtapaCountAggregateOutputType | null
    _avg: EtapaAvgAggregateOutputType | null
    _sum: EtapaSumAggregateOutputType | null
    _min: EtapaMinAggregateOutputType | null
    _max: EtapaMaxAggregateOutputType | null
  }

  type GetEtapaGroupByPayload<T extends EtapaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EtapaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EtapaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EtapaGroupByOutputType[P]>
            : GetScalarType<T[P], EtapaGroupByOutputType[P]>
        }
      >
    >


  export type EtapaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_da_funcao?: boolean
    descricao?: boolean
    pecas?: boolean | Etapa$pecasArgs<ExtArgs>
    producao_etapa?: boolean | Etapa$producao_etapaArgs<ExtArgs>
    _count?: boolean | EtapaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["etapa"]>


  export type EtapaSelectScalar = {
    id_da_funcao?: boolean
    descricao?: boolean
  }

  export type EtapaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    pecas?: boolean | Etapa$pecasArgs<ExtArgs>
    producao_etapa?: boolean | Etapa$producao_etapaArgs<ExtArgs>
    _count?: boolean | EtapaCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $EtapaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Etapa"
    objects: {
      pecas: Prisma.$PecasEtapasPayload<ExtArgs>[]
      producao_etapa: Prisma.$ProducaoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id_da_funcao: number
      descricao: string
    }, ExtArgs["result"]["etapa"]>
    composites: {}
  }

  type EtapaGetPayload<S extends boolean | null | undefined | EtapaDefaultArgs> = $Result.GetResult<Prisma.$EtapaPayload, S>

  type EtapaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EtapaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EtapaCountAggregateInputType | true
    }

  export interface EtapaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Etapa'], meta: { name: 'Etapa' } }
    /**
     * Find zero or one Etapa that matches the filter.
     * @param {EtapaFindUniqueArgs} args - Arguments to find a Etapa
     * @example
     * // Get one Etapa
     * const etapa = await prisma.etapa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EtapaFindUniqueArgs>(args: SelectSubset<T, EtapaFindUniqueArgs<ExtArgs>>): Prisma__EtapaClient<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Etapa that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EtapaFindUniqueOrThrowArgs} args - Arguments to find a Etapa
     * @example
     * // Get one Etapa
     * const etapa = await prisma.etapa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EtapaFindUniqueOrThrowArgs>(args: SelectSubset<T, EtapaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EtapaClient<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Etapa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EtapaFindFirstArgs} args - Arguments to find a Etapa
     * @example
     * // Get one Etapa
     * const etapa = await prisma.etapa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EtapaFindFirstArgs>(args?: SelectSubset<T, EtapaFindFirstArgs<ExtArgs>>): Prisma__EtapaClient<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Etapa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EtapaFindFirstOrThrowArgs} args - Arguments to find a Etapa
     * @example
     * // Get one Etapa
     * const etapa = await prisma.etapa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EtapaFindFirstOrThrowArgs>(args?: SelectSubset<T, EtapaFindFirstOrThrowArgs<ExtArgs>>): Prisma__EtapaClient<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Etapas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EtapaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Etapas
     * const etapas = await prisma.etapa.findMany()
     * 
     * // Get first 10 Etapas
     * const etapas = await prisma.etapa.findMany({ take: 10 })
     * 
     * // Only select the `id_da_funcao`
     * const etapaWithId_da_funcaoOnly = await prisma.etapa.findMany({ select: { id_da_funcao: true } })
     * 
     */
    findMany<T extends EtapaFindManyArgs>(args?: SelectSubset<T, EtapaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Etapa.
     * @param {EtapaCreateArgs} args - Arguments to create a Etapa.
     * @example
     * // Create one Etapa
     * const Etapa = await prisma.etapa.create({
     *   data: {
     *     // ... data to create a Etapa
     *   }
     * })
     * 
     */
    create<T extends EtapaCreateArgs>(args: SelectSubset<T, EtapaCreateArgs<ExtArgs>>): Prisma__EtapaClient<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Etapas.
     * @param {EtapaCreateManyArgs} args - Arguments to create many Etapas.
     * @example
     * // Create many Etapas
     * const etapa = await prisma.etapa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EtapaCreateManyArgs>(args?: SelectSubset<T, EtapaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Etapa.
     * @param {EtapaDeleteArgs} args - Arguments to delete one Etapa.
     * @example
     * // Delete one Etapa
     * const Etapa = await prisma.etapa.delete({
     *   where: {
     *     // ... filter to delete one Etapa
     *   }
     * })
     * 
     */
    delete<T extends EtapaDeleteArgs>(args: SelectSubset<T, EtapaDeleteArgs<ExtArgs>>): Prisma__EtapaClient<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Etapa.
     * @param {EtapaUpdateArgs} args - Arguments to update one Etapa.
     * @example
     * // Update one Etapa
     * const etapa = await prisma.etapa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EtapaUpdateArgs>(args: SelectSubset<T, EtapaUpdateArgs<ExtArgs>>): Prisma__EtapaClient<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Etapas.
     * @param {EtapaDeleteManyArgs} args - Arguments to filter Etapas to delete.
     * @example
     * // Delete a few Etapas
     * const { count } = await prisma.etapa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EtapaDeleteManyArgs>(args?: SelectSubset<T, EtapaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Etapas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EtapaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Etapas
     * const etapa = await prisma.etapa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EtapaUpdateManyArgs>(args: SelectSubset<T, EtapaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Etapa.
     * @param {EtapaUpsertArgs} args - Arguments to update or create a Etapa.
     * @example
     * // Update or create a Etapa
     * const etapa = await prisma.etapa.upsert({
     *   create: {
     *     // ... data to create a Etapa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Etapa we want to update
     *   }
     * })
     */
    upsert<T extends EtapaUpsertArgs>(args: SelectSubset<T, EtapaUpsertArgs<ExtArgs>>): Prisma__EtapaClient<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Etapas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EtapaCountArgs} args - Arguments to filter Etapas to count.
     * @example
     * // Count the number of Etapas
     * const count = await prisma.etapa.count({
     *   where: {
     *     // ... the filter for the Etapas we want to count
     *   }
     * })
    **/
    count<T extends EtapaCountArgs>(
      args?: Subset<T, EtapaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EtapaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Etapa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EtapaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EtapaAggregateArgs>(args: Subset<T, EtapaAggregateArgs>): Prisma.PrismaPromise<GetEtapaAggregateType<T>>

    /**
     * Group by Etapa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EtapaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EtapaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EtapaGroupByArgs['orderBy'] }
        : { orderBy?: EtapaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EtapaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEtapaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Etapa model
   */
  readonly fields: EtapaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Etapa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EtapaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    pecas<T extends Etapa$pecasArgs<ExtArgs> = {}>(args?: Subset<T, Etapa$pecasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "findMany"> | Null>
    producao_etapa<T extends Etapa$producao_etapaArgs<ExtArgs> = {}>(args?: Subset<T, Etapa$producao_etapaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Etapa model
   */ 
  interface EtapaFieldRefs {
    readonly id_da_funcao: FieldRef<"Etapa", 'Int'>
    readonly descricao: FieldRef<"Etapa", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Etapa findUnique
   */
  export type EtapaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Etapa
     */
    select?: EtapaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EtapaInclude<ExtArgs> | null
    /**
     * Filter, which Etapa to fetch.
     */
    where: EtapaWhereUniqueInput
  }

  /**
   * Etapa findUniqueOrThrow
   */
  export type EtapaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Etapa
     */
    select?: EtapaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EtapaInclude<ExtArgs> | null
    /**
     * Filter, which Etapa to fetch.
     */
    where: EtapaWhereUniqueInput
  }

  /**
   * Etapa findFirst
   */
  export type EtapaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Etapa
     */
    select?: EtapaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EtapaInclude<ExtArgs> | null
    /**
     * Filter, which Etapa to fetch.
     */
    where?: EtapaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Etapas to fetch.
     */
    orderBy?: EtapaOrderByWithRelationInput | EtapaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Etapas.
     */
    cursor?: EtapaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Etapas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Etapas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Etapas.
     */
    distinct?: EtapaScalarFieldEnum | EtapaScalarFieldEnum[]
  }

  /**
   * Etapa findFirstOrThrow
   */
  export type EtapaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Etapa
     */
    select?: EtapaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EtapaInclude<ExtArgs> | null
    /**
     * Filter, which Etapa to fetch.
     */
    where?: EtapaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Etapas to fetch.
     */
    orderBy?: EtapaOrderByWithRelationInput | EtapaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Etapas.
     */
    cursor?: EtapaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Etapas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Etapas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Etapas.
     */
    distinct?: EtapaScalarFieldEnum | EtapaScalarFieldEnum[]
  }

  /**
   * Etapa findMany
   */
  export type EtapaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Etapa
     */
    select?: EtapaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EtapaInclude<ExtArgs> | null
    /**
     * Filter, which Etapas to fetch.
     */
    where?: EtapaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Etapas to fetch.
     */
    orderBy?: EtapaOrderByWithRelationInput | EtapaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Etapas.
     */
    cursor?: EtapaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Etapas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Etapas.
     */
    skip?: number
    distinct?: EtapaScalarFieldEnum | EtapaScalarFieldEnum[]
  }

  /**
   * Etapa create
   */
  export type EtapaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Etapa
     */
    select?: EtapaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EtapaInclude<ExtArgs> | null
    /**
     * The data needed to create a Etapa.
     */
    data: XOR<EtapaCreateInput, EtapaUncheckedCreateInput>
  }

  /**
   * Etapa createMany
   */
  export type EtapaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Etapas.
     */
    data: EtapaCreateManyInput | EtapaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Etapa update
   */
  export type EtapaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Etapa
     */
    select?: EtapaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EtapaInclude<ExtArgs> | null
    /**
     * The data needed to update a Etapa.
     */
    data: XOR<EtapaUpdateInput, EtapaUncheckedUpdateInput>
    /**
     * Choose, which Etapa to update.
     */
    where: EtapaWhereUniqueInput
  }

  /**
   * Etapa updateMany
   */
  export type EtapaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Etapas.
     */
    data: XOR<EtapaUpdateManyMutationInput, EtapaUncheckedUpdateManyInput>
    /**
     * Filter which Etapas to update
     */
    where?: EtapaWhereInput
  }

  /**
   * Etapa upsert
   */
  export type EtapaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Etapa
     */
    select?: EtapaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EtapaInclude<ExtArgs> | null
    /**
     * The filter to search for the Etapa to update in case it exists.
     */
    where: EtapaWhereUniqueInput
    /**
     * In case the Etapa found by the `where` argument doesn't exist, create a new Etapa with this data.
     */
    create: XOR<EtapaCreateInput, EtapaUncheckedCreateInput>
    /**
     * In case the Etapa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EtapaUpdateInput, EtapaUncheckedUpdateInput>
  }

  /**
   * Etapa delete
   */
  export type EtapaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Etapa
     */
    select?: EtapaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EtapaInclude<ExtArgs> | null
    /**
     * Filter which Etapa to delete.
     */
    where: EtapaWhereUniqueInput
  }

  /**
   * Etapa deleteMany
   */
  export type EtapaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Etapas to delete
     */
    where?: EtapaWhereInput
  }

  /**
   * Etapa.pecas
   */
  export type Etapa$pecasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    where?: PecasEtapasWhereInput
    orderBy?: PecasEtapasOrderByWithRelationInput | PecasEtapasOrderByWithRelationInput[]
    cursor?: PecasEtapasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PecasEtapasScalarFieldEnum | PecasEtapasScalarFieldEnum[]
  }

  /**
   * Etapa.producao_etapa
   */
  export type Etapa$producao_etapaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    where?: ProducaoWhereInput
    orderBy?: ProducaoOrderByWithRelationInput | ProducaoOrderByWithRelationInput[]
    cursor?: ProducaoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProducaoScalarFieldEnum | ProducaoScalarFieldEnum[]
  }

  /**
   * Etapa without action
   */
  export type EtapaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Etapa
     */
    select?: EtapaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EtapaInclude<ExtArgs> | null
  }


  /**
   * Model PecasEtapas
   */

  export type AggregatePecasEtapas = {
    _count: PecasEtapasCountAggregateOutputType | null
    _avg: PecasEtapasAvgAggregateOutputType | null
    _sum: PecasEtapasSumAggregateOutputType | null
    _min: PecasEtapasMinAggregateOutputType | null
    _max: PecasEtapasMaxAggregateOutputType | null
  }

  export type PecasEtapasAvgAggregateOutputType = {
    id_da_op: number | null
    id_da_funcao: number | null
  }

  export type PecasEtapasSumAggregateOutputType = {
    id_da_op: number | null
    id_da_funcao: number | null
  }

  export type PecasEtapasMinAggregateOutputType = {
    id_da_op: number | null
    id_da_funcao: number | null
  }

  export type PecasEtapasMaxAggregateOutputType = {
    id_da_op: number | null
    id_da_funcao: number | null
  }

  export type PecasEtapasCountAggregateOutputType = {
    id_da_op: number
    id_da_funcao: number
    _all: number
  }


  export type PecasEtapasAvgAggregateInputType = {
    id_da_op?: true
    id_da_funcao?: true
  }

  export type PecasEtapasSumAggregateInputType = {
    id_da_op?: true
    id_da_funcao?: true
  }

  export type PecasEtapasMinAggregateInputType = {
    id_da_op?: true
    id_da_funcao?: true
  }

  export type PecasEtapasMaxAggregateInputType = {
    id_da_op?: true
    id_da_funcao?: true
  }

  export type PecasEtapasCountAggregateInputType = {
    id_da_op?: true
    id_da_funcao?: true
    _all?: true
  }

  export type PecasEtapasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PecasEtapas to aggregate.
     */
    where?: PecasEtapasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PecasEtapas to fetch.
     */
    orderBy?: PecasEtapasOrderByWithRelationInput | PecasEtapasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PecasEtapasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PecasEtapas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PecasEtapas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PecasEtapas
    **/
    _count?: true | PecasEtapasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PecasEtapasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PecasEtapasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PecasEtapasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PecasEtapasMaxAggregateInputType
  }

  export type GetPecasEtapasAggregateType<T extends PecasEtapasAggregateArgs> = {
        [P in keyof T & keyof AggregatePecasEtapas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePecasEtapas[P]>
      : GetScalarType<T[P], AggregatePecasEtapas[P]>
  }




  export type PecasEtapasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PecasEtapasWhereInput
    orderBy?: PecasEtapasOrderByWithAggregationInput | PecasEtapasOrderByWithAggregationInput[]
    by: PecasEtapasScalarFieldEnum[] | PecasEtapasScalarFieldEnum
    having?: PecasEtapasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PecasEtapasCountAggregateInputType | true
    _avg?: PecasEtapasAvgAggregateInputType
    _sum?: PecasEtapasSumAggregateInputType
    _min?: PecasEtapasMinAggregateInputType
    _max?: PecasEtapasMaxAggregateInputType
  }

  export type PecasEtapasGroupByOutputType = {
    id_da_op: number
    id_da_funcao: number
    _count: PecasEtapasCountAggregateOutputType | null
    _avg: PecasEtapasAvgAggregateOutputType | null
    _sum: PecasEtapasSumAggregateOutputType | null
    _min: PecasEtapasMinAggregateOutputType | null
    _max: PecasEtapasMaxAggregateOutputType | null
  }

  type GetPecasEtapasGroupByPayload<T extends PecasEtapasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PecasEtapasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PecasEtapasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PecasEtapasGroupByOutputType[P]>
            : GetScalarType<T[P], PecasEtapasGroupByOutputType[P]>
        }
      >
    >


  export type PecasEtapasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_da_op?: boolean
    id_da_funcao?: boolean
    peca_op?: boolean | PecasOPDefaultArgs<ExtArgs>
    etapa?: boolean | EtapaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pecasEtapas"]>


  export type PecasEtapasSelectScalar = {
    id_da_op?: boolean
    id_da_funcao?: boolean
  }

  export type PecasEtapasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    peca_op?: boolean | PecasOPDefaultArgs<ExtArgs>
    etapa?: boolean | EtapaDefaultArgs<ExtArgs>
  }

  export type $PecasEtapasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PecasEtapas"
    objects: {
      peca_op: Prisma.$PecasOPPayload<ExtArgs>
      etapa: Prisma.$EtapaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_da_op: number
      id_da_funcao: number
    }, ExtArgs["result"]["pecasEtapas"]>
    composites: {}
  }

  type PecasEtapasGetPayload<S extends boolean | null | undefined | PecasEtapasDefaultArgs> = $Result.GetResult<Prisma.$PecasEtapasPayload, S>

  type PecasEtapasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PecasEtapasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PecasEtapasCountAggregateInputType | true
    }

  export interface PecasEtapasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PecasEtapas'], meta: { name: 'PecasEtapas' } }
    /**
     * Find zero or one PecasEtapas that matches the filter.
     * @param {PecasEtapasFindUniqueArgs} args - Arguments to find a PecasEtapas
     * @example
     * // Get one PecasEtapas
     * const pecasEtapas = await prisma.pecasEtapas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PecasEtapasFindUniqueArgs>(args: SelectSubset<T, PecasEtapasFindUniqueArgs<ExtArgs>>): Prisma__PecasEtapasClient<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PecasEtapas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PecasEtapasFindUniqueOrThrowArgs} args - Arguments to find a PecasEtapas
     * @example
     * // Get one PecasEtapas
     * const pecasEtapas = await prisma.pecasEtapas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PecasEtapasFindUniqueOrThrowArgs>(args: SelectSubset<T, PecasEtapasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PecasEtapasClient<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PecasEtapas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasEtapasFindFirstArgs} args - Arguments to find a PecasEtapas
     * @example
     * // Get one PecasEtapas
     * const pecasEtapas = await prisma.pecasEtapas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PecasEtapasFindFirstArgs>(args?: SelectSubset<T, PecasEtapasFindFirstArgs<ExtArgs>>): Prisma__PecasEtapasClient<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PecasEtapas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasEtapasFindFirstOrThrowArgs} args - Arguments to find a PecasEtapas
     * @example
     * // Get one PecasEtapas
     * const pecasEtapas = await prisma.pecasEtapas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PecasEtapasFindFirstOrThrowArgs>(args?: SelectSubset<T, PecasEtapasFindFirstOrThrowArgs<ExtArgs>>): Prisma__PecasEtapasClient<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PecasEtapas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasEtapasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PecasEtapas
     * const pecasEtapas = await prisma.pecasEtapas.findMany()
     * 
     * // Get first 10 PecasEtapas
     * const pecasEtapas = await prisma.pecasEtapas.findMany({ take: 10 })
     * 
     * // Only select the `id_da_op`
     * const pecasEtapasWithId_da_opOnly = await prisma.pecasEtapas.findMany({ select: { id_da_op: true } })
     * 
     */
    findMany<T extends PecasEtapasFindManyArgs>(args?: SelectSubset<T, PecasEtapasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PecasEtapas.
     * @param {PecasEtapasCreateArgs} args - Arguments to create a PecasEtapas.
     * @example
     * // Create one PecasEtapas
     * const PecasEtapas = await prisma.pecasEtapas.create({
     *   data: {
     *     // ... data to create a PecasEtapas
     *   }
     * })
     * 
     */
    create<T extends PecasEtapasCreateArgs>(args: SelectSubset<T, PecasEtapasCreateArgs<ExtArgs>>): Prisma__PecasEtapasClient<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PecasEtapas.
     * @param {PecasEtapasCreateManyArgs} args - Arguments to create many PecasEtapas.
     * @example
     * // Create many PecasEtapas
     * const pecasEtapas = await prisma.pecasEtapas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PecasEtapasCreateManyArgs>(args?: SelectSubset<T, PecasEtapasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PecasEtapas.
     * @param {PecasEtapasDeleteArgs} args - Arguments to delete one PecasEtapas.
     * @example
     * // Delete one PecasEtapas
     * const PecasEtapas = await prisma.pecasEtapas.delete({
     *   where: {
     *     // ... filter to delete one PecasEtapas
     *   }
     * })
     * 
     */
    delete<T extends PecasEtapasDeleteArgs>(args: SelectSubset<T, PecasEtapasDeleteArgs<ExtArgs>>): Prisma__PecasEtapasClient<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PecasEtapas.
     * @param {PecasEtapasUpdateArgs} args - Arguments to update one PecasEtapas.
     * @example
     * // Update one PecasEtapas
     * const pecasEtapas = await prisma.pecasEtapas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PecasEtapasUpdateArgs>(args: SelectSubset<T, PecasEtapasUpdateArgs<ExtArgs>>): Prisma__PecasEtapasClient<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PecasEtapas.
     * @param {PecasEtapasDeleteManyArgs} args - Arguments to filter PecasEtapas to delete.
     * @example
     * // Delete a few PecasEtapas
     * const { count } = await prisma.pecasEtapas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PecasEtapasDeleteManyArgs>(args?: SelectSubset<T, PecasEtapasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PecasEtapas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasEtapasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PecasEtapas
     * const pecasEtapas = await prisma.pecasEtapas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PecasEtapasUpdateManyArgs>(args: SelectSubset<T, PecasEtapasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PecasEtapas.
     * @param {PecasEtapasUpsertArgs} args - Arguments to update or create a PecasEtapas.
     * @example
     * // Update or create a PecasEtapas
     * const pecasEtapas = await prisma.pecasEtapas.upsert({
     *   create: {
     *     // ... data to create a PecasEtapas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PecasEtapas we want to update
     *   }
     * })
     */
    upsert<T extends PecasEtapasUpsertArgs>(args: SelectSubset<T, PecasEtapasUpsertArgs<ExtArgs>>): Prisma__PecasEtapasClient<$Result.GetResult<Prisma.$PecasEtapasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PecasEtapas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasEtapasCountArgs} args - Arguments to filter PecasEtapas to count.
     * @example
     * // Count the number of PecasEtapas
     * const count = await prisma.pecasEtapas.count({
     *   where: {
     *     // ... the filter for the PecasEtapas we want to count
     *   }
     * })
    **/
    count<T extends PecasEtapasCountArgs>(
      args?: Subset<T, PecasEtapasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PecasEtapasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PecasEtapas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasEtapasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PecasEtapasAggregateArgs>(args: Subset<T, PecasEtapasAggregateArgs>): Prisma.PrismaPromise<GetPecasEtapasAggregateType<T>>

    /**
     * Group by PecasEtapas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecasEtapasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PecasEtapasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PecasEtapasGroupByArgs['orderBy'] }
        : { orderBy?: PecasEtapasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PecasEtapasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPecasEtapasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PecasEtapas model
   */
  readonly fields: PecasEtapasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PecasEtapas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PecasEtapasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    peca_op<T extends PecasOPDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PecasOPDefaultArgs<ExtArgs>>): Prisma__PecasOPClient<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    etapa<T extends EtapaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EtapaDefaultArgs<ExtArgs>>): Prisma__EtapaClient<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PecasEtapas model
   */ 
  interface PecasEtapasFieldRefs {
    readonly id_da_op: FieldRef<"PecasEtapas", 'Int'>
    readonly id_da_funcao: FieldRef<"PecasEtapas", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * PecasEtapas findUnique
   */
  export type PecasEtapasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    /**
     * Filter, which PecasEtapas to fetch.
     */
    where: PecasEtapasWhereUniqueInput
  }

  /**
   * PecasEtapas findUniqueOrThrow
   */
  export type PecasEtapasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    /**
     * Filter, which PecasEtapas to fetch.
     */
    where: PecasEtapasWhereUniqueInput
  }

  /**
   * PecasEtapas findFirst
   */
  export type PecasEtapasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    /**
     * Filter, which PecasEtapas to fetch.
     */
    where?: PecasEtapasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PecasEtapas to fetch.
     */
    orderBy?: PecasEtapasOrderByWithRelationInput | PecasEtapasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PecasEtapas.
     */
    cursor?: PecasEtapasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PecasEtapas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PecasEtapas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PecasEtapas.
     */
    distinct?: PecasEtapasScalarFieldEnum | PecasEtapasScalarFieldEnum[]
  }

  /**
   * PecasEtapas findFirstOrThrow
   */
  export type PecasEtapasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    /**
     * Filter, which PecasEtapas to fetch.
     */
    where?: PecasEtapasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PecasEtapas to fetch.
     */
    orderBy?: PecasEtapasOrderByWithRelationInput | PecasEtapasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PecasEtapas.
     */
    cursor?: PecasEtapasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PecasEtapas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PecasEtapas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PecasEtapas.
     */
    distinct?: PecasEtapasScalarFieldEnum | PecasEtapasScalarFieldEnum[]
  }

  /**
   * PecasEtapas findMany
   */
  export type PecasEtapasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    /**
     * Filter, which PecasEtapas to fetch.
     */
    where?: PecasEtapasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PecasEtapas to fetch.
     */
    orderBy?: PecasEtapasOrderByWithRelationInput | PecasEtapasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PecasEtapas.
     */
    cursor?: PecasEtapasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PecasEtapas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PecasEtapas.
     */
    skip?: number
    distinct?: PecasEtapasScalarFieldEnum | PecasEtapasScalarFieldEnum[]
  }

  /**
   * PecasEtapas create
   */
  export type PecasEtapasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    /**
     * The data needed to create a PecasEtapas.
     */
    data: XOR<PecasEtapasCreateInput, PecasEtapasUncheckedCreateInput>
  }

  /**
   * PecasEtapas createMany
   */
  export type PecasEtapasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PecasEtapas.
     */
    data: PecasEtapasCreateManyInput | PecasEtapasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PecasEtapas update
   */
  export type PecasEtapasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    /**
     * The data needed to update a PecasEtapas.
     */
    data: XOR<PecasEtapasUpdateInput, PecasEtapasUncheckedUpdateInput>
    /**
     * Choose, which PecasEtapas to update.
     */
    where: PecasEtapasWhereUniqueInput
  }

  /**
   * PecasEtapas updateMany
   */
  export type PecasEtapasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PecasEtapas.
     */
    data: XOR<PecasEtapasUpdateManyMutationInput, PecasEtapasUncheckedUpdateManyInput>
    /**
     * Filter which PecasEtapas to update
     */
    where?: PecasEtapasWhereInput
  }

  /**
   * PecasEtapas upsert
   */
  export type PecasEtapasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    /**
     * The filter to search for the PecasEtapas to update in case it exists.
     */
    where: PecasEtapasWhereUniqueInput
    /**
     * In case the PecasEtapas found by the `where` argument doesn't exist, create a new PecasEtapas with this data.
     */
    create: XOR<PecasEtapasCreateInput, PecasEtapasUncheckedCreateInput>
    /**
     * In case the PecasEtapas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PecasEtapasUpdateInput, PecasEtapasUncheckedUpdateInput>
  }

  /**
   * PecasEtapas delete
   */
  export type PecasEtapasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
    /**
     * Filter which PecasEtapas to delete.
     */
    where: PecasEtapasWhereUniqueInput
  }

  /**
   * PecasEtapas deleteMany
   */
  export type PecasEtapasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PecasEtapas to delete
     */
    where?: PecasEtapasWhereInput
  }

  /**
   * PecasEtapas without action
   */
  export type PecasEtapasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecasEtapas
     */
    select?: PecasEtapasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecasEtapasInclude<ExtArgs> | null
  }


  /**
   * Model Producao
   */

  export type AggregateProducao = {
    _count: ProducaoCountAggregateOutputType | null
    _avg: ProducaoAvgAggregateOutputType | null
    _sum: ProducaoSumAggregateOutputType | null
    _min: ProducaoMinAggregateOutputType | null
    _max: ProducaoMaxAggregateOutputType | null
  }

  export type ProducaoAvgAggregateOutputType = {
    id_da_producao: number | null
    quantidade_pecas: number | null
    id_da_op: number | null
    id_da_funcao: number | null
  }

  export type ProducaoSumAggregateOutputType = {
    id_da_producao: number | null
    quantidade_pecas: number | null
    id_da_op: number | null
    id_da_funcao: number | null
  }

  export type ProducaoMinAggregateOutputType = {
    id_da_producao: number | null
    quantidade_pecas: number | null
    id_Estabelecimento: string | null
    id_da_op: number | null
    id_funcionario: string | null
    id_da_funcao: number | null
    data_inicio: Date | null
    hora_registro: string | null
  }

  export type ProducaoMaxAggregateOutputType = {
    id_da_producao: number | null
    quantidade_pecas: number | null
    id_Estabelecimento: string | null
    id_da_op: number | null
    id_funcionario: string | null
    id_da_funcao: number | null
    data_inicio: Date | null
    hora_registro: string | null
  }

  export type ProducaoCountAggregateOutputType = {
    id_da_producao: number
    quantidade_pecas: number
    id_Estabelecimento: number
    id_da_op: number
    id_funcionario: number
    id_da_funcao: number
    data_inicio: number
    hora_registro: number
    _all: number
  }


  export type ProducaoAvgAggregateInputType = {
    id_da_producao?: true
    quantidade_pecas?: true
    id_da_op?: true
    id_da_funcao?: true
  }

  export type ProducaoSumAggregateInputType = {
    id_da_producao?: true
    quantidade_pecas?: true
    id_da_op?: true
    id_da_funcao?: true
  }

  export type ProducaoMinAggregateInputType = {
    id_da_producao?: true
    quantidade_pecas?: true
    id_Estabelecimento?: true
    id_da_op?: true
    id_funcionario?: true
    id_da_funcao?: true
    data_inicio?: true
    hora_registro?: true
  }

  export type ProducaoMaxAggregateInputType = {
    id_da_producao?: true
    quantidade_pecas?: true
    id_Estabelecimento?: true
    id_da_op?: true
    id_funcionario?: true
    id_da_funcao?: true
    data_inicio?: true
    hora_registro?: true
  }

  export type ProducaoCountAggregateInputType = {
    id_da_producao?: true
    quantidade_pecas?: true
    id_Estabelecimento?: true
    id_da_op?: true
    id_funcionario?: true
    id_da_funcao?: true
    data_inicio?: true
    hora_registro?: true
    _all?: true
  }

  export type ProducaoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producao to aggregate.
     */
    where?: ProducaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Producaos to fetch.
     */
    orderBy?: ProducaoOrderByWithRelationInput | ProducaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProducaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Producaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Producaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Producaos
    **/
    _count?: true | ProducaoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProducaoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProducaoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProducaoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProducaoMaxAggregateInputType
  }

  export type GetProducaoAggregateType<T extends ProducaoAggregateArgs> = {
        [P in keyof T & keyof AggregateProducao]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProducao[P]>
      : GetScalarType<T[P], AggregateProducao[P]>
  }




  export type ProducaoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProducaoWhereInput
    orderBy?: ProducaoOrderByWithAggregationInput | ProducaoOrderByWithAggregationInput[]
    by: ProducaoScalarFieldEnum[] | ProducaoScalarFieldEnum
    having?: ProducaoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProducaoCountAggregateInputType | true
    _avg?: ProducaoAvgAggregateInputType
    _sum?: ProducaoSumAggregateInputType
    _min?: ProducaoMinAggregateInputType
    _max?: ProducaoMaxAggregateInputType
  }

  export type ProducaoGroupByOutputType = {
    id_da_producao: number
    quantidade_pecas: number | null
    id_Estabelecimento: string
    id_da_op: number
    id_funcionario: string
    id_da_funcao: number
    data_inicio: Date | null
    hora_registro: string | null
    _count: ProducaoCountAggregateOutputType | null
    _avg: ProducaoAvgAggregateOutputType | null
    _sum: ProducaoSumAggregateOutputType | null
    _min: ProducaoMinAggregateOutputType | null
    _max: ProducaoMaxAggregateOutputType | null
  }

  type GetProducaoGroupByPayload<T extends ProducaoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProducaoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProducaoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProducaoGroupByOutputType[P]>
            : GetScalarType<T[P], ProducaoGroupByOutputType[P]>
        }
      >
    >


  export type ProducaoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_da_producao?: boolean
    quantidade_pecas?: boolean
    id_Estabelecimento?: boolean
    id_da_op?: boolean
    id_funcionario?: boolean
    id_da_funcao?: boolean
    data_inicio?: boolean
    hora_registro?: boolean
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
    producao_peca?: boolean | PecasOPDefaultArgs<ExtArgs>
    producao_funcionario?: boolean | UsuariosDefaultArgs<ExtArgs>
    producao_etapa?: boolean | EtapaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["producao"]>


  export type ProducaoSelectScalar = {
    id_da_producao?: boolean
    quantidade_pecas?: boolean
    id_Estabelecimento?: boolean
    id_da_op?: boolean
    id_funcionario?: boolean
    id_da_funcao?: boolean
    data_inicio?: boolean
    hora_registro?: boolean
  }

  export type ProducaoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
    producao_peca?: boolean | PecasOPDefaultArgs<ExtArgs>
    producao_funcionario?: boolean | UsuariosDefaultArgs<ExtArgs>
    producao_etapa?: boolean | EtapaDefaultArgs<ExtArgs>
  }

  export type $ProducaoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Producao"
    objects: {
      Estabelecimento: Prisma.$EstabelecimentoPayload<ExtArgs>
      producao_peca: Prisma.$PecasOPPayload<ExtArgs>
      producao_funcionario: Prisma.$UsuariosPayload<ExtArgs>
      producao_etapa: Prisma.$EtapaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_da_producao: number
      quantidade_pecas: number | null
      id_Estabelecimento: string
      id_da_op: number
      id_funcionario: string
      id_da_funcao: number
      data_inicio: Date | null
      hora_registro: string | null
    }, ExtArgs["result"]["producao"]>
    composites: {}
  }

  type ProducaoGetPayload<S extends boolean | null | undefined | ProducaoDefaultArgs> = $Result.GetResult<Prisma.$ProducaoPayload, S>

  type ProducaoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProducaoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProducaoCountAggregateInputType | true
    }

  export interface ProducaoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Producao'], meta: { name: 'Producao' } }
    /**
     * Find zero or one Producao that matches the filter.
     * @param {ProducaoFindUniqueArgs} args - Arguments to find a Producao
     * @example
     * // Get one Producao
     * const producao = await prisma.producao.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProducaoFindUniqueArgs>(args: SelectSubset<T, ProducaoFindUniqueArgs<ExtArgs>>): Prisma__ProducaoClient<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Producao that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProducaoFindUniqueOrThrowArgs} args - Arguments to find a Producao
     * @example
     * // Get one Producao
     * const producao = await prisma.producao.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProducaoFindUniqueOrThrowArgs>(args: SelectSubset<T, ProducaoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProducaoClient<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Producao that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProducaoFindFirstArgs} args - Arguments to find a Producao
     * @example
     * // Get one Producao
     * const producao = await prisma.producao.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProducaoFindFirstArgs>(args?: SelectSubset<T, ProducaoFindFirstArgs<ExtArgs>>): Prisma__ProducaoClient<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Producao that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProducaoFindFirstOrThrowArgs} args - Arguments to find a Producao
     * @example
     * // Get one Producao
     * const producao = await prisma.producao.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProducaoFindFirstOrThrowArgs>(args?: SelectSubset<T, ProducaoFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProducaoClient<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Producaos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProducaoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Producaos
     * const producaos = await prisma.producao.findMany()
     * 
     * // Get first 10 Producaos
     * const producaos = await prisma.producao.findMany({ take: 10 })
     * 
     * // Only select the `id_da_producao`
     * const producaoWithId_da_producaoOnly = await prisma.producao.findMany({ select: { id_da_producao: true } })
     * 
     */
    findMany<T extends ProducaoFindManyArgs>(args?: SelectSubset<T, ProducaoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Producao.
     * @param {ProducaoCreateArgs} args - Arguments to create a Producao.
     * @example
     * // Create one Producao
     * const Producao = await prisma.producao.create({
     *   data: {
     *     // ... data to create a Producao
     *   }
     * })
     * 
     */
    create<T extends ProducaoCreateArgs>(args: SelectSubset<T, ProducaoCreateArgs<ExtArgs>>): Prisma__ProducaoClient<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Producaos.
     * @param {ProducaoCreateManyArgs} args - Arguments to create many Producaos.
     * @example
     * // Create many Producaos
     * const producao = await prisma.producao.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProducaoCreateManyArgs>(args?: SelectSubset<T, ProducaoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Producao.
     * @param {ProducaoDeleteArgs} args - Arguments to delete one Producao.
     * @example
     * // Delete one Producao
     * const Producao = await prisma.producao.delete({
     *   where: {
     *     // ... filter to delete one Producao
     *   }
     * })
     * 
     */
    delete<T extends ProducaoDeleteArgs>(args: SelectSubset<T, ProducaoDeleteArgs<ExtArgs>>): Prisma__ProducaoClient<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Producao.
     * @param {ProducaoUpdateArgs} args - Arguments to update one Producao.
     * @example
     * // Update one Producao
     * const producao = await prisma.producao.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProducaoUpdateArgs>(args: SelectSubset<T, ProducaoUpdateArgs<ExtArgs>>): Prisma__ProducaoClient<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Producaos.
     * @param {ProducaoDeleteManyArgs} args - Arguments to filter Producaos to delete.
     * @example
     * // Delete a few Producaos
     * const { count } = await prisma.producao.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProducaoDeleteManyArgs>(args?: SelectSubset<T, ProducaoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Producaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProducaoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Producaos
     * const producao = await prisma.producao.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProducaoUpdateManyArgs>(args: SelectSubset<T, ProducaoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Producao.
     * @param {ProducaoUpsertArgs} args - Arguments to update or create a Producao.
     * @example
     * // Update or create a Producao
     * const producao = await prisma.producao.upsert({
     *   create: {
     *     // ... data to create a Producao
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Producao we want to update
     *   }
     * })
     */
    upsert<T extends ProducaoUpsertArgs>(args: SelectSubset<T, ProducaoUpsertArgs<ExtArgs>>): Prisma__ProducaoClient<$Result.GetResult<Prisma.$ProducaoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Producaos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProducaoCountArgs} args - Arguments to filter Producaos to count.
     * @example
     * // Count the number of Producaos
     * const count = await prisma.producao.count({
     *   where: {
     *     // ... the filter for the Producaos we want to count
     *   }
     * })
    **/
    count<T extends ProducaoCountArgs>(
      args?: Subset<T, ProducaoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProducaoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Producao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProducaoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProducaoAggregateArgs>(args: Subset<T, ProducaoAggregateArgs>): Prisma.PrismaPromise<GetProducaoAggregateType<T>>

    /**
     * Group by Producao.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProducaoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProducaoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProducaoGroupByArgs['orderBy'] }
        : { orderBy?: ProducaoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProducaoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProducaoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Producao model
   */
  readonly fields: ProducaoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Producao.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProducaoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Estabelecimento<T extends EstabelecimentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstabelecimentoDefaultArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    producao_peca<T extends PecasOPDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PecasOPDefaultArgs<ExtArgs>>): Prisma__PecasOPClient<$Result.GetResult<Prisma.$PecasOPPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    producao_funcionario<T extends UsuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuariosDefaultArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    producao_etapa<T extends EtapaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EtapaDefaultArgs<ExtArgs>>): Prisma__EtapaClient<$Result.GetResult<Prisma.$EtapaPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Producao model
   */ 
  interface ProducaoFieldRefs {
    readonly id_da_producao: FieldRef<"Producao", 'Int'>
    readonly quantidade_pecas: FieldRef<"Producao", 'Int'>
    readonly id_Estabelecimento: FieldRef<"Producao", 'String'>
    readonly id_da_op: FieldRef<"Producao", 'Int'>
    readonly id_funcionario: FieldRef<"Producao", 'String'>
    readonly id_da_funcao: FieldRef<"Producao", 'Int'>
    readonly data_inicio: FieldRef<"Producao", 'DateTime'>
    readonly hora_registro: FieldRef<"Producao", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Producao findUnique
   */
  export type ProducaoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    /**
     * Filter, which Producao to fetch.
     */
    where: ProducaoWhereUniqueInput
  }

  /**
   * Producao findUniqueOrThrow
   */
  export type ProducaoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    /**
     * Filter, which Producao to fetch.
     */
    where: ProducaoWhereUniqueInput
  }

  /**
   * Producao findFirst
   */
  export type ProducaoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    /**
     * Filter, which Producao to fetch.
     */
    where?: ProducaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Producaos to fetch.
     */
    orderBy?: ProducaoOrderByWithRelationInput | ProducaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Producaos.
     */
    cursor?: ProducaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Producaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Producaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Producaos.
     */
    distinct?: ProducaoScalarFieldEnum | ProducaoScalarFieldEnum[]
  }

  /**
   * Producao findFirstOrThrow
   */
  export type ProducaoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    /**
     * Filter, which Producao to fetch.
     */
    where?: ProducaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Producaos to fetch.
     */
    orderBy?: ProducaoOrderByWithRelationInput | ProducaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Producaos.
     */
    cursor?: ProducaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Producaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Producaos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Producaos.
     */
    distinct?: ProducaoScalarFieldEnum | ProducaoScalarFieldEnum[]
  }

  /**
   * Producao findMany
   */
  export type ProducaoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    /**
     * Filter, which Producaos to fetch.
     */
    where?: ProducaoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Producaos to fetch.
     */
    orderBy?: ProducaoOrderByWithRelationInput | ProducaoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Producaos.
     */
    cursor?: ProducaoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Producaos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Producaos.
     */
    skip?: number
    distinct?: ProducaoScalarFieldEnum | ProducaoScalarFieldEnum[]
  }

  /**
   * Producao create
   */
  export type ProducaoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    /**
     * The data needed to create a Producao.
     */
    data: XOR<ProducaoCreateInput, ProducaoUncheckedCreateInput>
  }

  /**
   * Producao createMany
   */
  export type ProducaoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Producaos.
     */
    data: ProducaoCreateManyInput | ProducaoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Producao update
   */
  export type ProducaoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    /**
     * The data needed to update a Producao.
     */
    data: XOR<ProducaoUpdateInput, ProducaoUncheckedUpdateInput>
    /**
     * Choose, which Producao to update.
     */
    where: ProducaoWhereUniqueInput
  }

  /**
   * Producao updateMany
   */
  export type ProducaoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Producaos.
     */
    data: XOR<ProducaoUpdateManyMutationInput, ProducaoUncheckedUpdateManyInput>
    /**
     * Filter which Producaos to update
     */
    where?: ProducaoWhereInput
  }

  /**
   * Producao upsert
   */
  export type ProducaoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    /**
     * The filter to search for the Producao to update in case it exists.
     */
    where: ProducaoWhereUniqueInput
    /**
     * In case the Producao found by the `where` argument doesn't exist, create a new Producao with this data.
     */
    create: XOR<ProducaoCreateInput, ProducaoUncheckedCreateInput>
    /**
     * In case the Producao was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProducaoUpdateInput, ProducaoUncheckedUpdateInput>
  }

  /**
   * Producao delete
   */
  export type ProducaoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
    /**
     * Filter which Producao to delete.
     */
    where: ProducaoWhereUniqueInput
  }

  /**
   * Producao deleteMany
   */
  export type ProducaoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Producaos to delete
     */
    where?: ProducaoWhereInput
  }

  /**
   * Producao without action
   */
  export type ProducaoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Producao
     */
    select?: ProducaoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProducaoInclude<ExtArgs> | null
  }


  /**
   * Model Estoque_Tecidos
   */

  export type AggregateEstoque_Tecidos = {
    _count: Estoque_TecidosCountAggregateOutputType | null
    _avg: Estoque_TecidosAvgAggregateOutputType | null
    _sum: Estoque_TecidosSumAggregateOutputType | null
    _min: Estoque_TecidosMinAggregateOutputType | null
    _max: Estoque_TecidosMaxAggregateOutputType | null
  }

  export type Estoque_TecidosAvgAggregateOutputType = {
    id_do_tecido: number | null
    valor: number | null
    largura: number | null
    peso: number | null
    estoque: number | null
    tamanho: number | null
  }

  export type Estoque_TecidosSumAggregateOutputType = {
    id_do_tecido: number | null
    valor: number | null
    largura: number | null
    peso: number | null
    estoque: number | null
    tamanho: number | null
  }

  export type Estoque_TecidosMinAggregateOutputType = {
    id_do_tecido: number | null
    id_Estabelecimento: string | null
    nome_do_tecido: string | null
    valor: number | null
    fornecedor: string | null
    composicao: string | null
    largura: number | null
    peso: number | null
    estoque: number | null
    data_: Date | null
    tamanho: number | null
    notas: string | null
  }

  export type Estoque_TecidosMaxAggregateOutputType = {
    id_do_tecido: number | null
    id_Estabelecimento: string | null
    nome_do_tecido: string | null
    valor: number | null
    fornecedor: string | null
    composicao: string | null
    largura: number | null
    peso: number | null
    estoque: number | null
    data_: Date | null
    tamanho: number | null
    notas: string | null
  }

  export type Estoque_TecidosCountAggregateOutputType = {
    id_do_tecido: number
    id_Estabelecimento: number
    nome_do_tecido: number
    valor: number
    fornecedor: number
    composicao: number
    largura: number
    peso: number
    estoque: number
    data_: number
    tamanho: number
    notas: number
    _all: number
  }


  export type Estoque_TecidosAvgAggregateInputType = {
    id_do_tecido?: true
    valor?: true
    largura?: true
    peso?: true
    estoque?: true
    tamanho?: true
  }

  export type Estoque_TecidosSumAggregateInputType = {
    id_do_tecido?: true
    valor?: true
    largura?: true
    peso?: true
    estoque?: true
    tamanho?: true
  }

  export type Estoque_TecidosMinAggregateInputType = {
    id_do_tecido?: true
    id_Estabelecimento?: true
    nome_do_tecido?: true
    valor?: true
    fornecedor?: true
    composicao?: true
    largura?: true
    peso?: true
    estoque?: true
    data_?: true
    tamanho?: true
    notas?: true
  }

  export type Estoque_TecidosMaxAggregateInputType = {
    id_do_tecido?: true
    id_Estabelecimento?: true
    nome_do_tecido?: true
    valor?: true
    fornecedor?: true
    composicao?: true
    largura?: true
    peso?: true
    estoque?: true
    data_?: true
    tamanho?: true
    notas?: true
  }

  export type Estoque_TecidosCountAggregateInputType = {
    id_do_tecido?: true
    id_Estabelecimento?: true
    nome_do_tecido?: true
    valor?: true
    fornecedor?: true
    composicao?: true
    largura?: true
    peso?: true
    estoque?: true
    data_?: true
    tamanho?: true
    notas?: true
    _all?: true
  }

  export type Estoque_TecidosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estoque_Tecidos to aggregate.
     */
    where?: Estoque_TecidosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoque_Tecidos to fetch.
     */
    orderBy?: Estoque_TecidosOrderByWithRelationInput | Estoque_TecidosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Estoque_TecidosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoque_Tecidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoque_Tecidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Estoque_Tecidos
    **/
    _count?: true | Estoque_TecidosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Estoque_TecidosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Estoque_TecidosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Estoque_TecidosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Estoque_TecidosMaxAggregateInputType
  }

  export type GetEstoque_TecidosAggregateType<T extends Estoque_TecidosAggregateArgs> = {
        [P in keyof T & keyof AggregateEstoque_Tecidos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstoque_Tecidos[P]>
      : GetScalarType<T[P], AggregateEstoque_Tecidos[P]>
  }




  export type Estoque_TecidosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Estoque_TecidosWhereInput
    orderBy?: Estoque_TecidosOrderByWithAggregationInput | Estoque_TecidosOrderByWithAggregationInput[]
    by: Estoque_TecidosScalarFieldEnum[] | Estoque_TecidosScalarFieldEnum
    having?: Estoque_TecidosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Estoque_TecidosCountAggregateInputType | true
    _avg?: Estoque_TecidosAvgAggregateInputType
    _sum?: Estoque_TecidosSumAggregateInputType
    _min?: Estoque_TecidosMinAggregateInputType
    _max?: Estoque_TecidosMaxAggregateInputType
  }

  export type Estoque_TecidosGroupByOutputType = {
    id_do_tecido: number
    id_Estabelecimento: string
    nome_do_tecido: string
    valor: number
    fornecedor: string
    composicao: string | null
    largura: number | null
    peso: number | null
    estoque: number
    data_: Date
    tamanho: number | null
    notas: string | null
    _count: Estoque_TecidosCountAggregateOutputType | null
    _avg: Estoque_TecidosAvgAggregateOutputType | null
    _sum: Estoque_TecidosSumAggregateOutputType | null
    _min: Estoque_TecidosMinAggregateOutputType | null
    _max: Estoque_TecidosMaxAggregateOutputType | null
  }

  type GetEstoque_TecidosGroupByPayload<T extends Estoque_TecidosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Estoque_TecidosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Estoque_TecidosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Estoque_TecidosGroupByOutputType[P]>
            : GetScalarType<T[P], Estoque_TecidosGroupByOutputType[P]>
        }
      >
    >


  export type Estoque_TecidosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_do_tecido?: boolean
    id_Estabelecimento?: boolean
    nome_do_tecido?: boolean
    valor?: boolean
    fornecedor?: boolean
    composicao?: boolean
    largura?: boolean
    peso?: boolean
    estoque?: boolean
    data_?: boolean
    tamanho?: boolean
    notas?: boolean
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estoque_Tecidos"]>


  export type Estoque_TecidosSelectScalar = {
    id_do_tecido?: boolean
    id_Estabelecimento?: boolean
    nome_do_tecido?: boolean
    valor?: boolean
    fornecedor?: boolean
    composicao?: boolean
    largura?: boolean
    peso?: boolean
    estoque?: boolean
    data_?: boolean
    tamanho?: boolean
    notas?: boolean
  }

  export type Estoque_TecidosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
  }

  export type $Estoque_TecidosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Estoque_Tecidos"
    objects: {
      Estabelecimento: Prisma.$EstabelecimentoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_do_tecido: number
      id_Estabelecimento: string
      nome_do_tecido: string
      valor: number
      fornecedor: string
      composicao: string | null
      largura: number | null
      peso: number | null
      estoque: number
      data_: Date
      tamanho: number | null
      notas: string | null
    }, ExtArgs["result"]["estoque_Tecidos"]>
    composites: {}
  }

  type Estoque_TecidosGetPayload<S extends boolean | null | undefined | Estoque_TecidosDefaultArgs> = $Result.GetResult<Prisma.$Estoque_TecidosPayload, S>

  type Estoque_TecidosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Estoque_TecidosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Estoque_TecidosCountAggregateInputType | true
    }

  export interface Estoque_TecidosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Estoque_Tecidos'], meta: { name: 'Estoque_Tecidos' } }
    /**
     * Find zero or one Estoque_Tecidos that matches the filter.
     * @param {Estoque_TecidosFindUniqueArgs} args - Arguments to find a Estoque_Tecidos
     * @example
     * // Get one Estoque_Tecidos
     * const estoque_Tecidos = await prisma.estoque_Tecidos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Estoque_TecidosFindUniqueArgs>(args: SelectSubset<T, Estoque_TecidosFindUniqueArgs<ExtArgs>>): Prisma__Estoque_TecidosClient<$Result.GetResult<Prisma.$Estoque_TecidosPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Estoque_Tecidos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Estoque_TecidosFindUniqueOrThrowArgs} args - Arguments to find a Estoque_Tecidos
     * @example
     * // Get one Estoque_Tecidos
     * const estoque_Tecidos = await prisma.estoque_Tecidos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Estoque_TecidosFindUniqueOrThrowArgs>(args: SelectSubset<T, Estoque_TecidosFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Estoque_TecidosClient<$Result.GetResult<Prisma.$Estoque_TecidosPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Estoque_Tecidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_TecidosFindFirstArgs} args - Arguments to find a Estoque_Tecidos
     * @example
     * // Get one Estoque_Tecidos
     * const estoque_Tecidos = await prisma.estoque_Tecidos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Estoque_TecidosFindFirstArgs>(args?: SelectSubset<T, Estoque_TecidosFindFirstArgs<ExtArgs>>): Prisma__Estoque_TecidosClient<$Result.GetResult<Prisma.$Estoque_TecidosPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Estoque_Tecidos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_TecidosFindFirstOrThrowArgs} args - Arguments to find a Estoque_Tecidos
     * @example
     * // Get one Estoque_Tecidos
     * const estoque_Tecidos = await prisma.estoque_Tecidos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Estoque_TecidosFindFirstOrThrowArgs>(args?: SelectSubset<T, Estoque_TecidosFindFirstOrThrowArgs<ExtArgs>>): Prisma__Estoque_TecidosClient<$Result.GetResult<Prisma.$Estoque_TecidosPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Estoque_Tecidos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_TecidosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estoque_Tecidos
     * const estoque_Tecidos = await prisma.estoque_Tecidos.findMany()
     * 
     * // Get first 10 Estoque_Tecidos
     * const estoque_Tecidos = await prisma.estoque_Tecidos.findMany({ take: 10 })
     * 
     * // Only select the `id_do_tecido`
     * const estoque_TecidosWithId_do_tecidoOnly = await prisma.estoque_Tecidos.findMany({ select: { id_do_tecido: true } })
     * 
     */
    findMany<T extends Estoque_TecidosFindManyArgs>(args?: SelectSubset<T, Estoque_TecidosFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Estoque_TecidosPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Estoque_Tecidos.
     * @param {Estoque_TecidosCreateArgs} args - Arguments to create a Estoque_Tecidos.
     * @example
     * // Create one Estoque_Tecidos
     * const Estoque_Tecidos = await prisma.estoque_Tecidos.create({
     *   data: {
     *     // ... data to create a Estoque_Tecidos
     *   }
     * })
     * 
     */
    create<T extends Estoque_TecidosCreateArgs>(args: SelectSubset<T, Estoque_TecidosCreateArgs<ExtArgs>>): Prisma__Estoque_TecidosClient<$Result.GetResult<Prisma.$Estoque_TecidosPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Estoque_Tecidos.
     * @param {Estoque_TecidosCreateManyArgs} args - Arguments to create many Estoque_Tecidos.
     * @example
     * // Create many Estoque_Tecidos
     * const estoque_Tecidos = await prisma.estoque_Tecidos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Estoque_TecidosCreateManyArgs>(args?: SelectSubset<T, Estoque_TecidosCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Estoque_Tecidos.
     * @param {Estoque_TecidosDeleteArgs} args - Arguments to delete one Estoque_Tecidos.
     * @example
     * // Delete one Estoque_Tecidos
     * const Estoque_Tecidos = await prisma.estoque_Tecidos.delete({
     *   where: {
     *     // ... filter to delete one Estoque_Tecidos
     *   }
     * })
     * 
     */
    delete<T extends Estoque_TecidosDeleteArgs>(args: SelectSubset<T, Estoque_TecidosDeleteArgs<ExtArgs>>): Prisma__Estoque_TecidosClient<$Result.GetResult<Prisma.$Estoque_TecidosPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Estoque_Tecidos.
     * @param {Estoque_TecidosUpdateArgs} args - Arguments to update one Estoque_Tecidos.
     * @example
     * // Update one Estoque_Tecidos
     * const estoque_Tecidos = await prisma.estoque_Tecidos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Estoque_TecidosUpdateArgs>(args: SelectSubset<T, Estoque_TecidosUpdateArgs<ExtArgs>>): Prisma__Estoque_TecidosClient<$Result.GetResult<Prisma.$Estoque_TecidosPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Estoque_Tecidos.
     * @param {Estoque_TecidosDeleteManyArgs} args - Arguments to filter Estoque_Tecidos to delete.
     * @example
     * // Delete a few Estoque_Tecidos
     * const { count } = await prisma.estoque_Tecidos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Estoque_TecidosDeleteManyArgs>(args?: SelectSubset<T, Estoque_TecidosDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estoque_Tecidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_TecidosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estoque_Tecidos
     * const estoque_Tecidos = await prisma.estoque_Tecidos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Estoque_TecidosUpdateManyArgs>(args: SelectSubset<T, Estoque_TecidosUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Estoque_Tecidos.
     * @param {Estoque_TecidosUpsertArgs} args - Arguments to update or create a Estoque_Tecidos.
     * @example
     * // Update or create a Estoque_Tecidos
     * const estoque_Tecidos = await prisma.estoque_Tecidos.upsert({
     *   create: {
     *     // ... data to create a Estoque_Tecidos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estoque_Tecidos we want to update
     *   }
     * })
     */
    upsert<T extends Estoque_TecidosUpsertArgs>(args: SelectSubset<T, Estoque_TecidosUpsertArgs<ExtArgs>>): Prisma__Estoque_TecidosClient<$Result.GetResult<Prisma.$Estoque_TecidosPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Estoque_Tecidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_TecidosCountArgs} args - Arguments to filter Estoque_Tecidos to count.
     * @example
     * // Count the number of Estoque_Tecidos
     * const count = await prisma.estoque_Tecidos.count({
     *   where: {
     *     // ... the filter for the Estoque_Tecidos we want to count
     *   }
     * })
    **/
    count<T extends Estoque_TecidosCountArgs>(
      args?: Subset<T, Estoque_TecidosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Estoque_TecidosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estoque_Tecidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_TecidosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Estoque_TecidosAggregateArgs>(args: Subset<T, Estoque_TecidosAggregateArgs>): Prisma.PrismaPromise<GetEstoque_TecidosAggregateType<T>>

    /**
     * Group by Estoque_Tecidos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_TecidosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Estoque_TecidosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Estoque_TecidosGroupByArgs['orderBy'] }
        : { orderBy?: Estoque_TecidosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Estoque_TecidosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstoque_TecidosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Estoque_Tecidos model
   */
  readonly fields: Estoque_TecidosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Estoque_Tecidos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Estoque_TecidosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Estabelecimento<T extends EstabelecimentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstabelecimentoDefaultArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Estoque_Tecidos model
   */ 
  interface Estoque_TecidosFieldRefs {
    readonly id_do_tecido: FieldRef<"Estoque_Tecidos", 'Int'>
    readonly id_Estabelecimento: FieldRef<"Estoque_Tecidos", 'String'>
    readonly nome_do_tecido: FieldRef<"Estoque_Tecidos", 'String'>
    readonly valor: FieldRef<"Estoque_Tecidos", 'Float'>
    readonly fornecedor: FieldRef<"Estoque_Tecidos", 'String'>
    readonly composicao: FieldRef<"Estoque_Tecidos", 'String'>
    readonly largura: FieldRef<"Estoque_Tecidos", 'Float'>
    readonly peso: FieldRef<"Estoque_Tecidos", 'Float'>
    readonly estoque: FieldRef<"Estoque_Tecidos", 'Int'>
    readonly data_: FieldRef<"Estoque_Tecidos", 'DateTime'>
    readonly tamanho: FieldRef<"Estoque_Tecidos", 'Float'>
    readonly notas: FieldRef<"Estoque_Tecidos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Estoque_Tecidos findUnique
   */
  export type Estoque_TecidosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
    /**
     * Filter, which Estoque_Tecidos to fetch.
     */
    where: Estoque_TecidosWhereUniqueInput
  }

  /**
   * Estoque_Tecidos findUniqueOrThrow
   */
  export type Estoque_TecidosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
    /**
     * Filter, which Estoque_Tecidos to fetch.
     */
    where: Estoque_TecidosWhereUniqueInput
  }

  /**
   * Estoque_Tecidos findFirst
   */
  export type Estoque_TecidosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
    /**
     * Filter, which Estoque_Tecidos to fetch.
     */
    where?: Estoque_TecidosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoque_Tecidos to fetch.
     */
    orderBy?: Estoque_TecidosOrderByWithRelationInput | Estoque_TecidosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estoque_Tecidos.
     */
    cursor?: Estoque_TecidosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoque_Tecidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoque_Tecidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estoque_Tecidos.
     */
    distinct?: Estoque_TecidosScalarFieldEnum | Estoque_TecidosScalarFieldEnum[]
  }

  /**
   * Estoque_Tecidos findFirstOrThrow
   */
  export type Estoque_TecidosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
    /**
     * Filter, which Estoque_Tecidos to fetch.
     */
    where?: Estoque_TecidosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoque_Tecidos to fetch.
     */
    orderBy?: Estoque_TecidosOrderByWithRelationInput | Estoque_TecidosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estoque_Tecidos.
     */
    cursor?: Estoque_TecidosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoque_Tecidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoque_Tecidos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estoque_Tecidos.
     */
    distinct?: Estoque_TecidosScalarFieldEnum | Estoque_TecidosScalarFieldEnum[]
  }

  /**
   * Estoque_Tecidos findMany
   */
  export type Estoque_TecidosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
    /**
     * Filter, which Estoque_Tecidos to fetch.
     */
    where?: Estoque_TecidosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoque_Tecidos to fetch.
     */
    orderBy?: Estoque_TecidosOrderByWithRelationInput | Estoque_TecidosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Estoque_Tecidos.
     */
    cursor?: Estoque_TecidosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoque_Tecidos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoque_Tecidos.
     */
    skip?: number
    distinct?: Estoque_TecidosScalarFieldEnum | Estoque_TecidosScalarFieldEnum[]
  }

  /**
   * Estoque_Tecidos create
   */
  export type Estoque_TecidosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
    /**
     * The data needed to create a Estoque_Tecidos.
     */
    data: XOR<Estoque_TecidosCreateInput, Estoque_TecidosUncheckedCreateInput>
  }

  /**
   * Estoque_Tecidos createMany
   */
  export type Estoque_TecidosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Estoque_Tecidos.
     */
    data: Estoque_TecidosCreateManyInput | Estoque_TecidosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Estoque_Tecidos update
   */
  export type Estoque_TecidosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
    /**
     * The data needed to update a Estoque_Tecidos.
     */
    data: XOR<Estoque_TecidosUpdateInput, Estoque_TecidosUncheckedUpdateInput>
    /**
     * Choose, which Estoque_Tecidos to update.
     */
    where: Estoque_TecidosWhereUniqueInput
  }

  /**
   * Estoque_Tecidos updateMany
   */
  export type Estoque_TecidosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Estoque_Tecidos.
     */
    data: XOR<Estoque_TecidosUpdateManyMutationInput, Estoque_TecidosUncheckedUpdateManyInput>
    /**
     * Filter which Estoque_Tecidos to update
     */
    where?: Estoque_TecidosWhereInput
  }

  /**
   * Estoque_Tecidos upsert
   */
  export type Estoque_TecidosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
    /**
     * The filter to search for the Estoque_Tecidos to update in case it exists.
     */
    where: Estoque_TecidosWhereUniqueInput
    /**
     * In case the Estoque_Tecidos found by the `where` argument doesn't exist, create a new Estoque_Tecidos with this data.
     */
    create: XOR<Estoque_TecidosCreateInput, Estoque_TecidosUncheckedCreateInput>
    /**
     * In case the Estoque_Tecidos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Estoque_TecidosUpdateInput, Estoque_TecidosUncheckedUpdateInput>
  }

  /**
   * Estoque_Tecidos delete
   */
  export type Estoque_TecidosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
    /**
     * Filter which Estoque_Tecidos to delete.
     */
    where: Estoque_TecidosWhereUniqueInput
  }

  /**
   * Estoque_Tecidos deleteMany
   */
  export type Estoque_TecidosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estoque_Tecidos to delete
     */
    where?: Estoque_TecidosWhereInput
  }

  /**
   * Estoque_Tecidos without action
   */
  export type Estoque_TecidosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Tecidos
     */
    select?: Estoque_TecidosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_TecidosInclude<ExtArgs> | null
  }


  /**
   * Model Estoque_Agulhas
   */

  export type AggregateEstoque_Agulhas = {
    _count: Estoque_AgulhasCountAggregateOutputType | null
    _avg: Estoque_AgulhasAvgAggregateOutputType | null
    _sum: Estoque_AgulhasSumAggregateOutputType | null
    _min: Estoque_AgulhasMinAggregateOutputType | null
    _max: Estoque_AgulhasMaxAggregateOutputType | null
  }

  export type Estoque_AgulhasAvgAggregateOutputType = {
    id_da_agulha: number | null
    valor: number | null
    estoque: number | null
  }

  export type Estoque_AgulhasSumAggregateOutputType = {
    id_da_agulha: number | null
    valor: number | null
    estoque: number | null
  }

  export type Estoque_AgulhasMinAggregateOutputType = {
    id_da_agulha: number | null
    id_Estabelecimento: string | null
    valor: number | null
    fornecedor: string | null
    numeracao: string | null
    estoque: number | null
    data: Date | null
    notas: string | null
  }

  export type Estoque_AgulhasMaxAggregateOutputType = {
    id_da_agulha: number | null
    id_Estabelecimento: string | null
    valor: number | null
    fornecedor: string | null
    numeracao: string | null
    estoque: number | null
    data: Date | null
    notas: string | null
  }

  export type Estoque_AgulhasCountAggregateOutputType = {
    id_da_agulha: number
    id_Estabelecimento: number
    valor: number
    fornecedor: number
    numeracao: number
    estoque: number
    data: number
    notas: number
    _all: number
  }


  export type Estoque_AgulhasAvgAggregateInputType = {
    id_da_agulha?: true
    valor?: true
    estoque?: true
  }

  export type Estoque_AgulhasSumAggregateInputType = {
    id_da_agulha?: true
    valor?: true
    estoque?: true
  }

  export type Estoque_AgulhasMinAggregateInputType = {
    id_da_agulha?: true
    id_Estabelecimento?: true
    valor?: true
    fornecedor?: true
    numeracao?: true
    estoque?: true
    data?: true
    notas?: true
  }

  export type Estoque_AgulhasMaxAggregateInputType = {
    id_da_agulha?: true
    id_Estabelecimento?: true
    valor?: true
    fornecedor?: true
    numeracao?: true
    estoque?: true
    data?: true
    notas?: true
  }

  export type Estoque_AgulhasCountAggregateInputType = {
    id_da_agulha?: true
    id_Estabelecimento?: true
    valor?: true
    fornecedor?: true
    numeracao?: true
    estoque?: true
    data?: true
    notas?: true
    _all?: true
  }

  export type Estoque_AgulhasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estoque_Agulhas to aggregate.
     */
    where?: Estoque_AgulhasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoque_Agulhas to fetch.
     */
    orderBy?: Estoque_AgulhasOrderByWithRelationInput | Estoque_AgulhasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: Estoque_AgulhasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoque_Agulhas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoque_Agulhas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Estoque_Agulhas
    **/
    _count?: true | Estoque_AgulhasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Estoque_AgulhasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Estoque_AgulhasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Estoque_AgulhasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Estoque_AgulhasMaxAggregateInputType
  }

  export type GetEstoque_AgulhasAggregateType<T extends Estoque_AgulhasAggregateArgs> = {
        [P in keyof T & keyof AggregateEstoque_Agulhas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEstoque_Agulhas[P]>
      : GetScalarType<T[P], AggregateEstoque_Agulhas[P]>
  }




  export type Estoque_AgulhasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: Estoque_AgulhasWhereInput
    orderBy?: Estoque_AgulhasOrderByWithAggregationInput | Estoque_AgulhasOrderByWithAggregationInput[]
    by: Estoque_AgulhasScalarFieldEnum[] | Estoque_AgulhasScalarFieldEnum
    having?: Estoque_AgulhasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Estoque_AgulhasCountAggregateInputType | true
    _avg?: Estoque_AgulhasAvgAggregateInputType
    _sum?: Estoque_AgulhasSumAggregateInputType
    _min?: Estoque_AgulhasMinAggregateInputType
    _max?: Estoque_AgulhasMaxAggregateInputType
  }

  export type Estoque_AgulhasGroupByOutputType = {
    id_da_agulha: number
    id_Estabelecimento: string
    valor: number
    fornecedor: string | null
    numeracao: string | null
    estoque: number
    data: Date
    notas: string | null
    _count: Estoque_AgulhasCountAggregateOutputType | null
    _avg: Estoque_AgulhasAvgAggregateOutputType | null
    _sum: Estoque_AgulhasSumAggregateOutputType | null
    _min: Estoque_AgulhasMinAggregateOutputType | null
    _max: Estoque_AgulhasMaxAggregateOutputType | null
  }

  type GetEstoque_AgulhasGroupByPayload<T extends Estoque_AgulhasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Estoque_AgulhasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Estoque_AgulhasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Estoque_AgulhasGroupByOutputType[P]>
            : GetScalarType<T[P], Estoque_AgulhasGroupByOutputType[P]>
        }
      >
    >


  export type Estoque_AgulhasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id_da_agulha?: boolean
    id_Estabelecimento?: boolean
    valor?: boolean
    fornecedor?: boolean
    numeracao?: boolean
    estoque?: boolean
    data?: boolean
    notas?: boolean
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["estoque_Agulhas"]>


  export type Estoque_AgulhasSelectScalar = {
    id_da_agulha?: boolean
    id_Estabelecimento?: boolean
    valor?: boolean
    fornecedor?: boolean
    numeracao?: boolean
    estoque?: boolean
    data?: boolean
    notas?: boolean
  }

  export type Estoque_AgulhasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
  }

  export type $Estoque_AgulhasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Estoque_Agulhas"
    objects: {
      Estabelecimento: Prisma.$EstabelecimentoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id_da_agulha: number
      id_Estabelecimento: string
      valor: number
      fornecedor: string | null
      numeracao: string | null
      estoque: number
      data: Date
      notas: string | null
    }, ExtArgs["result"]["estoque_Agulhas"]>
    composites: {}
  }

  type Estoque_AgulhasGetPayload<S extends boolean | null | undefined | Estoque_AgulhasDefaultArgs> = $Result.GetResult<Prisma.$Estoque_AgulhasPayload, S>

  type Estoque_AgulhasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<Estoque_AgulhasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Estoque_AgulhasCountAggregateInputType | true
    }

  export interface Estoque_AgulhasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Estoque_Agulhas'], meta: { name: 'Estoque_Agulhas' } }
    /**
     * Find zero or one Estoque_Agulhas that matches the filter.
     * @param {Estoque_AgulhasFindUniqueArgs} args - Arguments to find a Estoque_Agulhas
     * @example
     * // Get one Estoque_Agulhas
     * const estoque_Agulhas = await prisma.estoque_Agulhas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends Estoque_AgulhasFindUniqueArgs>(args: SelectSubset<T, Estoque_AgulhasFindUniqueArgs<ExtArgs>>): Prisma__Estoque_AgulhasClient<$Result.GetResult<Prisma.$Estoque_AgulhasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Estoque_Agulhas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {Estoque_AgulhasFindUniqueOrThrowArgs} args - Arguments to find a Estoque_Agulhas
     * @example
     * // Get one Estoque_Agulhas
     * const estoque_Agulhas = await prisma.estoque_Agulhas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends Estoque_AgulhasFindUniqueOrThrowArgs>(args: SelectSubset<T, Estoque_AgulhasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__Estoque_AgulhasClient<$Result.GetResult<Prisma.$Estoque_AgulhasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Estoque_Agulhas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_AgulhasFindFirstArgs} args - Arguments to find a Estoque_Agulhas
     * @example
     * // Get one Estoque_Agulhas
     * const estoque_Agulhas = await prisma.estoque_Agulhas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends Estoque_AgulhasFindFirstArgs>(args?: SelectSubset<T, Estoque_AgulhasFindFirstArgs<ExtArgs>>): Prisma__Estoque_AgulhasClient<$Result.GetResult<Prisma.$Estoque_AgulhasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Estoque_Agulhas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_AgulhasFindFirstOrThrowArgs} args - Arguments to find a Estoque_Agulhas
     * @example
     * // Get one Estoque_Agulhas
     * const estoque_Agulhas = await prisma.estoque_Agulhas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends Estoque_AgulhasFindFirstOrThrowArgs>(args?: SelectSubset<T, Estoque_AgulhasFindFirstOrThrowArgs<ExtArgs>>): Prisma__Estoque_AgulhasClient<$Result.GetResult<Prisma.$Estoque_AgulhasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Estoque_Agulhas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_AgulhasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Estoque_Agulhas
     * const estoque_Agulhas = await prisma.estoque_Agulhas.findMany()
     * 
     * // Get first 10 Estoque_Agulhas
     * const estoque_Agulhas = await prisma.estoque_Agulhas.findMany({ take: 10 })
     * 
     * // Only select the `id_da_agulha`
     * const estoque_AgulhasWithId_da_agulhaOnly = await prisma.estoque_Agulhas.findMany({ select: { id_da_agulha: true } })
     * 
     */
    findMany<T extends Estoque_AgulhasFindManyArgs>(args?: SelectSubset<T, Estoque_AgulhasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$Estoque_AgulhasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Estoque_Agulhas.
     * @param {Estoque_AgulhasCreateArgs} args - Arguments to create a Estoque_Agulhas.
     * @example
     * // Create one Estoque_Agulhas
     * const Estoque_Agulhas = await prisma.estoque_Agulhas.create({
     *   data: {
     *     // ... data to create a Estoque_Agulhas
     *   }
     * })
     * 
     */
    create<T extends Estoque_AgulhasCreateArgs>(args: SelectSubset<T, Estoque_AgulhasCreateArgs<ExtArgs>>): Prisma__Estoque_AgulhasClient<$Result.GetResult<Prisma.$Estoque_AgulhasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Estoque_Agulhas.
     * @param {Estoque_AgulhasCreateManyArgs} args - Arguments to create many Estoque_Agulhas.
     * @example
     * // Create many Estoque_Agulhas
     * const estoque_Agulhas = await prisma.estoque_Agulhas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends Estoque_AgulhasCreateManyArgs>(args?: SelectSubset<T, Estoque_AgulhasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Estoque_Agulhas.
     * @param {Estoque_AgulhasDeleteArgs} args - Arguments to delete one Estoque_Agulhas.
     * @example
     * // Delete one Estoque_Agulhas
     * const Estoque_Agulhas = await prisma.estoque_Agulhas.delete({
     *   where: {
     *     // ... filter to delete one Estoque_Agulhas
     *   }
     * })
     * 
     */
    delete<T extends Estoque_AgulhasDeleteArgs>(args: SelectSubset<T, Estoque_AgulhasDeleteArgs<ExtArgs>>): Prisma__Estoque_AgulhasClient<$Result.GetResult<Prisma.$Estoque_AgulhasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Estoque_Agulhas.
     * @param {Estoque_AgulhasUpdateArgs} args - Arguments to update one Estoque_Agulhas.
     * @example
     * // Update one Estoque_Agulhas
     * const estoque_Agulhas = await prisma.estoque_Agulhas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends Estoque_AgulhasUpdateArgs>(args: SelectSubset<T, Estoque_AgulhasUpdateArgs<ExtArgs>>): Prisma__Estoque_AgulhasClient<$Result.GetResult<Prisma.$Estoque_AgulhasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Estoque_Agulhas.
     * @param {Estoque_AgulhasDeleteManyArgs} args - Arguments to filter Estoque_Agulhas to delete.
     * @example
     * // Delete a few Estoque_Agulhas
     * const { count } = await prisma.estoque_Agulhas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends Estoque_AgulhasDeleteManyArgs>(args?: SelectSubset<T, Estoque_AgulhasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Estoque_Agulhas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_AgulhasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Estoque_Agulhas
     * const estoque_Agulhas = await prisma.estoque_Agulhas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends Estoque_AgulhasUpdateManyArgs>(args: SelectSubset<T, Estoque_AgulhasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Estoque_Agulhas.
     * @param {Estoque_AgulhasUpsertArgs} args - Arguments to update or create a Estoque_Agulhas.
     * @example
     * // Update or create a Estoque_Agulhas
     * const estoque_Agulhas = await prisma.estoque_Agulhas.upsert({
     *   create: {
     *     // ... data to create a Estoque_Agulhas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Estoque_Agulhas we want to update
     *   }
     * })
     */
    upsert<T extends Estoque_AgulhasUpsertArgs>(args: SelectSubset<T, Estoque_AgulhasUpsertArgs<ExtArgs>>): Prisma__Estoque_AgulhasClient<$Result.GetResult<Prisma.$Estoque_AgulhasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Estoque_Agulhas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_AgulhasCountArgs} args - Arguments to filter Estoque_Agulhas to count.
     * @example
     * // Count the number of Estoque_Agulhas
     * const count = await prisma.estoque_Agulhas.count({
     *   where: {
     *     // ... the filter for the Estoque_Agulhas we want to count
     *   }
     * })
    **/
    count<T extends Estoque_AgulhasCountArgs>(
      args?: Subset<T, Estoque_AgulhasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Estoque_AgulhasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Estoque_Agulhas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_AgulhasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Estoque_AgulhasAggregateArgs>(args: Subset<T, Estoque_AgulhasAggregateArgs>): Prisma.PrismaPromise<GetEstoque_AgulhasAggregateType<T>>

    /**
     * Group by Estoque_Agulhas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Estoque_AgulhasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends Estoque_AgulhasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: Estoque_AgulhasGroupByArgs['orderBy'] }
        : { orderBy?: Estoque_AgulhasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, Estoque_AgulhasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEstoque_AgulhasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Estoque_Agulhas model
   */
  readonly fields: Estoque_AgulhasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Estoque_Agulhas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__Estoque_AgulhasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Estabelecimento<T extends EstabelecimentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstabelecimentoDefaultArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Estoque_Agulhas model
   */ 
  interface Estoque_AgulhasFieldRefs {
    readonly id_da_agulha: FieldRef<"Estoque_Agulhas", 'Int'>
    readonly id_Estabelecimento: FieldRef<"Estoque_Agulhas", 'String'>
    readonly valor: FieldRef<"Estoque_Agulhas", 'Float'>
    readonly fornecedor: FieldRef<"Estoque_Agulhas", 'String'>
    readonly numeracao: FieldRef<"Estoque_Agulhas", 'String'>
    readonly estoque: FieldRef<"Estoque_Agulhas", 'Int'>
    readonly data: FieldRef<"Estoque_Agulhas", 'DateTime'>
    readonly notas: FieldRef<"Estoque_Agulhas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Estoque_Agulhas findUnique
   */
  export type Estoque_AgulhasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
    /**
     * Filter, which Estoque_Agulhas to fetch.
     */
    where: Estoque_AgulhasWhereUniqueInput
  }

  /**
   * Estoque_Agulhas findUniqueOrThrow
   */
  export type Estoque_AgulhasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
    /**
     * Filter, which Estoque_Agulhas to fetch.
     */
    where: Estoque_AgulhasWhereUniqueInput
  }

  /**
   * Estoque_Agulhas findFirst
   */
  export type Estoque_AgulhasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
    /**
     * Filter, which Estoque_Agulhas to fetch.
     */
    where?: Estoque_AgulhasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoque_Agulhas to fetch.
     */
    orderBy?: Estoque_AgulhasOrderByWithRelationInput | Estoque_AgulhasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estoque_Agulhas.
     */
    cursor?: Estoque_AgulhasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoque_Agulhas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoque_Agulhas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estoque_Agulhas.
     */
    distinct?: Estoque_AgulhasScalarFieldEnum | Estoque_AgulhasScalarFieldEnum[]
  }

  /**
   * Estoque_Agulhas findFirstOrThrow
   */
  export type Estoque_AgulhasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
    /**
     * Filter, which Estoque_Agulhas to fetch.
     */
    where?: Estoque_AgulhasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoque_Agulhas to fetch.
     */
    orderBy?: Estoque_AgulhasOrderByWithRelationInput | Estoque_AgulhasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Estoque_Agulhas.
     */
    cursor?: Estoque_AgulhasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoque_Agulhas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoque_Agulhas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Estoque_Agulhas.
     */
    distinct?: Estoque_AgulhasScalarFieldEnum | Estoque_AgulhasScalarFieldEnum[]
  }

  /**
   * Estoque_Agulhas findMany
   */
  export type Estoque_AgulhasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
    /**
     * Filter, which Estoque_Agulhas to fetch.
     */
    where?: Estoque_AgulhasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Estoque_Agulhas to fetch.
     */
    orderBy?: Estoque_AgulhasOrderByWithRelationInput | Estoque_AgulhasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Estoque_Agulhas.
     */
    cursor?: Estoque_AgulhasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Estoque_Agulhas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Estoque_Agulhas.
     */
    skip?: number
    distinct?: Estoque_AgulhasScalarFieldEnum | Estoque_AgulhasScalarFieldEnum[]
  }

  /**
   * Estoque_Agulhas create
   */
  export type Estoque_AgulhasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
    /**
     * The data needed to create a Estoque_Agulhas.
     */
    data: XOR<Estoque_AgulhasCreateInput, Estoque_AgulhasUncheckedCreateInput>
  }

  /**
   * Estoque_Agulhas createMany
   */
  export type Estoque_AgulhasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Estoque_Agulhas.
     */
    data: Estoque_AgulhasCreateManyInput | Estoque_AgulhasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Estoque_Agulhas update
   */
  export type Estoque_AgulhasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
    /**
     * The data needed to update a Estoque_Agulhas.
     */
    data: XOR<Estoque_AgulhasUpdateInput, Estoque_AgulhasUncheckedUpdateInput>
    /**
     * Choose, which Estoque_Agulhas to update.
     */
    where: Estoque_AgulhasWhereUniqueInput
  }

  /**
   * Estoque_Agulhas updateMany
   */
  export type Estoque_AgulhasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Estoque_Agulhas.
     */
    data: XOR<Estoque_AgulhasUpdateManyMutationInput, Estoque_AgulhasUncheckedUpdateManyInput>
    /**
     * Filter which Estoque_Agulhas to update
     */
    where?: Estoque_AgulhasWhereInput
  }

  /**
   * Estoque_Agulhas upsert
   */
  export type Estoque_AgulhasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
    /**
     * The filter to search for the Estoque_Agulhas to update in case it exists.
     */
    where: Estoque_AgulhasWhereUniqueInput
    /**
     * In case the Estoque_Agulhas found by the `where` argument doesn't exist, create a new Estoque_Agulhas with this data.
     */
    create: XOR<Estoque_AgulhasCreateInput, Estoque_AgulhasUncheckedCreateInput>
    /**
     * In case the Estoque_Agulhas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<Estoque_AgulhasUpdateInput, Estoque_AgulhasUncheckedUpdateInput>
  }

  /**
   * Estoque_Agulhas delete
   */
  export type Estoque_AgulhasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
    /**
     * Filter which Estoque_Agulhas to delete.
     */
    where: Estoque_AgulhasWhereUniqueInput
  }

  /**
   * Estoque_Agulhas deleteMany
   */
  export type Estoque_AgulhasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Estoque_Agulhas to delete
     */
    where?: Estoque_AgulhasWhereInput
  }

  /**
   * Estoque_Agulhas without action
   */
  export type Estoque_AgulhasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Estoque_Agulhas
     */
    select?: Estoque_AgulhasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: Estoque_AgulhasInclude<ExtArgs> | null
  }


  /**
   * Model Tarefas
   */

  export type AggregateTarefas = {
    _count: TarefasCountAggregateOutputType | null
    _avg: TarefasAvgAggregateOutputType | null
    _sum: TarefasSumAggregateOutputType | null
    _min: TarefasMinAggregateOutputType | null
    _max: TarefasMaxAggregateOutputType | null
  }

  export type TarefasAvgAggregateOutputType = {
    id: number | null
  }

  export type TarefasSumAggregateOutputType = {
    id: number | null
  }

  export type TarefasMinAggregateOutputType = {
    id: number | null
    id_Estabelecimento: string | null
    tarefa: string | null
    status: string | null
    data_abertura: Date | null
    data_conclusao: Date | null
    notas: string | null
  }

  export type TarefasMaxAggregateOutputType = {
    id: number | null
    id_Estabelecimento: string | null
    tarefa: string | null
    status: string | null
    data_abertura: Date | null
    data_conclusao: Date | null
    notas: string | null
  }

  export type TarefasCountAggregateOutputType = {
    id: number
    id_Estabelecimento: number
    tarefa: number
    status: number
    data_abertura: number
    data_conclusao: number
    notas: number
    _all: number
  }


  export type TarefasAvgAggregateInputType = {
    id?: true
  }

  export type TarefasSumAggregateInputType = {
    id?: true
  }

  export type TarefasMinAggregateInputType = {
    id?: true
    id_Estabelecimento?: true
    tarefa?: true
    status?: true
    data_abertura?: true
    data_conclusao?: true
    notas?: true
  }

  export type TarefasMaxAggregateInputType = {
    id?: true
    id_Estabelecimento?: true
    tarefa?: true
    status?: true
    data_abertura?: true
    data_conclusao?: true
    notas?: true
  }

  export type TarefasCountAggregateInputType = {
    id?: true
    id_Estabelecimento?: true
    tarefa?: true
    status?: true
    data_abertura?: true
    data_conclusao?: true
    notas?: true
    _all?: true
  }

  export type TarefasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tarefas to aggregate.
     */
    where?: TarefasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tarefas to fetch.
     */
    orderBy?: TarefasOrderByWithRelationInput | TarefasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TarefasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tarefas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tarefas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Tarefas
    **/
    _count?: true | TarefasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TarefasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TarefasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TarefasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TarefasMaxAggregateInputType
  }

  export type GetTarefasAggregateType<T extends TarefasAggregateArgs> = {
        [P in keyof T & keyof AggregateTarefas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTarefas[P]>
      : GetScalarType<T[P], AggregateTarefas[P]>
  }




  export type TarefasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TarefasWhereInput
    orderBy?: TarefasOrderByWithAggregationInput | TarefasOrderByWithAggregationInput[]
    by: TarefasScalarFieldEnum[] | TarefasScalarFieldEnum
    having?: TarefasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TarefasCountAggregateInputType | true
    _avg?: TarefasAvgAggregateInputType
    _sum?: TarefasSumAggregateInputType
    _min?: TarefasMinAggregateInputType
    _max?: TarefasMaxAggregateInputType
  }

  export type TarefasGroupByOutputType = {
    id: number
    id_Estabelecimento: string
    tarefa: string
    status: string
    data_abertura: Date
    data_conclusao: Date | null
    notas: string | null
    _count: TarefasCountAggregateOutputType | null
    _avg: TarefasAvgAggregateOutputType | null
    _sum: TarefasSumAggregateOutputType | null
    _min: TarefasMinAggregateOutputType | null
    _max: TarefasMaxAggregateOutputType | null
  }

  type GetTarefasGroupByPayload<T extends TarefasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TarefasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TarefasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TarefasGroupByOutputType[P]>
            : GetScalarType<T[P], TarefasGroupByOutputType[P]>
        }
      >
    >


  export type TarefasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    id_Estabelecimento?: boolean
    tarefa?: boolean
    status?: boolean
    data_abertura?: boolean
    data_conclusao?: boolean
    notas?: boolean
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tarefas"]>


  export type TarefasSelectScalar = {
    id?: boolean
    id_Estabelecimento?: boolean
    tarefa?: boolean
    status?: boolean
    data_abertura?: boolean
    data_conclusao?: boolean
    notas?: boolean
  }

  export type TarefasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
  }

  export type $TarefasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Tarefas"
    objects: {
      Estabelecimento: Prisma.$EstabelecimentoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      id_Estabelecimento: string
      tarefa: string
      status: string
      data_abertura: Date
      data_conclusao: Date | null
      notas: string | null
    }, ExtArgs["result"]["tarefas"]>
    composites: {}
  }

  type TarefasGetPayload<S extends boolean | null | undefined | TarefasDefaultArgs> = $Result.GetResult<Prisma.$TarefasPayload, S>

  type TarefasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TarefasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TarefasCountAggregateInputType | true
    }

  export interface TarefasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Tarefas'], meta: { name: 'Tarefas' } }
    /**
     * Find zero or one Tarefas that matches the filter.
     * @param {TarefasFindUniqueArgs} args - Arguments to find a Tarefas
     * @example
     * // Get one Tarefas
     * const tarefas = await prisma.tarefas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends TarefasFindUniqueArgs>(args: SelectSubset<T, TarefasFindUniqueArgs<ExtArgs>>): Prisma__TarefasClient<$Result.GetResult<Prisma.$TarefasPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Tarefas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TarefasFindUniqueOrThrowArgs} args - Arguments to find a Tarefas
     * @example
     * // Get one Tarefas
     * const tarefas = await prisma.tarefas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends TarefasFindUniqueOrThrowArgs>(args: SelectSubset<T, TarefasFindUniqueOrThrowArgs<ExtArgs>>): Prisma__TarefasClient<$Result.GetResult<Prisma.$TarefasPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Tarefas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarefasFindFirstArgs} args - Arguments to find a Tarefas
     * @example
     * // Get one Tarefas
     * const tarefas = await prisma.tarefas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends TarefasFindFirstArgs>(args?: SelectSubset<T, TarefasFindFirstArgs<ExtArgs>>): Prisma__TarefasClient<$Result.GetResult<Prisma.$TarefasPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Tarefas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarefasFindFirstOrThrowArgs} args - Arguments to find a Tarefas
     * @example
     * // Get one Tarefas
     * const tarefas = await prisma.tarefas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends TarefasFindFirstOrThrowArgs>(args?: SelectSubset<T, TarefasFindFirstOrThrowArgs<ExtArgs>>): Prisma__TarefasClient<$Result.GetResult<Prisma.$TarefasPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Tarefas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarefasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tarefas
     * const tarefas = await prisma.tarefas.findMany()
     * 
     * // Get first 10 Tarefas
     * const tarefas = await prisma.tarefas.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tarefasWithIdOnly = await prisma.tarefas.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends TarefasFindManyArgs>(args?: SelectSubset<T, TarefasFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TarefasPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Tarefas.
     * @param {TarefasCreateArgs} args - Arguments to create a Tarefas.
     * @example
     * // Create one Tarefas
     * const Tarefas = await prisma.tarefas.create({
     *   data: {
     *     // ... data to create a Tarefas
     *   }
     * })
     * 
     */
    create<T extends TarefasCreateArgs>(args: SelectSubset<T, TarefasCreateArgs<ExtArgs>>): Prisma__TarefasClient<$Result.GetResult<Prisma.$TarefasPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Tarefas.
     * @param {TarefasCreateManyArgs} args - Arguments to create many Tarefas.
     * @example
     * // Create many Tarefas
     * const tarefas = await prisma.tarefas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends TarefasCreateManyArgs>(args?: SelectSubset<T, TarefasCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tarefas.
     * @param {TarefasDeleteArgs} args - Arguments to delete one Tarefas.
     * @example
     * // Delete one Tarefas
     * const Tarefas = await prisma.tarefas.delete({
     *   where: {
     *     // ... filter to delete one Tarefas
     *   }
     * })
     * 
     */
    delete<T extends TarefasDeleteArgs>(args: SelectSubset<T, TarefasDeleteArgs<ExtArgs>>): Prisma__TarefasClient<$Result.GetResult<Prisma.$TarefasPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Tarefas.
     * @param {TarefasUpdateArgs} args - Arguments to update one Tarefas.
     * @example
     * // Update one Tarefas
     * const tarefas = await prisma.tarefas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends TarefasUpdateArgs>(args: SelectSubset<T, TarefasUpdateArgs<ExtArgs>>): Prisma__TarefasClient<$Result.GetResult<Prisma.$TarefasPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Tarefas.
     * @param {TarefasDeleteManyArgs} args - Arguments to filter Tarefas to delete.
     * @example
     * // Delete a few Tarefas
     * const { count } = await prisma.tarefas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends TarefasDeleteManyArgs>(args?: SelectSubset<T, TarefasDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tarefas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarefasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tarefas
     * const tarefas = await prisma.tarefas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends TarefasUpdateManyArgs>(args: SelectSubset<T, TarefasUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tarefas.
     * @param {TarefasUpsertArgs} args - Arguments to update or create a Tarefas.
     * @example
     * // Update or create a Tarefas
     * const tarefas = await prisma.tarefas.upsert({
     *   create: {
     *     // ... data to create a Tarefas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tarefas we want to update
     *   }
     * })
     */
    upsert<T extends TarefasUpsertArgs>(args: SelectSubset<T, TarefasUpsertArgs<ExtArgs>>): Prisma__TarefasClient<$Result.GetResult<Prisma.$TarefasPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Tarefas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarefasCountArgs} args - Arguments to filter Tarefas to count.
     * @example
     * // Count the number of Tarefas
     * const count = await prisma.tarefas.count({
     *   where: {
     *     // ... the filter for the Tarefas we want to count
     *   }
     * })
    **/
    count<T extends TarefasCountArgs>(
      args?: Subset<T, TarefasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TarefasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tarefas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarefasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TarefasAggregateArgs>(args: Subset<T, TarefasAggregateArgs>): Prisma.PrismaPromise<GetTarefasAggregateType<T>>

    /**
     * Group by Tarefas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TarefasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TarefasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TarefasGroupByArgs['orderBy'] }
        : { orderBy?: TarefasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TarefasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTarefasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Tarefas model
   */
  readonly fields: TarefasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Tarefas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TarefasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Estabelecimento<T extends EstabelecimentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstabelecimentoDefaultArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Tarefas model
   */ 
  interface TarefasFieldRefs {
    readonly id: FieldRef<"Tarefas", 'Int'>
    readonly id_Estabelecimento: FieldRef<"Tarefas", 'String'>
    readonly tarefa: FieldRef<"Tarefas", 'String'>
    readonly status: FieldRef<"Tarefas", 'String'>
    readonly data_abertura: FieldRef<"Tarefas", 'DateTime'>
    readonly data_conclusao: FieldRef<"Tarefas", 'DateTime'>
    readonly notas: FieldRef<"Tarefas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Tarefas findUnique
   */
  export type TarefasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
    /**
     * Filter, which Tarefas to fetch.
     */
    where: TarefasWhereUniqueInput
  }

  /**
   * Tarefas findUniqueOrThrow
   */
  export type TarefasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
    /**
     * Filter, which Tarefas to fetch.
     */
    where: TarefasWhereUniqueInput
  }

  /**
   * Tarefas findFirst
   */
  export type TarefasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
    /**
     * Filter, which Tarefas to fetch.
     */
    where?: TarefasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tarefas to fetch.
     */
    orderBy?: TarefasOrderByWithRelationInput | TarefasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tarefas.
     */
    cursor?: TarefasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tarefas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tarefas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tarefas.
     */
    distinct?: TarefasScalarFieldEnum | TarefasScalarFieldEnum[]
  }

  /**
   * Tarefas findFirstOrThrow
   */
  export type TarefasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
    /**
     * Filter, which Tarefas to fetch.
     */
    where?: TarefasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tarefas to fetch.
     */
    orderBy?: TarefasOrderByWithRelationInput | TarefasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Tarefas.
     */
    cursor?: TarefasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tarefas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tarefas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Tarefas.
     */
    distinct?: TarefasScalarFieldEnum | TarefasScalarFieldEnum[]
  }

  /**
   * Tarefas findMany
   */
  export type TarefasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
    /**
     * Filter, which Tarefas to fetch.
     */
    where?: TarefasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Tarefas to fetch.
     */
    orderBy?: TarefasOrderByWithRelationInput | TarefasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Tarefas.
     */
    cursor?: TarefasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Tarefas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Tarefas.
     */
    skip?: number
    distinct?: TarefasScalarFieldEnum | TarefasScalarFieldEnum[]
  }

  /**
   * Tarefas create
   */
  export type TarefasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
    /**
     * The data needed to create a Tarefas.
     */
    data: XOR<TarefasCreateInput, TarefasUncheckedCreateInput>
  }

  /**
   * Tarefas createMany
   */
  export type TarefasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Tarefas.
     */
    data: TarefasCreateManyInput | TarefasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Tarefas update
   */
  export type TarefasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
    /**
     * The data needed to update a Tarefas.
     */
    data: XOR<TarefasUpdateInput, TarefasUncheckedUpdateInput>
    /**
     * Choose, which Tarefas to update.
     */
    where: TarefasWhereUniqueInput
  }

  /**
   * Tarefas updateMany
   */
  export type TarefasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Tarefas.
     */
    data: XOR<TarefasUpdateManyMutationInput, TarefasUncheckedUpdateManyInput>
    /**
     * Filter which Tarefas to update
     */
    where?: TarefasWhereInput
  }

  /**
   * Tarefas upsert
   */
  export type TarefasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
    /**
     * The filter to search for the Tarefas to update in case it exists.
     */
    where: TarefasWhereUniqueInput
    /**
     * In case the Tarefas found by the `where` argument doesn't exist, create a new Tarefas with this data.
     */
    create: XOR<TarefasCreateInput, TarefasUncheckedCreateInput>
    /**
     * In case the Tarefas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TarefasUpdateInput, TarefasUncheckedUpdateInput>
  }

  /**
   * Tarefas delete
   */
  export type TarefasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
    /**
     * Filter which Tarefas to delete.
     */
    where: TarefasWhereUniqueInput
  }

  /**
   * Tarefas deleteMany
   */
  export type TarefasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Tarefas to delete
     */
    where?: TarefasWhereInput
  }

  /**
   * Tarefas without action
   */
  export type TarefasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Tarefas
     */
    select?: TarefasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TarefasInclude<ExtArgs> | null
  }


  /**
   * Model EquipesGrupos
   */

  export type AggregateEquipesGrupos = {
    _count: EquipesGruposCountAggregateOutputType | null
    _avg: EquipesGruposAvgAggregateOutputType | null
    _sum: EquipesGruposSumAggregateOutputType | null
    _min: EquipesGruposMinAggregateOutputType | null
    _max: EquipesGruposMaxAggregateOutputType | null
  }

  export type EquipesGruposAvgAggregateOutputType = {
    id: number | null
  }

  export type EquipesGruposSumAggregateOutputType = {
    id: number | null
  }

  export type EquipesGruposMinAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    usuarioEmail: string | null
    estabelecimentoCnpj: string | null
  }

  export type EquipesGruposMaxAggregateOutputType = {
    id: number | null
    nome: string | null
    descricao: string | null
    usuarioEmail: string | null
    estabelecimentoCnpj: string | null
  }

  export type EquipesGruposCountAggregateOutputType = {
    id: number
    nome: number
    descricao: number
    usuarioEmail: number
    estabelecimentoCnpj: number
    _all: number
  }


  export type EquipesGruposAvgAggregateInputType = {
    id?: true
  }

  export type EquipesGruposSumAggregateInputType = {
    id?: true
  }

  export type EquipesGruposMinAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    usuarioEmail?: true
    estabelecimentoCnpj?: true
  }

  export type EquipesGruposMaxAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    usuarioEmail?: true
    estabelecimentoCnpj?: true
  }

  export type EquipesGruposCountAggregateInputType = {
    id?: true
    nome?: true
    descricao?: true
    usuarioEmail?: true
    estabelecimentoCnpj?: true
    _all?: true
  }

  export type EquipesGruposAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipesGrupos to aggregate.
     */
    where?: EquipesGruposWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipesGrupos to fetch.
     */
    orderBy?: EquipesGruposOrderByWithRelationInput | EquipesGruposOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EquipesGruposWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipesGrupos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipesGrupos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EquipesGrupos
    **/
    _count?: true | EquipesGruposCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EquipesGruposAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EquipesGruposSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EquipesGruposMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EquipesGruposMaxAggregateInputType
  }

  export type GetEquipesGruposAggregateType<T extends EquipesGruposAggregateArgs> = {
        [P in keyof T & keyof AggregateEquipesGrupos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEquipesGrupos[P]>
      : GetScalarType<T[P], AggregateEquipesGrupos[P]>
  }




  export type EquipesGruposGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EquipesGruposWhereInput
    orderBy?: EquipesGruposOrderByWithAggregationInput | EquipesGruposOrderByWithAggregationInput[]
    by: EquipesGruposScalarFieldEnum[] | EquipesGruposScalarFieldEnum
    having?: EquipesGruposScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EquipesGruposCountAggregateInputType | true
    _avg?: EquipesGruposAvgAggregateInputType
    _sum?: EquipesGruposSumAggregateInputType
    _min?: EquipesGruposMinAggregateInputType
    _max?: EquipesGruposMaxAggregateInputType
  }

  export type EquipesGruposGroupByOutputType = {
    id: number
    nome: string
    descricao: string | null
    usuarioEmail: string
    estabelecimentoCnpj: string
    _count: EquipesGruposCountAggregateOutputType | null
    _avg: EquipesGruposAvgAggregateOutputType | null
    _sum: EquipesGruposSumAggregateOutputType | null
    _min: EquipesGruposMinAggregateOutputType | null
    _max: EquipesGruposMaxAggregateOutputType | null
  }

  type GetEquipesGruposGroupByPayload<T extends EquipesGruposGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EquipesGruposGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EquipesGruposGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EquipesGruposGroupByOutputType[P]>
            : GetScalarType<T[P], EquipesGruposGroupByOutputType[P]>
        }
      >
    >


  export type EquipesGruposSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nome?: boolean
    descricao?: boolean
    usuarioEmail?: boolean
    estabelecimentoCnpj?: boolean
    Usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["equipesGrupos"]>


  export type EquipesGruposSelectScalar = {
    id?: boolean
    nome?: boolean
    descricao?: boolean
    usuarioEmail?: boolean
    estabelecimentoCnpj?: boolean
  }

  export type EquipesGruposInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | UsuariosDefaultArgs<ExtArgs>
    Estabelecimento?: boolean | EstabelecimentoDefaultArgs<ExtArgs>
  }

  export type $EquipesGruposPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EquipesGrupos"
    objects: {
      Usuario: Prisma.$UsuariosPayload<ExtArgs>
      Estabelecimento: Prisma.$EstabelecimentoPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nome: string
      descricao: string | null
      usuarioEmail: string
      estabelecimentoCnpj: string
    }, ExtArgs["result"]["equipesGrupos"]>
    composites: {}
  }

  type EquipesGruposGetPayload<S extends boolean | null | undefined | EquipesGruposDefaultArgs> = $Result.GetResult<Prisma.$EquipesGruposPayload, S>

  type EquipesGruposCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<EquipesGruposFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: EquipesGruposCountAggregateInputType | true
    }

  export interface EquipesGruposDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EquipesGrupos'], meta: { name: 'EquipesGrupos' } }
    /**
     * Find zero or one EquipesGrupos that matches the filter.
     * @param {EquipesGruposFindUniqueArgs} args - Arguments to find a EquipesGrupos
     * @example
     * // Get one EquipesGrupos
     * const equipesGrupos = await prisma.equipesGrupos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EquipesGruposFindUniqueArgs>(args: SelectSubset<T, EquipesGruposFindUniqueArgs<ExtArgs>>): Prisma__EquipesGruposClient<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one EquipesGrupos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {EquipesGruposFindUniqueOrThrowArgs} args - Arguments to find a EquipesGrupos
     * @example
     * // Get one EquipesGrupos
     * const equipesGrupos = await prisma.equipesGrupos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EquipesGruposFindUniqueOrThrowArgs>(args: SelectSubset<T, EquipesGruposFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EquipesGruposClient<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first EquipesGrupos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipesGruposFindFirstArgs} args - Arguments to find a EquipesGrupos
     * @example
     * // Get one EquipesGrupos
     * const equipesGrupos = await prisma.equipesGrupos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EquipesGruposFindFirstArgs>(args?: SelectSubset<T, EquipesGruposFindFirstArgs<ExtArgs>>): Prisma__EquipesGruposClient<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first EquipesGrupos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipesGruposFindFirstOrThrowArgs} args - Arguments to find a EquipesGrupos
     * @example
     * // Get one EquipesGrupos
     * const equipesGrupos = await prisma.equipesGrupos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EquipesGruposFindFirstOrThrowArgs>(args?: SelectSubset<T, EquipesGruposFindFirstOrThrowArgs<ExtArgs>>): Prisma__EquipesGruposClient<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more EquipesGrupos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipesGruposFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EquipesGrupos
     * const equipesGrupos = await prisma.equipesGrupos.findMany()
     * 
     * // Get first 10 EquipesGrupos
     * const equipesGrupos = await prisma.equipesGrupos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const equipesGruposWithIdOnly = await prisma.equipesGrupos.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EquipesGruposFindManyArgs>(args?: SelectSubset<T, EquipesGruposFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a EquipesGrupos.
     * @param {EquipesGruposCreateArgs} args - Arguments to create a EquipesGrupos.
     * @example
     * // Create one EquipesGrupos
     * const EquipesGrupos = await prisma.equipesGrupos.create({
     *   data: {
     *     // ... data to create a EquipesGrupos
     *   }
     * })
     * 
     */
    create<T extends EquipesGruposCreateArgs>(args: SelectSubset<T, EquipesGruposCreateArgs<ExtArgs>>): Prisma__EquipesGruposClient<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many EquipesGrupos.
     * @param {EquipesGruposCreateManyArgs} args - Arguments to create many EquipesGrupos.
     * @example
     * // Create many EquipesGrupos
     * const equipesGrupos = await prisma.equipesGrupos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EquipesGruposCreateManyArgs>(args?: SelectSubset<T, EquipesGruposCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a EquipesGrupos.
     * @param {EquipesGruposDeleteArgs} args - Arguments to delete one EquipesGrupos.
     * @example
     * // Delete one EquipesGrupos
     * const EquipesGrupos = await prisma.equipesGrupos.delete({
     *   where: {
     *     // ... filter to delete one EquipesGrupos
     *   }
     * })
     * 
     */
    delete<T extends EquipesGruposDeleteArgs>(args: SelectSubset<T, EquipesGruposDeleteArgs<ExtArgs>>): Prisma__EquipesGruposClient<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one EquipesGrupos.
     * @param {EquipesGruposUpdateArgs} args - Arguments to update one EquipesGrupos.
     * @example
     * // Update one EquipesGrupos
     * const equipesGrupos = await prisma.equipesGrupos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EquipesGruposUpdateArgs>(args: SelectSubset<T, EquipesGruposUpdateArgs<ExtArgs>>): Prisma__EquipesGruposClient<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more EquipesGrupos.
     * @param {EquipesGruposDeleteManyArgs} args - Arguments to filter EquipesGrupos to delete.
     * @example
     * // Delete a few EquipesGrupos
     * const { count } = await prisma.equipesGrupos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EquipesGruposDeleteManyArgs>(args?: SelectSubset<T, EquipesGruposDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EquipesGrupos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipesGruposUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EquipesGrupos
     * const equipesGrupos = await prisma.equipesGrupos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EquipesGruposUpdateManyArgs>(args: SelectSubset<T, EquipesGruposUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one EquipesGrupos.
     * @param {EquipesGruposUpsertArgs} args - Arguments to update or create a EquipesGrupos.
     * @example
     * // Update or create a EquipesGrupos
     * const equipesGrupos = await prisma.equipesGrupos.upsert({
     *   create: {
     *     // ... data to create a EquipesGrupos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EquipesGrupos we want to update
     *   }
     * })
     */
    upsert<T extends EquipesGruposUpsertArgs>(args: SelectSubset<T, EquipesGruposUpsertArgs<ExtArgs>>): Prisma__EquipesGruposClient<$Result.GetResult<Prisma.$EquipesGruposPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of EquipesGrupos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipesGruposCountArgs} args - Arguments to filter EquipesGrupos to count.
     * @example
     * // Count the number of EquipesGrupos
     * const count = await prisma.equipesGrupos.count({
     *   where: {
     *     // ... the filter for the EquipesGrupos we want to count
     *   }
     * })
    **/
    count<T extends EquipesGruposCountArgs>(
      args?: Subset<T, EquipesGruposCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EquipesGruposCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EquipesGrupos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipesGruposAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EquipesGruposAggregateArgs>(args: Subset<T, EquipesGruposAggregateArgs>): Prisma.PrismaPromise<GetEquipesGruposAggregateType<T>>

    /**
     * Group by EquipesGrupos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EquipesGruposGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EquipesGruposGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EquipesGruposGroupByArgs['orderBy'] }
        : { orderBy?: EquipesGruposGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EquipesGruposGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEquipesGruposGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EquipesGrupos model
   */
  readonly fields: EquipesGruposFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EquipesGrupos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EquipesGruposClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Usuario<T extends UsuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UsuariosDefaultArgs<ExtArgs>>): Prisma__UsuariosClient<$Result.GetResult<Prisma.$UsuariosPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    Estabelecimento<T extends EstabelecimentoDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EstabelecimentoDefaultArgs<ExtArgs>>): Prisma__EstabelecimentoClient<$Result.GetResult<Prisma.$EstabelecimentoPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EquipesGrupos model
   */ 
  interface EquipesGruposFieldRefs {
    readonly id: FieldRef<"EquipesGrupos", 'Int'>
    readonly nome: FieldRef<"EquipesGrupos", 'String'>
    readonly descricao: FieldRef<"EquipesGrupos", 'String'>
    readonly usuarioEmail: FieldRef<"EquipesGrupos", 'String'>
    readonly estabelecimentoCnpj: FieldRef<"EquipesGrupos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * EquipesGrupos findUnique
   */
  export type EquipesGruposFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    /**
     * Filter, which EquipesGrupos to fetch.
     */
    where: EquipesGruposWhereUniqueInput
  }

  /**
   * EquipesGrupos findUniqueOrThrow
   */
  export type EquipesGruposFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    /**
     * Filter, which EquipesGrupos to fetch.
     */
    where: EquipesGruposWhereUniqueInput
  }

  /**
   * EquipesGrupos findFirst
   */
  export type EquipesGruposFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    /**
     * Filter, which EquipesGrupos to fetch.
     */
    where?: EquipesGruposWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipesGrupos to fetch.
     */
    orderBy?: EquipesGruposOrderByWithRelationInput | EquipesGruposOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipesGrupos.
     */
    cursor?: EquipesGruposWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipesGrupos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipesGrupos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipesGrupos.
     */
    distinct?: EquipesGruposScalarFieldEnum | EquipesGruposScalarFieldEnum[]
  }

  /**
   * EquipesGrupos findFirstOrThrow
   */
  export type EquipesGruposFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    /**
     * Filter, which EquipesGrupos to fetch.
     */
    where?: EquipesGruposWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipesGrupos to fetch.
     */
    orderBy?: EquipesGruposOrderByWithRelationInput | EquipesGruposOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EquipesGrupos.
     */
    cursor?: EquipesGruposWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipesGrupos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipesGrupos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EquipesGrupos.
     */
    distinct?: EquipesGruposScalarFieldEnum | EquipesGruposScalarFieldEnum[]
  }

  /**
   * EquipesGrupos findMany
   */
  export type EquipesGruposFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    /**
     * Filter, which EquipesGrupos to fetch.
     */
    where?: EquipesGruposWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EquipesGrupos to fetch.
     */
    orderBy?: EquipesGruposOrderByWithRelationInput | EquipesGruposOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EquipesGrupos.
     */
    cursor?: EquipesGruposWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EquipesGrupos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EquipesGrupos.
     */
    skip?: number
    distinct?: EquipesGruposScalarFieldEnum | EquipesGruposScalarFieldEnum[]
  }

  /**
   * EquipesGrupos create
   */
  export type EquipesGruposCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    /**
     * The data needed to create a EquipesGrupos.
     */
    data: XOR<EquipesGruposCreateInput, EquipesGruposUncheckedCreateInput>
  }

  /**
   * EquipesGrupos createMany
   */
  export type EquipesGruposCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EquipesGrupos.
     */
    data: EquipesGruposCreateManyInput | EquipesGruposCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EquipesGrupos update
   */
  export type EquipesGruposUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    /**
     * The data needed to update a EquipesGrupos.
     */
    data: XOR<EquipesGruposUpdateInput, EquipesGruposUncheckedUpdateInput>
    /**
     * Choose, which EquipesGrupos to update.
     */
    where: EquipesGruposWhereUniqueInput
  }

  /**
   * EquipesGrupos updateMany
   */
  export type EquipesGruposUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EquipesGrupos.
     */
    data: XOR<EquipesGruposUpdateManyMutationInput, EquipesGruposUncheckedUpdateManyInput>
    /**
     * Filter which EquipesGrupos to update
     */
    where?: EquipesGruposWhereInput
  }

  /**
   * EquipesGrupos upsert
   */
  export type EquipesGruposUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    /**
     * The filter to search for the EquipesGrupos to update in case it exists.
     */
    where: EquipesGruposWhereUniqueInput
    /**
     * In case the EquipesGrupos found by the `where` argument doesn't exist, create a new EquipesGrupos with this data.
     */
    create: XOR<EquipesGruposCreateInput, EquipesGruposUncheckedCreateInput>
    /**
     * In case the EquipesGrupos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EquipesGruposUpdateInput, EquipesGruposUncheckedUpdateInput>
  }

  /**
   * EquipesGrupos delete
   */
  export type EquipesGruposDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
    /**
     * Filter which EquipesGrupos to delete.
     */
    where: EquipesGruposWhereUniqueInput
  }

  /**
   * EquipesGrupos deleteMany
   */
  export type EquipesGruposDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EquipesGrupos to delete
     */
    where?: EquipesGruposWhereInput
  }

  /**
   * EquipesGrupos without action
   */
  export type EquipesGruposDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EquipesGrupos
     */
    select?: EquipesGruposSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EquipesGruposInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UsuariosScalarFieldEnum: {
    nome: 'nome',
    email: 'email',
    senha: 'senha',
    foto: 'foto',
    idade: 'idade',
    funcoes: 'funcoes',
    identidade: 'identidade',
    cpf: 'cpf',
    pis: 'pis',
    pix: 'pix',
    notas: 'notas',
    estabelecimentoCnpj: 'estabelecimentoCnpj'
  };

  export type UsuariosScalarFieldEnum = (typeof UsuariosScalarFieldEnum)[keyof typeof UsuariosScalarFieldEnum]


  export const EstabelecimentoScalarFieldEnum: {
    cnpj: 'cnpj'
  };

  export type EstabelecimentoScalarFieldEnum = (typeof EstabelecimentoScalarFieldEnum)[keyof typeof EstabelecimentoScalarFieldEnum]


  export const PecasOPScalarFieldEnum: {
    id_da_op: 'id_da_op',
    id_Estabelecimento: 'id_Estabelecimento',
    status: 'status',
    descricao: 'descricao',
    quantidade_pecas: 'quantidade_pecas',
    pedido_por: 'pedido_por',
    valor_peca: 'valor_peca',
    data_do_pedido: 'data_do_pedido',
    data_de_entrega: 'data_de_entrega',
    notas: 'notas',
    tempo_estimado: 'tempo_estimado',
    tempo_esperado: 'tempo_esperado'
  };

  export type PecasOPScalarFieldEnum = (typeof PecasOPScalarFieldEnum)[keyof typeof PecasOPScalarFieldEnum]


  export const EtapaScalarFieldEnum: {
    id_da_funcao: 'id_da_funcao',
    descricao: 'descricao'
  };

  export type EtapaScalarFieldEnum = (typeof EtapaScalarFieldEnum)[keyof typeof EtapaScalarFieldEnum]


  export const PecasEtapasScalarFieldEnum: {
    id_da_op: 'id_da_op',
    id_da_funcao: 'id_da_funcao'
  };

  export type PecasEtapasScalarFieldEnum = (typeof PecasEtapasScalarFieldEnum)[keyof typeof PecasEtapasScalarFieldEnum]


  export const ProducaoScalarFieldEnum: {
    id_da_producao: 'id_da_producao',
    quantidade_pecas: 'quantidade_pecas',
    id_Estabelecimento: 'id_Estabelecimento',
    id_da_op: 'id_da_op',
    id_funcionario: 'id_funcionario',
    id_da_funcao: 'id_da_funcao',
    data_inicio: 'data_inicio',
    hora_registro: 'hora_registro'
  };

  export type ProducaoScalarFieldEnum = (typeof ProducaoScalarFieldEnum)[keyof typeof ProducaoScalarFieldEnum]


  export const Estoque_TecidosScalarFieldEnum: {
    id_do_tecido: 'id_do_tecido',
    id_Estabelecimento: 'id_Estabelecimento',
    nome_do_tecido: 'nome_do_tecido',
    valor: 'valor',
    fornecedor: 'fornecedor',
    composicao: 'composicao',
    largura: 'largura',
    peso: 'peso',
    estoque: 'estoque',
    data_: 'data_',
    tamanho: 'tamanho',
    notas: 'notas'
  };

  export type Estoque_TecidosScalarFieldEnum = (typeof Estoque_TecidosScalarFieldEnum)[keyof typeof Estoque_TecidosScalarFieldEnum]


  export const Estoque_AgulhasScalarFieldEnum: {
    id_da_agulha: 'id_da_agulha',
    id_Estabelecimento: 'id_Estabelecimento',
    valor: 'valor',
    fornecedor: 'fornecedor',
    numeracao: 'numeracao',
    estoque: 'estoque',
    data: 'data',
    notas: 'notas'
  };

  export type Estoque_AgulhasScalarFieldEnum = (typeof Estoque_AgulhasScalarFieldEnum)[keyof typeof Estoque_AgulhasScalarFieldEnum]


  export const TarefasScalarFieldEnum: {
    id: 'id',
    id_Estabelecimento: 'id_Estabelecimento',
    tarefa: 'tarefa',
    status: 'status',
    data_abertura: 'data_abertura',
    data_conclusao: 'data_conclusao',
    notas: 'notas'
  };

  export type TarefasScalarFieldEnum = (typeof TarefasScalarFieldEnum)[keyof typeof TarefasScalarFieldEnum]


  export const EquipesGruposScalarFieldEnum: {
    id: 'id',
    nome: 'nome',
    descricao: 'descricao',
    usuarioEmail: 'usuarioEmail',
    estabelecimentoCnpj: 'estabelecimentoCnpj'
  };

  export type EquipesGruposScalarFieldEnum = (typeof EquipesGruposScalarFieldEnum)[keyof typeof EquipesGruposScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const UsuariosOrderByRelevanceFieldEnum: {
    nome: 'nome',
    email: 'email',
    senha: 'senha',
    foto: 'foto',
    funcoes: 'funcoes',
    identidade: 'identidade',
    cpf: 'cpf',
    pis: 'pis',
    pix: 'pix',
    notas: 'notas',
    estabelecimentoCnpj: 'estabelecimentoCnpj'
  };

  export type UsuariosOrderByRelevanceFieldEnum = (typeof UsuariosOrderByRelevanceFieldEnum)[keyof typeof UsuariosOrderByRelevanceFieldEnum]


  export const EstabelecimentoOrderByRelevanceFieldEnum: {
    cnpj: 'cnpj'
  };

  export type EstabelecimentoOrderByRelevanceFieldEnum = (typeof EstabelecimentoOrderByRelevanceFieldEnum)[keyof typeof EstabelecimentoOrderByRelevanceFieldEnum]


  export const PecasOPOrderByRelevanceFieldEnum: {
    id_Estabelecimento: 'id_Estabelecimento',
    status: 'status',
    descricao: 'descricao',
    pedido_por: 'pedido_por',
    data_do_pedido: 'data_do_pedido',
    data_de_entrega: 'data_de_entrega',
    notas: 'notas'
  };

  export type PecasOPOrderByRelevanceFieldEnum = (typeof PecasOPOrderByRelevanceFieldEnum)[keyof typeof PecasOPOrderByRelevanceFieldEnum]


  export const EtapaOrderByRelevanceFieldEnum: {
    descricao: 'descricao'
  };

  export type EtapaOrderByRelevanceFieldEnum = (typeof EtapaOrderByRelevanceFieldEnum)[keyof typeof EtapaOrderByRelevanceFieldEnum]


  export const ProducaoOrderByRelevanceFieldEnum: {
    id_Estabelecimento: 'id_Estabelecimento',
    id_funcionario: 'id_funcionario',
    hora_registro: 'hora_registro'
  };

  export type ProducaoOrderByRelevanceFieldEnum = (typeof ProducaoOrderByRelevanceFieldEnum)[keyof typeof ProducaoOrderByRelevanceFieldEnum]


  export const Estoque_TecidosOrderByRelevanceFieldEnum: {
    id_Estabelecimento: 'id_Estabelecimento',
    nome_do_tecido: 'nome_do_tecido',
    fornecedor: 'fornecedor',
    composicao: 'composicao',
    notas: 'notas'
  };

  export type Estoque_TecidosOrderByRelevanceFieldEnum = (typeof Estoque_TecidosOrderByRelevanceFieldEnum)[keyof typeof Estoque_TecidosOrderByRelevanceFieldEnum]


  export const Estoque_AgulhasOrderByRelevanceFieldEnum: {
    id_Estabelecimento: 'id_Estabelecimento',
    fornecedor: 'fornecedor',
    numeracao: 'numeracao',
    notas: 'notas'
  };

  export type Estoque_AgulhasOrderByRelevanceFieldEnum = (typeof Estoque_AgulhasOrderByRelevanceFieldEnum)[keyof typeof Estoque_AgulhasOrderByRelevanceFieldEnum]


  export const TarefasOrderByRelevanceFieldEnum: {
    id_Estabelecimento: 'id_Estabelecimento',
    tarefa: 'tarefa',
    status: 'status',
    notas: 'notas'
  };

  export type TarefasOrderByRelevanceFieldEnum = (typeof TarefasOrderByRelevanceFieldEnum)[keyof typeof TarefasOrderByRelevanceFieldEnum]


  export const EquipesGruposOrderByRelevanceFieldEnum: {
    nome: 'nome',
    descricao: 'descricao',
    usuarioEmail: 'usuarioEmail',
    estabelecimentoCnpj: 'estabelecimentoCnpj'
  };

  export type EquipesGruposOrderByRelevanceFieldEnum = (typeof EquipesGruposOrderByRelevanceFieldEnum)[keyof typeof EquipesGruposOrderByRelevanceFieldEnum]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    
  /**
   * Deep Input Types
   */


  export type UsuariosWhereInput = {
    AND?: UsuariosWhereInput | UsuariosWhereInput[]
    OR?: UsuariosWhereInput[]
    NOT?: UsuariosWhereInput | UsuariosWhereInput[]
    nome?: StringFilter<"Usuarios"> | string
    email?: StringFilter<"Usuarios"> | string
    senha?: StringFilter<"Usuarios"> | string
    foto?: StringFilter<"Usuarios"> | string
    idade?: IntFilter<"Usuarios"> | number
    funcoes?: StringNullableFilter<"Usuarios"> | string | null
    identidade?: StringNullableFilter<"Usuarios"> | string | null
    cpf?: StringNullableFilter<"Usuarios"> | string | null
    pis?: StringNullableFilter<"Usuarios"> | string | null
    pix?: StringNullableFilter<"Usuarios"> | string | null
    notas?: StringNullableFilter<"Usuarios"> | string | null
    estabelecimentoCnpj?: StringFilter<"Usuarios"> | string
    EquipesGrupos?: EquipesGruposListRelationFilter
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
    producao_funcionario?: ProducaoListRelationFilter
  }

  export type UsuariosOrderByWithRelationInput = {
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    foto?: SortOrder
    idade?: SortOrder
    funcoes?: SortOrderInput | SortOrder
    identidade?: SortOrderInput | SortOrder
    cpf?: SortOrderInput | SortOrder
    pis?: SortOrderInput | SortOrder
    pix?: SortOrderInput | SortOrder
    notas?: SortOrderInput | SortOrder
    estabelecimentoCnpj?: SortOrder
    EquipesGrupos?: EquipesGruposOrderByRelationAggregateInput
    Estabelecimento?: EstabelecimentoOrderByWithRelationInput
    producao_funcionario?: ProducaoOrderByRelationAggregateInput
    _relevance?: UsuariosOrderByRelevanceInput
  }

  export type UsuariosWhereUniqueInput = Prisma.AtLeast<{
    email?: string
    AND?: UsuariosWhereInput | UsuariosWhereInput[]
    OR?: UsuariosWhereInput[]
    NOT?: UsuariosWhereInput | UsuariosWhereInput[]
    nome?: StringFilter<"Usuarios"> | string
    senha?: StringFilter<"Usuarios"> | string
    foto?: StringFilter<"Usuarios"> | string
    idade?: IntFilter<"Usuarios"> | number
    funcoes?: StringNullableFilter<"Usuarios"> | string | null
    identidade?: StringNullableFilter<"Usuarios"> | string | null
    cpf?: StringNullableFilter<"Usuarios"> | string | null
    pis?: StringNullableFilter<"Usuarios"> | string | null
    pix?: StringNullableFilter<"Usuarios"> | string | null
    notas?: StringNullableFilter<"Usuarios"> | string | null
    estabelecimentoCnpj?: StringFilter<"Usuarios"> | string
    EquipesGrupos?: EquipesGruposListRelationFilter
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
    producao_funcionario?: ProducaoListRelationFilter
  }, "email">

  export type UsuariosOrderByWithAggregationInput = {
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    foto?: SortOrder
    idade?: SortOrder
    funcoes?: SortOrderInput | SortOrder
    identidade?: SortOrderInput | SortOrder
    cpf?: SortOrderInput | SortOrder
    pis?: SortOrderInput | SortOrder
    pix?: SortOrderInput | SortOrder
    notas?: SortOrderInput | SortOrder
    estabelecimentoCnpj?: SortOrder
    _count?: UsuariosCountOrderByAggregateInput
    _avg?: UsuariosAvgOrderByAggregateInput
    _max?: UsuariosMaxOrderByAggregateInput
    _min?: UsuariosMinOrderByAggregateInput
    _sum?: UsuariosSumOrderByAggregateInput
  }

  export type UsuariosScalarWhereWithAggregatesInput = {
    AND?: UsuariosScalarWhereWithAggregatesInput | UsuariosScalarWhereWithAggregatesInput[]
    OR?: UsuariosScalarWhereWithAggregatesInput[]
    NOT?: UsuariosScalarWhereWithAggregatesInput | UsuariosScalarWhereWithAggregatesInput[]
    nome?: StringWithAggregatesFilter<"Usuarios"> | string
    email?: StringWithAggregatesFilter<"Usuarios"> | string
    senha?: StringWithAggregatesFilter<"Usuarios"> | string
    foto?: StringWithAggregatesFilter<"Usuarios"> | string
    idade?: IntWithAggregatesFilter<"Usuarios"> | number
    funcoes?: StringNullableWithAggregatesFilter<"Usuarios"> | string | null
    identidade?: StringNullableWithAggregatesFilter<"Usuarios"> | string | null
    cpf?: StringNullableWithAggregatesFilter<"Usuarios"> | string | null
    pis?: StringNullableWithAggregatesFilter<"Usuarios"> | string | null
    pix?: StringNullableWithAggregatesFilter<"Usuarios"> | string | null
    notas?: StringNullableWithAggregatesFilter<"Usuarios"> | string | null
    estabelecimentoCnpj?: StringWithAggregatesFilter<"Usuarios"> | string
  }

  export type EstabelecimentoWhereInput = {
    AND?: EstabelecimentoWhereInput | EstabelecimentoWhereInput[]
    OR?: EstabelecimentoWhereInput[]
    NOT?: EstabelecimentoWhereInput | EstabelecimentoWhereInput[]
    cnpj?: StringFilter<"Estabelecimento"> | string
    usuarios?: UsuariosListRelationFilter
    EquipesGrupos?: EquipesGruposListRelationFilter
    estoque_tecidos?: Estoque_TecidosListRelationFilter
    estoque_agulhas?: Estoque_AgulhasListRelationFilter
    tarefas?: TarefasListRelationFilter
    PecasOP?: PecasOPListRelationFilter
    Producao?: ProducaoListRelationFilter
  }

  export type EstabelecimentoOrderByWithRelationInput = {
    cnpj?: SortOrder
    usuarios?: UsuariosOrderByRelationAggregateInput
    EquipesGrupos?: EquipesGruposOrderByRelationAggregateInput
    estoque_tecidos?: Estoque_TecidosOrderByRelationAggregateInput
    estoque_agulhas?: Estoque_AgulhasOrderByRelationAggregateInput
    tarefas?: TarefasOrderByRelationAggregateInput
    PecasOP?: PecasOPOrderByRelationAggregateInput
    Producao?: ProducaoOrderByRelationAggregateInput
    _relevance?: EstabelecimentoOrderByRelevanceInput
  }

  export type EstabelecimentoWhereUniqueInput = Prisma.AtLeast<{
    cnpj?: string
    AND?: EstabelecimentoWhereInput | EstabelecimentoWhereInput[]
    OR?: EstabelecimentoWhereInput[]
    NOT?: EstabelecimentoWhereInput | EstabelecimentoWhereInput[]
    usuarios?: UsuariosListRelationFilter
    EquipesGrupos?: EquipesGruposListRelationFilter
    estoque_tecidos?: Estoque_TecidosListRelationFilter
    estoque_agulhas?: Estoque_AgulhasListRelationFilter
    tarefas?: TarefasListRelationFilter
    PecasOP?: PecasOPListRelationFilter
    Producao?: ProducaoListRelationFilter
  }, "cnpj">

  export type EstabelecimentoOrderByWithAggregationInput = {
    cnpj?: SortOrder
    _count?: EstabelecimentoCountOrderByAggregateInput
    _max?: EstabelecimentoMaxOrderByAggregateInput
    _min?: EstabelecimentoMinOrderByAggregateInput
  }

  export type EstabelecimentoScalarWhereWithAggregatesInput = {
    AND?: EstabelecimentoScalarWhereWithAggregatesInput | EstabelecimentoScalarWhereWithAggregatesInput[]
    OR?: EstabelecimentoScalarWhereWithAggregatesInput[]
    NOT?: EstabelecimentoScalarWhereWithAggregatesInput | EstabelecimentoScalarWhereWithAggregatesInput[]
    cnpj?: StringWithAggregatesFilter<"Estabelecimento"> | string
  }

  export type PecasOPWhereInput = {
    AND?: PecasOPWhereInput | PecasOPWhereInput[]
    OR?: PecasOPWhereInput[]
    NOT?: PecasOPWhereInput | PecasOPWhereInput[]
    id_da_op?: IntFilter<"PecasOP"> | number
    id_Estabelecimento?: StringFilter<"PecasOP"> | string
    status?: StringNullableFilter<"PecasOP"> | string | null
    descricao?: StringNullableFilter<"PecasOP"> | string | null
    quantidade_pecas?: IntNullableFilter<"PecasOP"> | number | null
    pedido_por?: StringNullableFilter<"PecasOP"> | string | null
    valor_peca?: FloatNullableFilter<"PecasOP"> | number | null
    data_do_pedido?: StringNullableFilter<"PecasOP"> | string | null
    data_de_entrega?: StringNullableFilter<"PecasOP"> | string | null
    notas?: StringNullableFilter<"PecasOP"> | string | null
    tempo_estimado?: FloatNullableFilter<"PecasOP"> | number | null
    tempo_esperado?: FloatNullableFilter<"PecasOP"> | number | null
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
    producao_peca?: ProducaoListRelationFilter
    etapas?: PecasEtapasListRelationFilter
  }

  export type PecasOPOrderByWithRelationInput = {
    id_da_op?: SortOrder
    id_Estabelecimento?: SortOrder
    status?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    quantidade_pecas?: SortOrderInput | SortOrder
    pedido_por?: SortOrderInput | SortOrder
    valor_peca?: SortOrderInput | SortOrder
    data_do_pedido?: SortOrderInput | SortOrder
    data_de_entrega?: SortOrderInput | SortOrder
    notas?: SortOrderInput | SortOrder
    tempo_estimado?: SortOrderInput | SortOrder
    tempo_esperado?: SortOrderInput | SortOrder
    Estabelecimento?: EstabelecimentoOrderByWithRelationInput
    producao_peca?: ProducaoOrderByRelationAggregateInput
    etapas?: PecasEtapasOrderByRelationAggregateInput
    _relevance?: PecasOPOrderByRelevanceInput
  }

  export type PecasOPWhereUniqueInput = Prisma.AtLeast<{
    id_da_op?: number
    AND?: PecasOPWhereInput | PecasOPWhereInput[]
    OR?: PecasOPWhereInput[]
    NOT?: PecasOPWhereInput | PecasOPWhereInput[]
    id_Estabelecimento?: StringFilter<"PecasOP"> | string
    status?: StringNullableFilter<"PecasOP"> | string | null
    descricao?: StringNullableFilter<"PecasOP"> | string | null
    quantidade_pecas?: IntNullableFilter<"PecasOP"> | number | null
    pedido_por?: StringNullableFilter<"PecasOP"> | string | null
    valor_peca?: FloatNullableFilter<"PecasOP"> | number | null
    data_do_pedido?: StringNullableFilter<"PecasOP"> | string | null
    data_de_entrega?: StringNullableFilter<"PecasOP"> | string | null
    notas?: StringNullableFilter<"PecasOP"> | string | null
    tempo_estimado?: FloatNullableFilter<"PecasOP"> | number | null
    tempo_esperado?: FloatNullableFilter<"PecasOP"> | number | null
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
    producao_peca?: ProducaoListRelationFilter
    etapas?: PecasEtapasListRelationFilter
  }, "id_da_op">

  export type PecasOPOrderByWithAggregationInput = {
    id_da_op?: SortOrder
    id_Estabelecimento?: SortOrder
    status?: SortOrderInput | SortOrder
    descricao?: SortOrderInput | SortOrder
    quantidade_pecas?: SortOrderInput | SortOrder
    pedido_por?: SortOrderInput | SortOrder
    valor_peca?: SortOrderInput | SortOrder
    data_do_pedido?: SortOrderInput | SortOrder
    data_de_entrega?: SortOrderInput | SortOrder
    notas?: SortOrderInput | SortOrder
    tempo_estimado?: SortOrderInput | SortOrder
    tempo_esperado?: SortOrderInput | SortOrder
    _count?: PecasOPCountOrderByAggregateInput
    _avg?: PecasOPAvgOrderByAggregateInput
    _max?: PecasOPMaxOrderByAggregateInput
    _min?: PecasOPMinOrderByAggregateInput
    _sum?: PecasOPSumOrderByAggregateInput
  }

  export type PecasOPScalarWhereWithAggregatesInput = {
    AND?: PecasOPScalarWhereWithAggregatesInput | PecasOPScalarWhereWithAggregatesInput[]
    OR?: PecasOPScalarWhereWithAggregatesInput[]
    NOT?: PecasOPScalarWhereWithAggregatesInput | PecasOPScalarWhereWithAggregatesInput[]
    id_da_op?: IntWithAggregatesFilter<"PecasOP"> | number
    id_Estabelecimento?: StringWithAggregatesFilter<"PecasOP"> | string
    status?: StringNullableWithAggregatesFilter<"PecasOP"> | string | null
    descricao?: StringNullableWithAggregatesFilter<"PecasOP"> | string | null
    quantidade_pecas?: IntNullableWithAggregatesFilter<"PecasOP"> | number | null
    pedido_por?: StringNullableWithAggregatesFilter<"PecasOP"> | string | null
    valor_peca?: FloatNullableWithAggregatesFilter<"PecasOP"> | number | null
    data_do_pedido?: StringNullableWithAggregatesFilter<"PecasOP"> | string | null
    data_de_entrega?: StringNullableWithAggregatesFilter<"PecasOP"> | string | null
    notas?: StringNullableWithAggregatesFilter<"PecasOP"> | string | null
    tempo_estimado?: FloatNullableWithAggregatesFilter<"PecasOP"> | number | null
    tempo_esperado?: FloatNullableWithAggregatesFilter<"PecasOP"> | number | null
  }

  export type EtapaWhereInput = {
    AND?: EtapaWhereInput | EtapaWhereInput[]
    OR?: EtapaWhereInput[]
    NOT?: EtapaWhereInput | EtapaWhereInput[]
    id_da_funcao?: IntFilter<"Etapa"> | number
    descricao?: StringFilter<"Etapa"> | string
    pecas?: PecasEtapasListRelationFilter
    producao_etapa?: ProducaoListRelationFilter
  }

  export type EtapaOrderByWithRelationInput = {
    id_da_funcao?: SortOrder
    descricao?: SortOrder
    pecas?: PecasEtapasOrderByRelationAggregateInput
    producao_etapa?: ProducaoOrderByRelationAggregateInput
    _relevance?: EtapaOrderByRelevanceInput
  }

  export type EtapaWhereUniqueInput = Prisma.AtLeast<{
    id_da_funcao?: number
    descricao?: string
    AND?: EtapaWhereInput | EtapaWhereInput[]
    OR?: EtapaWhereInput[]
    NOT?: EtapaWhereInput | EtapaWhereInput[]
    pecas?: PecasEtapasListRelationFilter
    producao_etapa?: ProducaoListRelationFilter
  }, "id_da_funcao" | "descricao">

  export type EtapaOrderByWithAggregationInput = {
    id_da_funcao?: SortOrder
    descricao?: SortOrder
    _count?: EtapaCountOrderByAggregateInput
    _avg?: EtapaAvgOrderByAggregateInput
    _max?: EtapaMaxOrderByAggregateInput
    _min?: EtapaMinOrderByAggregateInput
    _sum?: EtapaSumOrderByAggregateInput
  }

  export type EtapaScalarWhereWithAggregatesInput = {
    AND?: EtapaScalarWhereWithAggregatesInput | EtapaScalarWhereWithAggregatesInput[]
    OR?: EtapaScalarWhereWithAggregatesInput[]
    NOT?: EtapaScalarWhereWithAggregatesInput | EtapaScalarWhereWithAggregatesInput[]
    id_da_funcao?: IntWithAggregatesFilter<"Etapa"> | number
    descricao?: StringWithAggregatesFilter<"Etapa"> | string
  }

  export type PecasEtapasWhereInput = {
    AND?: PecasEtapasWhereInput | PecasEtapasWhereInput[]
    OR?: PecasEtapasWhereInput[]
    NOT?: PecasEtapasWhereInput | PecasEtapasWhereInput[]
    id_da_op?: IntFilter<"PecasEtapas"> | number
    id_da_funcao?: IntFilter<"PecasEtapas"> | number
    peca_op?: XOR<PecasOPScalarRelationFilter, PecasOPWhereInput>
    etapa?: XOR<EtapaScalarRelationFilter, EtapaWhereInput>
  }

  export type PecasEtapasOrderByWithRelationInput = {
    id_da_op?: SortOrder
    id_da_funcao?: SortOrder
    peca_op?: PecasOPOrderByWithRelationInput
    etapa?: EtapaOrderByWithRelationInput
  }

  export type PecasEtapasWhereUniqueInput = Prisma.AtLeast<{
    id_da_op_id_da_funcao?: PecasEtapasId_da_opId_da_funcaoCompoundUniqueInput
    AND?: PecasEtapasWhereInput | PecasEtapasWhereInput[]
    OR?: PecasEtapasWhereInput[]
    NOT?: PecasEtapasWhereInput | PecasEtapasWhereInput[]
    id_da_op?: IntFilter<"PecasEtapas"> | number
    id_da_funcao?: IntFilter<"PecasEtapas"> | number
    peca_op?: XOR<PecasOPScalarRelationFilter, PecasOPWhereInput>
    etapa?: XOR<EtapaScalarRelationFilter, EtapaWhereInput>
  }, "id_da_op_id_da_funcao">

  export type PecasEtapasOrderByWithAggregationInput = {
    id_da_op?: SortOrder
    id_da_funcao?: SortOrder
    _count?: PecasEtapasCountOrderByAggregateInput
    _avg?: PecasEtapasAvgOrderByAggregateInput
    _max?: PecasEtapasMaxOrderByAggregateInput
    _min?: PecasEtapasMinOrderByAggregateInput
    _sum?: PecasEtapasSumOrderByAggregateInput
  }

  export type PecasEtapasScalarWhereWithAggregatesInput = {
    AND?: PecasEtapasScalarWhereWithAggregatesInput | PecasEtapasScalarWhereWithAggregatesInput[]
    OR?: PecasEtapasScalarWhereWithAggregatesInput[]
    NOT?: PecasEtapasScalarWhereWithAggregatesInput | PecasEtapasScalarWhereWithAggregatesInput[]
    id_da_op?: IntWithAggregatesFilter<"PecasEtapas"> | number
    id_da_funcao?: IntWithAggregatesFilter<"PecasEtapas"> | number
  }

  export type ProducaoWhereInput = {
    AND?: ProducaoWhereInput | ProducaoWhereInput[]
    OR?: ProducaoWhereInput[]
    NOT?: ProducaoWhereInput | ProducaoWhereInput[]
    id_da_producao?: IntFilter<"Producao"> | number
    quantidade_pecas?: IntNullableFilter<"Producao"> | number | null
    id_Estabelecimento?: StringFilter<"Producao"> | string
    id_da_op?: IntFilter<"Producao"> | number
    id_funcionario?: StringFilter<"Producao"> | string
    id_da_funcao?: IntFilter<"Producao"> | number
    data_inicio?: DateTimeNullableFilter<"Producao"> | Date | string | null
    hora_registro?: StringNullableFilter<"Producao"> | string | null
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
    producao_peca?: XOR<PecasOPScalarRelationFilter, PecasOPWhereInput>
    producao_funcionario?: XOR<UsuariosScalarRelationFilter, UsuariosWhereInput>
    producao_etapa?: XOR<EtapaScalarRelationFilter, EtapaWhereInput>
  }

  export type ProducaoOrderByWithRelationInput = {
    id_da_producao?: SortOrder
    quantidade_pecas?: SortOrderInput | SortOrder
    id_Estabelecimento?: SortOrder
    id_da_op?: SortOrder
    id_funcionario?: SortOrder
    id_da_funcao?: SortOrder
    data_inicio?: SortOrderInput | SortOrder
    hora_registro?: SortOrderInput | SortOrder
    Estabelecimento?: EstabelecimentoOrderByWithRelationInput
    producao_peca?: PecasOPOrderByWithRelationInput
    producao_funcionario?: UsuariosOrderByWithRelationInput
    producao_etapa?: EtapaOrderByWithRelationInput
    _relevance?: ProducaoOrderByRelevanceInput
  }

  export type ProducaoWhereUniqueInput = Prisma.AtLeast<{
    id_da_producao?: number
    AND?: ProducaoWhereInput | ProducaoWhereInput[]
    OR?: ProducaoWhereInput[]
    NOT?: ProducaoWhereInput | ProducaoWhereInput[]
    quantidade_pecas?: IntNullableFilter<"Producao"> | number | null
    id_Estabelecimento?: StringFilter<"Producao"> | string
    id_da_op?: IntFilter<"Producao"> | number
    id_funcionario?: StringFilter<"Producao"> | string
    id_da_funcao?: IntFilter<"Producao"> | number
    data_inicio?: DateTimeNullableFilter<"Producao"> | Date | string | null
    hora_registro?: StringNullableFilter<"Producao"> | string | null
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
    producao_peca?: XOR<PecasOPScalarRelationFilter, PecasOPWhereInput>
    producao_funcionario?: XOR<UsuariosScalarRelationFilter, UsuariosWhereInput>
    producao_etapa?: XOR<EtapaScalarRelationFilter, EtapaWhereInput>
  }, "id_da_producao">

  export type ProducaoOrderByWithAggregationInput = {
    id_da_producao?: SortOrder
    quantidade_pecas?: SortOrderInput | SortOrder
    id_Estabelecimento?: SortOrder
    id_da_op?: SortOrder
    id_funcionario?: SortOrder
    id_da_funcao?: SortOrder
    data_inicio?: SortOrderInput | SortOrder
    hora_registro?: SortOrderInput | SortOrder
    _count?: ProducaoCountOrderByAggregateInput
    _avg?: ProducaoAvgOrderByAggregateInput
    _max?: ProducaoMaxOrderByAggregateInput
    _min?: ProducaoMinOrderByAggregateInput
    _sum?: ProducaoSumOrderByAggregateInput
  }

  export type ProducaoScalarWhereWithAggregatesInput = {
    AND?: ProducaoScalarWhereWithAggregatesInput | ProducaoScalarWhereWithAggregatesInput[]
    OR?: ProducaoScalarWhereWithAggregatesInput[]
    NOT?: ProducaoScalarWhereWithAggregatesInput | ProducaoScalarWhereWithAggregatesInput[]
    id_da_producao?: IntWithAggregatesFilter<"Producao"> | number
    quantidade_pecas?: IntNullableWithAggregatesFilter<"Producao"> | number | null
    id_Estabelecimento?: StringWithAggregatesFilter<"Producao"> | string
    id_da_op?: IntWithAggregatesFilter<"Producao"> | number
    id_funcionario?: StringWithAggregatesFilter<"Producao"> | string
    id_da_funcao?: IntWithAggregatesFilter<"Producao"> | number
    data_inicio?: DateTimeNullableWithAggregatesFilter<"Producao"> | Date | string | null
    hora_registro?: StringNullableWithAggregatesFilter<"Producao"> | string | null
  }

  export type Estoque_TecidosWhereInput = {
    AND?: Estoque_TecidosWhereInput | Estoque_TecidosWhereInput[]
    OR?: Estoque_TecidosWhereInput[]
    NOT?: Estoque_TecidosWhereInput | Estoque_TecidosWhereInput[]
    id_do_tecido?: IntFilter<"Estoque_Tecidos"> | number
    id_Estabelecimento?: StringFilter<"Estoque_Tecidos"> | string
    nome_do_tecido?: StringFilter<"Estoque_Tecidos"> | string
    valor?: FloatFilter<"Estoque_Tecidos"> | number
    fornecedor?: StringFilter<"Estoque_Tecidos"> | string
    composicao?: StringNullableFilter<"Estoque_Tecidos"> | string | null
    largura?: FloatNullableFilter<"Estoque_Tecidos"> | number | null
    peso?: FloatNullableFilter<"Estoque_Tecidos"> | number | null
    estoque?: IntFilter<"Estoque_Tecidos"> | number
    data_?: DateTimeFilter<"Estoque_Tecidos"> | Date | string
    tamanho?: FloatNullableFilter<"Estoque_Tecidos"> | number | null
    notas?: StringNullableFilter<"Estoque_Tecidos"> | string | null
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
  }

  export type Estoque_TecidosOrderByWithRelationInput = {
    id_do_tecido?: SortOrder
    id_Estabelecimento?: SortOrder
    nome_do_tecido?: SortOrder
    valor?: SortOrder
    fornecedor?: SortOrder
    composicao?: SortOrderInput | SortOrder
    largura?: SortOrderInput | SortOrder
    peso?: SortOrderInput | SortOrder
    estoque?: SortOrder
    data_?: SortOrder
    tamanho?: SortOrderInput | SortOrder
    notas?: SortOrderInput | SortOrder
    Estabelecimento?: EstabelecimentoOrderByWithRelationInput
    _relevance?: Estoque_TecidosOrderByRelevanceInput
  }

  export type Estoque_TecidosWhereUniqueInput = Prisma.AtLeast<{
    id_do_tecido?: number
    AND?: Estoque_TecidosWhereInput | Estoque_TecidosWhereInput[]
    OR?: Estoque_TecidosWhereInput[]
    NOT?: Estoque_TecidosWhereInput | Estoque_TecidosWhereInput[]
    id_Estabelecimento?: StringFilter<"Estoque_Tecidos"> | string
    nome_do_tecido?: StringFilter<"Estoque_Tecidos"> | string
    valor?: FloatFilter<"Estoque_Tecidos"> | number
    fornecedor?: StringFilter<"Estoque_Tecidos"> | string
    composicao?: StringNullableFilter<"Estoque_Tecidos"> | string | null
    largura?: FloatNullableFilter<"Estoque_Tecidos"> | number | null
    peso?: FloatNullableFilter<"Estoque_Tecidos"> | number | null
    estoque?: IntFilter<"Estoque_Tecidos"> | number
    data_?: DateTimeFilter<"Estoque_Tecidos"> | Date | string
    tamanho?: FloatNullableFilter<"Estoque_Tecidos"> | number | null
    notas?: StringNullableFilter<"Estoque_Tecidos"> | string | null
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
  }, "id_do_tecido">

  export type Estoque_TecidosOrderByWithAggregationInput = {
    id_do_tecido?: SortOrder
    id_Estabelecimento?: SortOrder
    nome_do_tecido?: SortOrder
    valor?: SortOrder
    fornecedor?: SortOrder
    composicao?: SortOrderInput | SortOrder
    largura?: SortOrderInput | SortOrder
    peso?: SortOrderInput | SortOrder
    estoque?: SortOrder
    data_?: SortOrder
    tamanho?: SortOrderInput | SortOrder
    notas?: SortOrderInput | SortOrder
    _count?: Estoque_TecidosCountOrderByAggregateInput
    _avg?: Estoque_TecidosAvgOrderByAggregateInput
    _max?: Estoque_TecidosMaxOrderByAggregateInput
    _min?: Estoque_TecidosMinOrderByAggregateInput
    _sum?: Estoque_TecidosSumOrderByAggregateInput
  }

  export type Estoque_TecidosScalarWhereWithAggregatesInput = {
    AND?: Estoque_TecidosScalarWhereWithAggregatesInput | Estoque_TecidosScalarWhereWithAggregatesInput[]
    OR?: Estoque_TecidosScalarWhereWithAggregatesInput[]
    NOT?: Estoque_TecidosScalarWhereWithAggregatesInput | Estoque_TecidosScalarWhereWithAggregatesInput[]
    id_do_tecido?: IntWithAggregatesFilter<"Estoque_Tecidos"> | number
    id_Estabelecimento?: StringWithAggregatesFilter<"Estoque_Tecidos"> | string
    nome_do_tecido?: StringWithAggregatesFilter<"Estoque_Tecidos"> | string
    valor?: FloatWithAggregatesFilter<"Estoque_Tecidos"> | number
    fornecedor?: StringWithAggregatesFilter<"Estoque_Tecidos"> | string
    composicao?: StringNullableWithAggregatesFilter<"Estoque_Tecidos"> | string | null
    largura?: FloatNullableWithAggregatesFilter<"Estoque_Tecidos"> | number | null
    peso?: FloatNullableWithAggregatesFilter<"Estoque_Tecidos"> | number | null
    estoque?: IntWithAggregatesFilter<"Estoque_Tecidos"> | number
    data_?: DateTimeWithAggregatesFilter<"Estoque_Tecidos"> | Date | string
    tamanho?: FloatNullableWithAggregatesFilter<"Estoque_Tecidos"> | number | null
    notas?: StringNullableWithAggregatesFilter<"Estoque_Tecidos"> | string | null
  }

  export type Estoque_AgulhasWhereInput = {
    AND?: Estoque_AgulhasWhereInput | Estoque_AgulhasWhereInput[]
    OR?: Estoque_AgulhasWhereInput[]
    NOT?: Estoque_AgulhasWhereInput | Estoque_AgulhasWhereInput[]
    id_da_agulha?: IntFilter<"Estoque_Agulhas"> | number
    id_Estabelecimento?: StringFilter<"Estoque_Agulhas"> | string
    valor?: FloatFilter<"Estoque_Agulhas"> | number
    fornecedor?: StringNullableFilter<"Estoque_Agulhas"> | string | null
    numeracao?: StringNullableFilter<"Estoque_Agulhas"> | string | null
    estoque?: IntFilter<"Estoque_Agulhas"> | number
    data?: DateTimeFilter<"Estoque_Agulhas"> | Date | string
    notas?: StringNullableFilter<"Estoque_Agulhas"> | string | null
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
  }

  export type Estoque_AgulhasOrderByWithRelationInput = {
    id_da_agulha?: SortOrder
    id_Estabelecimento?: SortOrder
    valor?: SortOrder
    fornecedor?: SortOrderInput | SortOrder
    numeracao?: SortOrderInput | SortOrder
    estoque?: SortOrder
    data?: SortOrder
    notas?: SortOrderInput | SortOrder
    Estabelecimento?: EstabelecimentoOrderByWithRelationInput
    _relevance?: Estoque_AgulhasOrderByRelevanceInput
  }

  export type Estoque_AgulhasWhereUniqueInput = Prisma.AtLeast<{
    id_da_agulha?: number
    AND?: Estoque_AgulhasWhereInput | Estoque_AgulhasWhereInput[]
    OR?: Estoque_AgulhasWhereInput[]
    NOT?: Estoque_AgulhasWhereInput | Estoque_AgulhasWhereInput[]
    id_Estabelecimento?: StringFilter<"Estoque_Agulhas"> | string
    valor?: FloatFilter<"Estoque_Agulhas"> | number
    fornecedor?: StringNullableFilter<"Estoque_Agulhas"> | string | null
    numeracao?: StringNullableFilter<"Estoque_Agulhas"> | string | null
    estoque?: IntFilter<"Estoque_Agulhas"> | number
    data?: DateTimeFilter<"Estoque_Agulhas"> | Date | string
    notas?: StringNullableFilter<"Estoque_Agulhas"> | string | null
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
  }, "id_da_agulha">

  export type Estoque_AgulhasOrderByWithAggregationInput = {
    id_da_agulha?: SortOrder
    id_Estabelecimento?: SortOrder
    valor?: SortOrder
    fornecedor?: SortOrderInput | SortOrder
    numeracao?: SortOrderInput | SortOrder
    estoque?: SortOrder
    data?: SortOrder
    notas?: SortOrderInput | SortOrder
    _count?: Estoque_AgulhasCountOrderByAggregateInput
    _avg?: Estoque_AgulhasAvgOrderByAggregateInput
    _max?: Estoque_AgulhasMaxOrderByAggregateInput
    _min?: Estoque_AgulhasMinOrderByAggregateInput
    _sum?: Estoque_AgulhasSumOrderByAggregateInput
  }

  export type Estoque_AgulhasScalarWhereWithAggregatesInput = {
    AND?: Estoque_AgulhasScalarWhereWithAggregatesInput | Estoque_AgulhasScalarWhereWithAggregatesInput[]
    OR?: Estoque_AgulhasScalarWhereWithAggregatesInput[]
    NOT?: Estoque_AgulhasScalarWhereWithAggregatesInput | Estoque_AgulhasScalarWhereWithAggregatesInput[]
    id_da_agulha?: IntWithAggregatesFilter<"Estoque_Agulhas"> | number
    id_Estabelecimento?: StringWithAggregatesFilter<"Estoque_Agulhas"> | string
    valor?: FloatWithAggregatesFilter<"Estoque_Agulhas"> | number
    fornecedor?: StringNullableWithAggregatesFilter<"Estoque_Agulhas"> | string | null
    numeracao?: StringNullableWithAggregatesFilter<"Estoque_Agulhas"> | string | null
    estoque?: IntWithAggregatesFilter<"Estoque_Agulhas"> | number
    data?: DateTimeWithAggregatesFilter<"Estoque_Agulhas"> | Date | string
    notas?: StringNullableWithAggregatesFilter<"Estoque_Agulhas"> | string | null
  }

  export type TarefasWhereInput = {
    AND?: TarefasWhereInput | TarefasWhereInput[]
    OR?: TarefasWhereInput[]
    NOT?: TarefasWhereInput | TarefasWhereInput[]
    id?: IntFilter<"Tarefas"> | number
    id_Estabelecimento?: StringFilter<"Tarefas"> | string
    tarefa?: StringFilter<"Tarefas"> | string
    status?: StringFilter<"Tarefas"> | string
    data_abertura?: DateTimeFilter<"Tarefas"> | Date | string
    data_conclusao?: DateTimeNullableFilter<"Tarefas"> | Date | string | null
    notas?: StringNullableFilter<"Tarefas"> | string | null
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
  }

  export type TarefasOrderByWithRelationInput = {
    id?: SortOrder
    id_Estabelecimento?: SortOrder
    tarefa?: SortOrder
    status?: SortOrder
    data_abertura?: SortOrder
    data_conclusao?: SortOrderInput | SortOrder
    notas?: SortOrderInput | SortOrder
    Estabelecimento?: EstabelecimentoOrderByWithRelationInput
    _relevance?: TarefasOrderByRelevanceInput
  }

  export type TarefasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: TarefasWhereInput | TarefasWhereInput[]
    OR?: TarefasWhereInput[]
    NOT?: TarefasWhereInput | TarefasWhereInput[]
    id_Estabelecimento?: StringFilter<"Tarefas"> | string
    tarefa?: StringFilter<"Tarefas"> | string
    status?: StringFilter<"Tarefas"> | string
    data_abertura?: DateTimeFilter<"Tarefas"> | Date | string
    data_conclusao?: DateTimeNullableFilter<"Tarefas"> | Date | string | null
    notas?: StringNullableFilter<"Tarefas"> | string | null
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
  }, "id">

  export type TarefasOrderByWithAggregationInput = {
    id?: SortOrder
    id_Estabelecimento?: SortOrder
    tarefa?: SortOrder
    status?: SortOrder
    data_abertura?: SortOrder
    data_conclusao?: SortOrderInput | SortOrder
    notas?: SortOrderInput | SortOrder
    _count?: TarefasCountOrderByAggregateInput
    _avg?: TarefasAvgOrderByAggregateInput
    _max?: TarefasMaxOrderByAggregateInput
    _min?: TarefasMinOrderByAggregateInput
    _sum?: TarefasSumOrderByAggregateInput
  }

  export type TarefasScalarWhereWithAggregatesInput = {
    AND?: TarefasScalarWhereWithAggregatesInput | TarefasScalarWhereWithAggregatesInput[]
    OR?: TarefasScalarWhereWithAggregatesInput[]
    NOT?: TarefasScalarWhereWithAggregatesInput | TarefasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Tarefas"> | number
    id_Estabelecimento?: StringWithAggregatesFilter<"Tarefas"> | string
    tarefa?: StringWithAggregatesFilter<"Tarefas"> | string
    status?: StringWithAggregatesFilter<"Tarefas"> | string
    data_abertura?: DateTimeWithAggregatesFilter<"Tarefas"> | Date | string
    data_conclusao?: DateTimeNullableWithAggregatesFilter<"Tarefas"> | Date | string | null
    notas?: StringNullableWithAggregatesFilter<"Tarefas"> | string | null
  }

  export type EquipesGruposWhereInput = {
    AND?: EquipesGruposWhereInput | EquipesGruposWhereInput[]
    OR?: EquipesGruposWhereInput[]
    NOT?: EquipesGruposWhereInput | EquipesGruposWhereInput[]
    id?: IntFilter<"EquipesGrupos"> | number
    nome?: StringFilter<"EquipesGrupos"> | string
    descricao?: StringNullableFilter<"EquipesGrupos"> | string | null
    usuarioEmail?: StringFilter<"EquipesGrupos"> | string
    estabelecimentoCnpj?: StringFilter<"EquipesGrupos"> | string
    Usuario?: XOR<UsuariosScalarRelationFilter, UsuariosWhereInput>
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
  }

  export type EquipesGruposOrderByWithRelationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    usuarioEmail?: SortOrder
    estabelecimentoCnpj?: SortOrder
    Usuario?: UsuariosOrderByWithRelationInput
    Estabelecimento?: EstabelecimentoOrderByWithRelationInput
    _relevance?: EquipesGruposOrderByRelevanceInput
  }

  export type EquipesGruposWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: EquipesGruposWhereInput | EquipesGruposWhereInput[]
    OR?: EquipesGruposWhereInput[]
    NOT?: EquipesGruposWhereInput | EquipesGruposWhereInput[]
    nome?: StringFilter<"EquipesGrupos"> | string
    descricao?: StringNullableFilter<"EquipesGrupos"> | string | null
    usuarioEmail?: StringFilter<"EquipesGrupos"> | string
    estabelecimentoCnpj?: StringFilter<"EquipesGrupos"> | string
    Usuario?: XOR<UsuariosScalarRelationFilter, UsuariosWhereInput>
    Estabelecimento?: XOR<EstabelecimentoScalarRelationFilter, EstabelecimentoWhereInput>
  }, "id">

  export type EquipesGruposOrderByWithAggregationInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrderInput | SortOrder
    usuarioEmail?: SortOrder
    estabelecimentoCnpj?: SortOrder
    _count?: EquipesGruposCountOrderByAggregateInput
    _avg?: EquipesGruposAvgOrderByAggregateInput
    _max?: EquipesGruposMaxOrderByAggregateInput
    _min?: EquipesGruposMinOrderByAggregateInput
    _sum?: EquipesGruposSumOrderByAggregateInput
  }

  export type EquipesGruposScalarWhereWithAggregatesInput = {
    AND?: EquipesGruposScalarWhereWithAggregatesInput | EquipesGruposScalarWhereWithAggregatesInput[]
    OR?: EquipesGruposScalarWhereWithAggregatesInput[]
    NOT?: EquipesGruposScalarWhereWithAggregatesInput | EquipesGruposScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"EquipesGrupos"> | number
    nome?: StringWithAggregatesFilter<"EquipesGrupos"> | string
    descricao?: StringNullableWithAggregatesFilter<"EquipesGrupos"> | string | null
    usuarioEmail?: StringWithAggregatesFilter<"EquipesGrupos"> | string
    estabelecimentoCnpj?: StringWithAggregatesFilter<"EquipesGrupos"> | string
  }

  export type UsuariosCreateInput = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes?: string | null
    identidade?: string | null
    cpf?: string | null
    pis?: string | null
    pix?: string | null
    notas?: string | null
    EquipesGrupos?: EquipesGruposCreateNestedManyWithoutUsuarioInput
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutUsuariosInput
    producao_funcionario?: ProducaoCreateNestedManyWithoutProducao_funcionarioInput
  }

  export type UsuariosUncheckedCreateInput = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes?: string | null
    identidade?: string | null
    cpf?: string | null
    pis?: string | null
    pix?: string | null
    notas?: string | null
    estabelecimentoCnpj: string
    EquipesGrupos?: EquipesGruposUncheckedCreateNestedManyWithoutUsuarioInput
    producao_funcionario?: ProducaoUncheckedCreateNestedManyWithoutProducao_funcionarioInput
  }

  export type UsuariosUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    EquipesGrupos?: EquipesGruposUpdateManyWithoutUsuarioNestedInput
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutUsuariosNestedInput
    producao_funcionario?: ProducaoUpdateManyWithoutProducao_funcionarioNestedInput
  }

  export type UsuariosUncheckedUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoCnpj?: StringFieldUpdateOperationsInput | string
    EquipesGrupos?: EquipesGruposUncheckedUpdateManyWithoutUsuarioNestedInput
    producao_funcionario?: ProducaoUncheckedUpdateManyWithoutProducao_funcionarioNestedInput
  }

  export type UsuariosCreateManyInput = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes?: string | null
    identidade?: string | null
    cpf?: string | null
    pis?: string | null
    pix?: string | null
    notas?: string | null
    estabelecimentoCnpj: string
  }

  export type UsuariosUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuariosUncheckedUpdateManyInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoCnpj?: StringFieldUpdateOperationsInput | string
  }

  export type EstabelecimentoCreateInput = {
    cnpj: string
    usuarios?: UsuariosCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoUncheckedCreateInput = {
    cnpj: string
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPUncheckedCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoUncheckedCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoUpdateInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoUncheckedUpdateInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUncheckedUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoCreateManyInput = {
    cnpj: string
  }

  export type EstabelecimentoUpdateManyMutationInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
  }

  export type EstabelecimentoUncheckedUpdateManyInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
  }

  export type PecasOPCreateInput = {
    status?: string | null
    descricao?: string | null
    quantidade_pecas?: number | null
    pedido_por?: string | null
    valor_peca?: number | null
    data_do_pedido?: string | null
    data_de_entrega?: string | null
    notas?: string | null
    tempo_estimado?: number | null
    tempo_esperado?: number | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutPecasOPInput
    producao_peca?: ProducaoCreateNestedManyWithoutProducao_pecaInput
    etapas?: PecasEtapasCreateNestedManyWithoutPeca_opInput
  }

  export type PecasOPUncheckedCreateInput = {
    id_da_op?: number
    id_Estabelecimento: string
    status?: string | null
    descricao?: string | null
    quantidade_pecas?: number | null
    pedido_por?: string | null
    valor_peca?: number | null
    data_do_pedido?: string | null
    data_de_entrega?: string | null
    notas?: string | null
    tempo_estimado?: number | null
    tempo_esperado?: number | null
    producao_peca?: ProducaoUncheckedCreateNestedManyWithoutProducao_pecaInput
    etapas?: PecasEtapasUncheckedCreateNestedManyWithoutPeca_opInput
  }

  export type PecasOPUpdateInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutPecasOPNestedInput
    producao_peca?: ProducaoUpdateManyWithoutProducao_pecaNestedInput
    etapas?: PecasEtapasUpdateManyWithoutPeca_opNestedInput
  }

  export type PecasOPUncheckedUpdateInput = {
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
    producao_peca?: ProducaoUncheckedUpdateManyWithoutProducao_pecaNestedInput
    etapas?: PecasEtapasUncheckedUpdateManyWithoutPeca_opNestedInput
  }

  export type PecasOPCreateManyInput = {
    id_da_op?: number
    id_Estabelecimento: string
    status?: string | null
    descricao?: string | null
    quantidade_pecas?: number | null
    pedido_por?: string | null
    valor_peca?: number | null
    data_do_pedido?: string | null
    data_de_entrega?: string | null
    notas?: string | null
    tempo_estimado?: number | null
    tempo_esperado?: number | null
  }

  export type PecasOPUpdateManyMutationInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type PecasOPUncheckedUpdateManyInput = {
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type EtapaCreateInput = {
    descricao: string
    pecas?: PecasEtapasCreateNestedManyWithoutEtapaInput
    producao_etapa?: ProducaoCreateNestedManyWithoutProducao_etapaInput
  }

  export type EtapaUncheckedCreateInput = {
    id_da_funcao?: number
    descricao: string
    pecas?: PecasEtapasUncheckedCreateNestedManyWithoutEtapaInput
    producao_etapa?: ProducaoUncheckedCreateNestedManyWithoutProducao_etapaInput
  }

  export type EtapaUpdateInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    pecas?: PecasEtapasUpdateManyWithoutEtapaNestedInput
    producao_etapa?: ProducaoUpdateManyWithoutProducao_etapaNestedInput
  }

  export type EtapaUncheckedUpdateInput = {
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    pecas?: PecasEtapasUncheckedUpdateManyWithoutEtapaNestedInput
    producao_etapa?: ProducaoUncheckedUpdateManyWithoutProducao_etapaNestedInput
  }

  export type EtapaCreateManyInput = {
    id_da_funcao?: number
    descricao: string
  }

  export type EtapaUpdateManyMutationInput = {
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type EtapaUncheckedUpdateManyInput = {
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
  }

  export type PecasEtapasCreateInput = {
    peca_op: PecasOPCreateNestedOneWithoutEtapasInput
    etapa: EtapaCreateNestedOneWithoutPecasInput
  }

  export type PecasEtapasUncheckedCreateInput = {
    id_da_op: number
    id_da_funcao: number
  }

  export type PecasEtapasUpdateInput = {
    peca_op?: PecasOPUpdateOneRequiredWithoutEtapasNestedInput
    etapa?: EtapaUpdateOneRequiredWithoutPecasNestedInput
  }

  export type PecasEtapasUncheckedUpdateInput = {
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_da_funcao?: IntFieldUpdateOperationsInput | number
  }

  export type PecasEtapasCreateManyInput = {
    id_da_op: number
    id_da_funcao: number
  }

  export type PecasEtapasUpdateManyMutationInput = {

  }

  export type PecasEtapasUncheckedUpdateManyInput = {
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_da_funcao?: IntFieldUpdateOperationsInput | number
  }

  export type ProducaoCreateInput = {
    quantidade_pecas?: number | null
    data_inicio?: Date | string | null
    hora_registro?: string | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutProducaoInput
    producao_peca: PecasOPCreateNestedOneWithoutProducao_pecaInput
    producao_funcionario: UsuariosCreateNestedOneWithoutProducao_funcionarioInput
    producao_etapa: EtapaCreateNestedOneWithoutProducao_etapaInput
  }

  export type ProducaoUncheckedCreateInput = {
    id_da_producao?: number
    quantidade_pecas?: number | null
    id_Estabelecimento: string
    id_da_op: number
    id_funcionario: string
    id_da_funcao: number
    data_inicio?: Date | string | null
    hora_registro?: string | null
  }

  export type ProducaoUpdateInput = {
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutProducaoNestedInput
    producao_peca?: PecasOPUpdateOneRequiredWithoutProducao_pecaNestedInput
    producao_funcionario?: UsuariosUpdateOneRequiredWithoutProducao_funcionarioNestedInput
    producao_etapa?: EtapaUpdateOneRequiredWithoutProducao_etapaNestedInput
  }

  export type ProducaoUncheckedUpdateInput = {
    id_da_producao?: IntFieldUpdateOperationsInput | number
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_funcionario?: StringFieldUpdateOperationsInput | string
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProducaoCreateManyInput = {
    id_da_producao?: number
    quantidade_pecas?: number | null
    id_Estabelecimento: string
    id_da_op: number
    id_funcionario: string
    id_da_funcao: number
    data_inicio?: Date | string | null
    hora_registro?: string | null
  }

  export type ProducaoUpdateManyMutationInput = {
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProducaoUncheckedUpdateManyInput = {
    id_da_producao?: IntFieldUpdateOperationsInput | number
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_funcionario?: StringFieldUpdateOperationsInput | string
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_TecidosCreateInput = {
    nome_do_tecido: string
    valor: number
    fornecedor: string
    composicao?: string | null
    largura?: number | null
    peso?: number | null
    estoque: number
    data_: Date | string
    tamanho?: number | null
    notas?: string | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutEstoque_tecidosInput
  }

  export type Estoque_TecidosUncheckedCreateInput = {
    id_do_tecido?: number
    id_Estabelecimento: string
    nome_do_tecido: string
    valor: number
    fornecedor: string
    composicao?: string | null
    largura?: number | null
    peso?: number | null
    estoque: number
    data_: Date | string
    tamanho?: number | null
    notas?: string | null
  }

  export type Estoque_TecidosUpdateInput = {
    nome_do_tecido?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: StringFieldUpdateOperationsInput | string
    composicao?: NullableStringFieldUpdateOperationsInput | string | null
    largura?: NullableFloatFieldUpdateOperationsInput | number | null
    peso?: NullableFloatFieldUpdateOperationsInput | number | null
    estoque?: IntFieldUpdateOperationsInput | number
    data_?: DateTimeFieldUpdateOperationsInput | Date | string
    tamanho?: NullableFloatFieldUpdateOperationsInput | number | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutEstoque_tecidosNestedInput
  }

  export type Estoque_TecidosUncheckedUpdateInput = {
    id_do_tecido?: IntFieldUpdateOperationsInput | number
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    nome_do_tecido?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: StringFieldUpdateOperationsInput | string
    composicao?: NullableStringFieldUpdateOperationsInput | string | null
    largura?: NullableFloatFieldUpdateOperationsInput | number | null
    peso?: NullableFloatFieldUpdateOperationsInput | number | null
    estoque?: IntFieldUpdateOperationsInput | number
    data_?: DateTimeFieldUpdateOperationsInput | Date | string
    tamanho?: NullableFloatFieldUpdateOperationsInput | number | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_TecidosCreateManyInput = {
    id_do_tecido?: number
    id_Estabelecimento: string
    nome_do_tecido: string
    valor: number
    fornecedor: string
    composicao?: string | null
    largura?: number | null
    peso?: number | null
    estoque: number
    data_: Date | string
    tamanho?: number | null
    notas?: string | null
  }

  export type Estoque_TecidosUpdateManyMutationInput = {
    nome_do_tecido?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: StringFieldUpdateOperationsInput | string
    composicao?: NullableStringFieldUpdateOperationsInput | string | null
    largura?: NullableFloatFieldUpdateOperationsInput | number | null
    peso?: NullableFloatFieldUpdateOperationsInput | number | null
    estoque?: IntFieldUpdateOperationsInput | number
    data_?: DateTimeFieldUpdateOperationsInput | Date | string
    tamanho?: NullableFloatFieldUpdateOperationsInput | number | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_TecidosUncheckedUpdateManyInput = {
    id_do_tecido?: IntFieldUpdateOperationsInput | number
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    nome_do_tecido?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: StringFieldUpdateOperationsInput | string
    composicao?: NullableStringFieldUpdateOperationsInput | string | null
    largura?: NullableFloatFieldUpdateOperationsInput | number | null
    peso?: NullableFloatFieldUpdateOperationsInput | number | null
    estoque?: IntFieldUpdateOperationsInput | number
    data_?: DateTimeFieldUpdateOperationsInput | Date | string
    tamanho?: NullableFloatFieldUpdateOperationsInput | number | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_AgulhasCreateInput = {
    valor: number
    fornecedor?: string | null
    numeracao?: string | null
    estoque: number
    data: Date | string
    notas?: string | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutEstoque_agulhasInput
  }

  export type Estoque_AgulhasUncheckedCreateInput = {
    id_da_agulha?: number
    id_Estabelecimento: string
    valor: number
    fornecedor?: string | null
    numeracao?: string | null
    estoque: number
    data: Date | string
    notas?: string | null
  }

  export type Estoque_AgulhasUpdateInput = {
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: NullableStringFieldUpdateOperationsInput | string | null
    numeracao?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutEstoque_agulhasNestedInput
  }

  export type Estoque_AgulhasUncheckedUpdateInput = {
    id_da_agulha?: IntFieldUpdateOperationsInput | number
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: NullableStringFieldUpdateOperationsInput | string | null
    numeracao?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_AgulhasCreateManyInput = {
    id_da_agulha?: number
    id_Estabelecimento: string
    valor: number
    fornecedor?: string | null
    numeracao?: string | null
    estoque: number
    data: Date | string
    notas?: string | null
  }

  export type Estoque_AgulhasUpdateManyMutationInput = {
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: NullableStringFieldUpdateOperationsInput | string | null
    numeracao?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_AgulhasUncheckedUpdateManyInput = {
    id_da_agulha?: IntFieldUpdateOperationsInput | number
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: NullableStringFieldUpdateOperationsInput | string | null
    numeracao?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TarefasCreateInput = {
    tarefa: string
    status: string
    data_abertura: Date | string
    data_conclusao?: Date | string | null
    notas?: string | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutTarefasInput
  }

  export type TarefasUncheckedCreateInput = {
    id?: number
    id_Estabelecimento: string
    tarefa: string
    status: string
    data_abertura: Date | string
    data_conclusao?: Date | string | null
    notas?: string | null
  }

  export type TarefasUpdateInput = {
    tarefa?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    data_abertura?: DateTimeFieldUpdateOperationsInput | Date | string
    data_conclusao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutTarefasNestedInput
  }

  export type TarefasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    tarefa?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    data_abertura?: DateTimeFieldUpdateOperationsInput | Date | string
    data_conclusao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TarefasCreateManyInput = {
    id?: number
    id_Estabelecimento: string
    tarefa: string
    status: string
    data_abertura: Date | string
    data_conclusao?: Date | string | null
    notas?: string | null
  }

  export type TarefasUpdateManyMutationInput = {
    tarefa?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    data_abertura?: DateTimeFieldUpdateOperationsInput | Date | string
    data_conclusao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TarefasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    tarefa?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    data_abertura?: DateTimeFieldUpdateOperationsInput | Date | string
    data_conclusao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipesGruposCreateInput = {
    nome: string
    descricao?: string | null
    Usuario: UsuariosCreateNestedOneWithoutEquipesGruposInput
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutEquipesGruposInput
  }

  export type EquipesGruposUncheckedCreateInput = {
    id?: number
    nome: string
    descricao?: string | null
    usuarioEmail: string
    estabelecimentoCnpj: string
  }

  export type EquipesGruposUpdateInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    Usuario?: UsuariosUpdateOneRequiredWithoutEquipesGruposNestedInput
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutEquipesGruposNestedInput
  }

  export type EquipesGruposUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioEmail?: StringFieldUpdateOperationsInput | string
    estabelecimentoCnpj?: StringFieldUpdateOperationsInput | string
  }

  export type EquipesGruposCreateManyInput = {
    id?: number
    nome: string
    descricao?: string | null
    usuarioEmail: string
    estabelecimentoCnpj: string
  }

  export type EquipesGruposUpdateManyMutationInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipesGruposUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioEmail?: StringFieldUpdateOperationsInput | string
    estabelecimentoCnpj?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EquipesGruposListRelationFilter = {
    every?: EquipesGruposWhereInput
    some?: EquipesGruposWhereInput
    none?: EquipesGruposWhereInput
  }

  export type EstabelecimentoScalarRelationFilter = {
    is?: EstabelecimentoWhereInput
    isNot?: EstabelecimentoWhereInput
  }

  export type ProducaoListRelationFilter = {
    every?: ProducaoWhereInput
    some?: ProducaoWhereInput
    none?: ProducaoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type EquipesGruposOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProducaoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UsuariosOrderByRelevanceInput = {
    fields: UsuariosOrderByRelevanceFieldEnum | UsuariosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type UsuariosCountOrderByAggregateInput = {
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    foto?: SortOrder
    idade?: SortOrder
    funcoes?: SortOrder
    identidade?: SortOrder
    cpf?: SortOrder
    pis?: SortOrder
    pix?: SortOrder
    notas?: SortOrder
    estabelecimentoCnpj?: SortOrder
  }

  export type UsuariosAvgOrderByAggregateInput = {
    idade?: SortOrder
  }

  export type UsuariosMaxOrderByAggregateInput = {
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    foto?: SortOrder
    idade?: SortOrder
    funcoes?: SortOrder
    identidade?: SortOrder
    cpf?: SortOrder
    pis?: SortOrder
    pix?: SortOrder
    notas?: SortOrder
    estabelecimentoCnpj?: SortOrder
  }

  export type UsuariosMinOrderByAggregateInput = {
    nome?: SortOrder
    email?: SortOrder
    senha?: SortOrder
    foto?: SortOrder
    idade?: SortOrder
    funcoes?: SortOrder
    identidade?: SortOrder
    cpf?: SortOrder
    pis?: SortOrder
    pix?: SortOrder
    notas?: SortOrder
    estabelecimentoCnpj?: SortOrder
  }

  export type UsuariosSumOrderByAggregateInput = {
    idade?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type UsuariosListRelationFilter = {
    every?: UsuariosWhereInput
    some?: UsuariosWhereInput
    none?: UsuariosWhereInput
  }

  export type Estoque_TecidosListRelationFilter = {
    every?: Estoque_TecidosWhereInput
    some?: Estoque_TecidosWhereInput
    none?: Estoque_TecidosWhereInput
  }

  export type Estoque_AgulhasListRelationFilter = {
    every?: Estoque_AgulhasWhereInput
    some?: Estoque_AgulhasWhereInput
    none?: Estoque_AgulhasWhereInput
  }

  export type TarefasListRelationFilter = {
    every?: TarefasWhereInput
    some?: TarefasWhereInput
    none?: TarefasWhereInput
  }

  export type PecasOPListRelationFilter = {
    every?: PecasOPWhereInput
    some?: PecasOPWhereInput
    none?: PecasOPWhereInput
  }

  export type UsuariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Estoque_TecidosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type Estoque_AgulhasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TarefasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PecasOPOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EstabelecimentoOrderByRelevanceInput = {
    fields: EstabelecimentoOrderByRelevanceFieldEnum | EstabelecimentoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EstabelecimentoCountOrderByAggregateInput = {
    cnpj?: SortOrder
  }

  export type EstabelecimentoMaxOrderByAggregateInput = {
    cnpj?: SortOrder
  }

  export type EstabelecimentoMinOrderByAggregateInput = {
    cnpj?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type PecasEtapasListRelationFilter = {
    every?: PecasEtapasWhereInput
    some?: PecasEtapasWhereInput
    none?: PecasEtapasWhereInput
  }

  export type PecasEtapasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PecasOPOrderByRelevanceInput = {
    fields: PecasOPOrderByRelevanceFieldEnum | PecasOPOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type PecasOPCountOrderByAggregateInput = {
    id_da_op?: SortOrder
    id_Estabelecimento?: SortOrder
    status?: SortOrder
    descricao?: SortOrder
    quantidade_pecas?: SortOrder
    pedido_por?: SortOrder
    valor_peca?: SortOrder
    data_do_pedido?: SortOrder
    data_de_entrega?: SortOrder
    notas?: SortOrder
    tempo_estimado?: SortOrder
    tempo_esperado?: SortOrder
  }

  export type PecasOPAvgOrderByAggregateInput = {
    id_da_op?: SortOrder
    quantidade_pecas?: SortOrder
    valor_peca?: SortOrder
    tempo_estimado?: SortOrder
    tempo_esperado?: SortOrder
  }

  export type PecasOPMaxOrderByAggregateInput = {
    id_da_op?: SortOrder
    id_Estabelecimento?: SortOrder
    status?: SortOrder
    descricao?: SortOrder
    quantidade_pecas?: SortOrder
    pedido_por?: SortOrder
    valor_peca?: SortOrder
    data_do_pedido?: SortOrder
    data_de_entrega?: SortOrder
    notas?: SortOrder
    tempo_estimado?: SortOrder
    tempo_esperado?: SortOrder
  }

  export type PecasOPMinOrderByAggregateInput = {
    id_da_op?: SortOrder
    id_Estabelecimento?: SortOrder
    status?: SortOrder
    descricao?: SortOrder
    quantidade_pecas?: SortOrder
    pedido_por?: SortOrder
    valor_peca?: SortOrder
    data_do_pedido?: SortOrder
    data_de_entrega?: SortOrder
    notas?: SortOrder
    tempo_estimado?: SortOrder
    tempo_esperado?: SortOrder
  }

  export type PecasOPSumOrderByAggregateInput = {
    id_da_op?: SortOrder
    quantidade_pecas?: SortOrder
    valor_peca?: SortOrder
    tempo_estimado?: SortOrder
    tempo_esperado?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EtapaOrderByRelevanceInput = {
    fields: EtapaOrderByRelevanceFieldEnum | EtapaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EtapaCountOrderByAggregateInput = {
    id_da_funcao?: SortOrder
    descricao?: SortOrder
  }

  export type EtapaAvgOrderByAggregateInput = {
    id_da_funcao?: SortOrder
  }

  export type EtapaMaxOrderByAggregateInput = {
    id_da_funcao?: SortOrder
    descricao?: SortOrder
  }

  export type EtapaMinOrderByAggregateInput = {
    id_da_funcao?: SortOrder
    descricao?: SortOrder
  }

  export type EtapaSumOrderByAggregateInput = {
    id_da_funcao?: SortOrder
  }

  export type PecasOPScalarRelationFilter = {
    is?: PecasOPWhereInput
    isNot?: PecasOPWhereInput
  }

  export type EtapaScalarRelationFilter = {
    is?: EtapaWhereInput
    isNot?: EtapaWhereInput
  }

  export type PecasEtapasId_da_opId_da_funcaoCompoundUniqueInput = {
    id_da_op: number
    id_da_funcao: number
  }

  export type PecasEtapasCountOrderByAggregateInput = {
    id_da_op?: SortOrder
    id_da_funcao?: SortOrder
  }

  export type PecasEtapasAvgOrderByAggregateInput = {
    id_da_op?: SortOrder
    id_da_funcao?: SortOrder
  }

  export type PecasEtapasMaxOrderByAggregateInput = {
    id_da_op?: SortOrder
    id_da_funcao?: SortOrder
  }

  export type PecasEtapasMinOrderByAggregateInput = {
    id_da_op?: SortOrder
    id_da_funcao?: SortOrder
  }

  export type PecasEtapasSumOrderByAggregateInput = {
    id_da_op?: SortOrder
    id_da_funcao?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type UsuariosScalarRelationFilter = {
    is?: UsuariosWhereInput
    isNot?: UsuariosWhereInput
  }

  export type ProducaoOrderByRelevanceInput = {
    fields: ProducaoOrderByRelevanceFieldEnum | ProducaoOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type ProducaoCountOrderByAggregateInput = {
    id_da_producao?: SortOrder
    quantidade_pecas?: SortOrder
    id_Estabelecimento?: SortOrder
    id_da_op?: SortOrder
    id_funcionario?: SortOrder
    id_da_funcao?: SortOrder
    data_inicio?: SortOrder
    hora_registro?: SortOrder
  }

  export type ProducaoAvgOrderByAggregateInput = {
    id_da_producao?: SortOrder
    quantidade_pecas?: SortOrder
    id_da_op?: SortOrder
    id_da_funcao?: SortOrder
  }

  export type ProducaoMaxOrderByAggregateInput = {
    id_da_producao?: SortOrder
    quantidade_pecas?: SortOrder
    id_Estabelecimento?: SortOrder
    id_da_op?: SortOrder
    id_funcionario?: SortOrder
    id_da_funcao?: SortOrder
    data_inicio?: SortOrder
    hora_registro?: SortOrder
  }

  export type ProducaoMinOrderByAggregateInput = {
    id_da_producao?: SortOrder
    quantidade_pecas?: SortOrder
    id_Estabelecimento?: SortOrder
    id_da_op?: SortOrder
    id_funcionario?: SortOrder
    id_da_funcao?: SortOrder
    data_inicio?: SortOrder
    hora_registro?: SortOrder
  }

  export type ProducaoSumOrderByAggregateInput = {
    id_da_producao?: SortOrder
    quantidade_pecas?: SortOrder
    id_da_op?: SortOrder
    id_da_funcao?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type Estoque_TecidosOrderByRelevanceInput = {
    fields: Estoque_TecidosOrderByRelevanceFieldEnum | Estoque_TecidosOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Estoque_TecidosCountOrderByAggregateInput = {
    id_do_tecido?: SortOrder
    id_Estabelecimento?: SortOrder
    nome_do_tecido?: SortOrder
    valor?: SortOrder
    fornecedor?: SortOrder
    composicao?: SortOrder
    largura?: SortOrder
    peso?: SortOrder
    estoque?: SortOrder
    data_?: SortOrder
    tamanho?: SortOrder
    notas?: SortOrder
  }

  export type Estoque_TecidosAvgOrderByAggregateInput = {
    id_do_tecido?: SortOrder
    valor?: SortOrder
    largura?: SortOrder
    peso?: SortOrder
    estoque?: SortOrder
    tamanho?: SortOrder
  }

  export type Estoque_TecidosMaxOrderByAggregateInput = {
    id_do_tecido?: SortOrder
    id_Estabelecimento?: SortOrder
    nome_do_tecido?: SortOrder
    valor?: SortOrder
    fornecedor?: SortOrder
    composicao?: SortOrder
    largura?: SortOrder
    peso?: SortOrder
    estoque?: SortOrder
    data_?: SortOrder
    tamanho?: SortOrder
    notas?: SortOrder
  }

  export type Estoque_TecidosMinOrderByAggregateInput = {
    id_do_tecido?: SortOrder
    id_Estabelecimento?: SortOrder
    nome_do_tecido?: SortOrder
    valor?: SortOrder
    fornecedor?: SortOrder
    composicao?: SortOrder
    largura?: SortOrder
    peso?: SortOrder
    estoque?: SortOrder
    data_?: SortOrder
    tamanho?: SortOrder
    notas?: SortOrder
  }

  export type Estoque_TecidosSumOrderByAggregateInput = {
    id_do_tecido?: SortOrder
    valor?: SortOrder
    largura?: SortOrder
    peso?: SortOrder
    estoque?: SortOrder
    tamanho?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Estoque_AgulhasOrderByRelevanceInput = {
    fields: Estoque_AgulhasOrderByRelevanceFieldEnum | Estoque_AgulhasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type Estoque_AgulhasCountOrderByAggregateInput = {
    id_da_agulha?: SortOrder
    id_Estabelecimento?: SortOrder
    valor?: SortOrder
    fornecedor?: SortOrder
    numeracao?: SortOrder
    estoque?: SortOrder
    data?: SortOrder
    notas?: SortOrder
  }

  export type Estoque_AgulhasAvgOrderByAggregateInput = {
    id_da_agulha?: SortOrder
    valor?: SortOrder
    estoque?: SortOrder
  }

  export type Estoque_AgulhasMaxOrderByAggregateInput = {
    id_da_agulha?: SortOrder
    id_Estabelecimento?: SortOrder
    valor?: SortOrder
    fornecedor?: SortOrder
    numeracao?: SortOrder
    estoque?: SortOrder
    data?: SortOrder
    notas?: SortOrder
  }

  export type Estoque_AgulhasMinOrderByAggregateInput = {
    id_da_agulha?: SortOrder
    id_Estabelecimento?: SortOrder
    valor?: SortOrder
    fornecedor?: SortOrder
    numeracao?: SortOrder
    estoque?: SortOrder
    data?: SortOrder
    notas?: SortOrder
  }

  export type Estoque_AgulhasSumOrderByAggregateInput = {
    id_da_agulha?: SortOrder
    valor?: SortOrder
    estoque?: SortOrder
  }

  export type TarefasOrderByRelevanceInput = {
    fields: TarefasOrderByRelevanceFieldEnum | TarefasOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type TarefasCountOrderByAggregateInput = {
    id?: SortOrder
    id_Estabelecimento?: SortOrder
    tarefa?: SortOrder
    status?: SortOrder
    data_abertura?: SortOrder
    data_conclusao?: SortOrder
    notas?: SortOrder
  }

  export type TarefasAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TarefasMaxOrderByAggregateInput = {
    id?: SortOrder
    id_Estabelecimento?: SortOrder
    tarefa?: SortOrder
    status?: SortOrder
    data_abertura?: SortOrder
    data_conclusao?: SortOrder
    notas?: SortOrder
  }

  export type TarefasMinOrderByAggregateInput = {
    id?: SortOrder
    id_Estabelecimento?: SortOrder
    tarefa?: SortOrder
    status?: SortOrder
    data_abertura?: SortOrder
    data_conclusao?: SortOrder
    notas?: SortOrder
  }

  export type TarefasSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EquipesGruposOrderByRelevanceInput = {
    fields: EquipesGruposOrderByRelevanceFieldEnum | EquipesGruposOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type EquipesGruposCountOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    usuarioEmail?: SortOrder
    estabelecimentoCnpj?: SortOrder
  }

  export type EquipesGruposAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EquipesGruposMaxOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    usuarioEmail?: SortOrder
    estabelecimentoCnpj?: SortOrder
  }

  export type EquipesGruposMinOrderByAggregateInput = {
    id?: SortOrder
    nome?: SortOrder
    descricao?: SortOrder
    usuarioEmail?: SortOrder
    estabelecimentoCnpj?: SortOrder
  }

  export type EquipesGruposSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type EquipesGruposCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EquipesGruposCreateWithoutUsuarioInput, EquipesGruposUncheckedCreateWithoutUsuarioInput> | EquipesGruposCreateWithoutUsuarioInput[] | EquipesGruposUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EquipesGruposCreateOrConnectWithoutUsuarioInput | EquipesGruposCreateOrConnectWithoutUsuarioInput[]
    createMany?: EquipesGruposCreateManyUsuarioInputEnvelope
    connect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
  }

  export type EstabelecimentoCreateNestedOneWithoutUsuariosInput = {
    create?: XOR<EstabelecimentoCreateWithoutUsuariosInput, EstabelecimentoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutUsuariosInput
    connect?: EstabelecimentoWhereUniqueInput
  }

  export type ProducaoCreateNestedManyWithoutProducao_funcionarioInput = {
    create?: XOR<ProducaoCreateWithoutProducao_funcionarioInput, ProducaoUncheckedCreateWithoutProducao_funcionarioInput> | ProducaoCreateWithoutProducao_funcionarioInput[] | ProducaoUncheckedCreateWithoutProducao_funcionarioInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_funcionarioInput | ProducaoCreateOrConnectWithoutProducao_funcionarioInput[]
    createMany?: ProducaoCreateManyProducao_funcionarioInputEnvelope
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
  }

  export type EquipesGruposUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<EquipesGruposCreateWithoutUsuarioInput, EquipesGruposUncheckedCreateWithoutUsuarioInput> | EquipesGruposCreateWithoutUsuarioInput[] | EquipesGruposUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EquipesGruposCreateOrConnectWithoutUsuarioInput | EquipesGruposCreateOrConnectWithoutUsuarioInput[]
    createMany?: EquipesGruposCreateManyUsuarioInputEnvelope
    connect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
  }

  export type ProducaoUncheckedCreateNestedManyWithoutProducao_funcionarioInput = {
    create?: XOR<ProducaoCreateWithoutProducao_funcionarioInput, ProducaoUncheckedCreateWithoutProducao_funcionarioInput> | ProducaoCreateWithoutProducao_funcionarioInput[] | ProducaoUncheckedCreateWithoutProducao_funcionarioInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_funcionarioInput | ProducaoCreateOrConnectWithoutProducao_funcionarioInput[]
    createMany?: ProducaoCreateManyProducao_funcionarioInputEnvelope
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EquipesGruposUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EquipesGruposCreateWithoutUsuarioInput, EquipesGruposUncheckedCreateWithoutUsuarioInput> | EquipesGruposCreateWithoutUsuarioInput[] | EquipesGruposUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EquipesGruposCreateOrConnectWithoutUsuarioInput | EquipesGruposCreateOrConnectWithoutUsuarioInput[]
    upsert?: EquipesGruposUpsertWithWhereUniqueWithoutUsuarioInput | EquipesGruposUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EquipesGruposCreateManyUsuarioInputEnvelope
    set?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    disconnect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    delete?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    connect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    update?: EquipesGruposUpdateWithWhereUniqueWithoutUsuarioInput | EquipesGruposUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EquipesGruposUpdateManyWithWhereWithoutUsuarioInput | EquipesGruposUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EquipesGruposScalarWhereInput | EquipesGruposScalarWhereInput[]
  }

  export type EstabelecimentoUpdateOneRequiredWithoutUsuariosNestedInput = {
    create?: XOR<EstabelecimentoCreateWithoutUsuariosInput, EstabelecimentoUncheckedCreateWithoutUsuariosInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutUsuariosInput
    upsert?: EstabelecimentoUpsertWithoutUsuariosInput
    connect?: EstabelecimentoWhereUniqueInput
    update?: XOR<XOR<EstabelecimentoUpdateToOneWithWhereWithoutUsuariosInput, EstabelecimentoUpdateWithoutUsuariosInput>, EstabelecimentoUncheckedUpdateWithoutUsuariosInput>
  }

  export type ProducaoUpdateManyWithoutProducao_funcionarioNestedInput = {
    create?: XOR<ProducaoCreateWithoutProducao_funcionarioInput, ProducaoUncheckedCreateWithoutProducao_funcionarioInput> | ProducaoCreateWithoutProducao_funcionarioInput[] | ProducaoUncheckedCreateWithoutProducao_funcionarioInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_funcionarioInput | ProducaoCreateOrConnectWithoutProducao_funcionarioInput[]
    upsert?: ProducaoUpsertWithWhereUniqueWithoutProducao_funcionarioInput | ProducaoUpsertWithWhereUniqueWithoutProducao_funcionarioInput[]
    createMany?: ProducaoCreateManyProducao_funcionarioInputEnvelope
    set?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    disconnect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    delete?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    update?: ProducaoUpdateWithWhereUniqueWithoutProducao_funcionarioInput | ProducaoUpdateWithWhereUniqueWithoutProducao_funcionarioInput[]
    updateMany?: ProducaoUpdateManyWithWhereWithoutProducao_funcionarioInput | ProducaoUpdateManyWithWhereWithoutProducao_funcionarioInput[]
    deleteMany?: ProducaoScalarWhereInput | ProducaoScalarWhereInput[]
  }

  export type EquipesGruposUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<EquipesGruposCreateWithoutUsuarioInput, EquipesGruposUncheckedCreateWithoutUsuarioInput> | EquipesGruposCreateWithoutUsuarioInput[] | EquipesGruposUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: EquipesGruposCreateOrConnectWithoutUsuarioInput | EquipesGruposCreateOrConnectWithoutUsuarioInput[]
    upsert?: EquipesGruposUpsertWithWhereUniqueWithoutUsuarioInput | EquipesGruposUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: EquipesGruposCreateManyUsuarioInputEnvelope
    set?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    disconnect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    delete?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    connect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    update?: EquipesGruposUpdateWithWhereUniqueWithoutUsuarioInput | EquipesGruposUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: EquipesGruposUpdateManyWithWhereWithoutUsuarioInput | EquipesGruposUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: EquipesGruposScalarWhereInput | EquipesGruposScalarWhereInput[]
  }

  export type ProducaoUncheckedUpdateManyWithoutProducao_funcionarioNestedInput = {
    create?: XOR<ProducaoCreateWithoutProducao_funcionarioInput, ProducaoUncheckedCreateWithoutProducao_funcionarioInput> | ProducaoCreateWithoutProducao_funcionarioInput[] | ProducaoUncheckedCreateWithoutProducao_funcionarioInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_funcionarioInput | ProducaoCreateOrConnectWithoutProducao_funcionarioInput[]
    upsert?: ProducaoUpsertWithWhereUniqueWithoutProducao_funcionarioInput | ProducaoUpsertWithWhereUniqueWithoutProducao_funcionarioInput[]
    createMany?: ProducaoCreateManyProducao_funcionarioInputEnvelope
    set?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    disconnect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    delete?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    update?: ProducaoUpdateWithWhereUniqueWithoutProducao_funcionarioInput | ProducaoUpdateWithWhereUniqueWithoutProducao_funcionarioInput[]
    updateMany?: ProducaoUpdateManyWithWhereWithoutProducao_funcionarioInput | ProducaoUpdateManyWithWhereWithoutProducao_funcionarioInput[]
    deleteMany?: ProducaoScalarWhereInput | ProducaoScalarWhereInput[]
  }

  export type UsuariosCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<UsuariosCreateWithoutEstabelecimentoInput, UsuariosUncheckedCreateWithoutEstabelecimentoInput> | UsuariosCreateWithoutEstabelecimentoInput[] | UsuariosUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutEstabelecimentoInput | UsuariosCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: UsuariosCreateManyEstabelecimentoInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type EquipesGruposCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<EquipesGruposCreateWithoutEstabelecimentoInput, EquipesGruposUncheckedCreateWithoutEstabelecimentoInput> | EquipesGruposCreateWithoutEstabelecimentoInput[] | EquipesGruposUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: EquipesGruposCreateOrConnectWithoutEstabelecimentoInput | EquipesGruposCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: EquipesGruposCreateManyEstabelecimentoInputEnvelope
    connect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
  }

  export type Estoque_TecidosCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<Estoque_TecidosCreateWithoutEstabelecimentoInput, Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput> | Estoque_TecidosCreateWithoutEstabelecimentoInput[] | Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: Estoque_TecidosCreateOrConnectWithoutEstabelecimentoInput | Estoque_TecidosCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: Estoque_TecidosCreateManyEstabelecimentoInputEnvelope
    connect?: Estoque_TecidosWhereUniqueInput | Estoque_TecidosWhereUniqueInput[]
  }

  export type Estoque_AgulhasCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<Estoque_AgulhasCreateWithoutEstabelecimentoInput, Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput> | Estoque_AgulhasCreateWithoutEstabelecimentoInput[] | Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: Estoque_AgulhasCreateOrConnectWithoutEstabelecimentoInput | Estoque_AgulhasCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: Estoque_AgulhasCreateManyEstabelecimentoInputEnvelope
    connect?: Estoque_AgulhasWhereUniqueInput | Estoque_AgulhasWhereUniqueInput[]
  }

  export type TarefasCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<TarefasCreateWithoutEstabelecimentoInput, TarefasUncheckedCreateWithoutEstabelecimentoInput> | TarefasCreateWithoutEstabelecimentoInput[] | TarefasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: TarefasCreateOrConnectWithoutEstabelecimentoInput | TarefasCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: TarefasCreateManyEstabelecimentoInputEnvelope
    connect?: TarefasWhereUniqueInput | TarefasWhereUniqueInput[]
  }

  export type PecasOPCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<PecasOPCreateWithoutEstabelecimentoInput, PecasOPUncheckedCreateWithoutEstabelecimentoInput> | PecasOPCreateWithoutEstabelecimentoInput[] | PecasOPUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: PecasOPCreateOrConnectWithoutEstabelecimentoInput | PecasOPCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: PecasOPCreateManyEstabelecimentoInputEnvelope
    connect?: PecasOPWhereUniqueInput | PecasOPWhereUniqueInput[]
  }

  export type ProducaoCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<ProducaoCreateWithoutEstabelecimentoInput, ProducaoUncheckedCreateWithoutEstabelecimentoInput> | ProducaoCreateWithoutEstabelecimentoInput[] | ProducaoUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutEstabelecimentoInput | ProducaoCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: ProducaoCreateManyEstabelecimentoInputEnvelope
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
  }

  export type UsuariosUncheckedCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<UsuariosCreateWithoutEstabelecimentoInput, UsuariosUncheckedCreateWithoutEstabelecimentoInput> | UsuariosCreateWithoutEstabelecimentoInput[] | UsuariosUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutEstabelecimentoInput | UsuariosCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: UsuariosCreateManyEstabelecimentoInputEnvelope
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
  }

  export type EquipesGruposUncheckedCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<EquipesGruposCreateWithoutEstabelecimentoInput, EquipesGruposUncheckedCreateWithoutEstabelecimentoInput> | EquipesGruposCreateWithoutEstabelecimentoInput[] | EquipesGruposUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: EquipesGruposCreateOrConnectWithoutEstabelecimentoInput | EquipesGruposCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: EquipesGruposCreateManyEstabelecimentoInputEnvelope
    connect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
  }

  export type Estoque_TecidosUncheckedCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<Estoque_TecidosCreateWithoutEstabelecimentoInput, Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput> | Estoque_TecidosCreateWithoutEstabelecimentoInput[] | Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: Estoque_TecidosCreateOrConnectWithoutEstabelecimentoInput | Estoque_TecidosCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: Estoque_TecidosCreateManyEstabelecimentoInputEnvelope
    connect?: Estoque_TecidosWhereUniqueInput | Estoque_TecidosWhereUniqueInput[]
  }

  export type Estoque_AgulhasUncheckedCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<Estoque_AgulhasCreateWithoutEstabelecimentoInput, Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput> | Estoque_AgulhasCreateWithoutEstabelecimentoInput[] | Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: Estoque_AgulhasCreateOrConnectWithoutEstabelecimentoInput | Estoque_AgulhasCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: Estoque_AgulhasCreateManyEstabelecimentoInputEnvelope
    connect?: Estoque_AgulhasWhereUniqueInput | Estoque_AgulhasWhereUniqueInput[]
  }

  export type TarefasUncheckedCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<TarefasCreateWithoutEstabelecimentoInput, TarefasUncheckedCreateWithoutEstabelecimentoInput> | TarefasCreateWithoutEstabelecimentoInput[] | TarefasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: TarefasCreateOrConnectWithoutEstabelecimentoInput | TarefasCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: TarefasCreateManyEstabelecimentoInputEnvelope
    connect?: TarefasWhereUniqueInput | TarefasWhereUniqueInput[]
  }

  export type PecasOPUncheckedCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<PecasOPCreateWithoutEstabelecimentoInput, PecasOPUncheckedCreateWithoutEstabelecimentoInput> | PecasOPCreateWithoutEstabelecimentoInput[] | PecasOPUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: PecasOPCreateOrConnectWithoutEstabelecimentoInput | PecasOPCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: PecasOPCreateManyEstabelecimentoInputEnvelope
    connect?: PecasOPWhereUniqueInput | PecasOPWhereUniqueInput[]
  }

  export type ProducaoUncheckedCreateNestedManyWithoutEstabelecimentoInput = {
    create?: XOR<ProducaoCreateWithoutEstabelecimentoInput, ProducaoUncheckedCreateWithoutEstabelecimentoInput> | ProducaoCreateWithoutEstabelecimentoInput[] | ProducaoUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutEstabelecimentoInput | ProducaoCreateOrConnectWithoutEstabelecimentoInput[]
    createMany?: ProducaoCreateManyEstabelecimentoInputEnvelope
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
  }

  export type UsuariosUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<UsuariosCreateWithoutEstabelecimentoInput, UsuariosUncheckedCreateWithoutEstabelecimentoInput> | UsuariosCreateWithoutEstabelecimentoInput[] | UsuariosUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutEstabelecimentoInput | UsuariosCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutEstabelecimentoInput | UsuariosUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: UsuariosCreateManyEstabelecimentoInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutEstabelecimentoInput | UsuariosUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutEstabelecimentoInput | UsuariosUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type EquipesGruposUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<EquipesGruposCreateWithoutEstabelecimentoInput, EquipesGruposUncheckedCreateWithoutEstabelecimentoInput> | EquipesGruposCreateWithoutEstabelecimentoInput[] | EquipesGruposUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: EquipesGruposCreateOrConnectWithoutEstabelecimentoInput | EquipesGruposCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: EquipesGruposUpsertWithWhereUniqueWithoutEstabelecimentoInput | EquipesGruposUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: EquipesGruposCreateManyEstabelecimentoInputEnvelope
    set?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    disconnect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    delete?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    connect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    update?: EquipesGruposUpdateWithWhereUniqueWithoutEstabelecimentoInput | EquipesGruposUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: EquipesGruposUpdateManyWithWhereWithoutEstabelecimentoInput | EquipesGruposUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: EquipesGruposScalarWhereInput | EquipesGruposScalarWhereInput[]
  }

  export type Estoque_TecidosUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<Estoque_TecidosCreateWithoutEstabelecimentoInput, Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput> | Estoque_TecidosCreateWithoutEstabelecimentoInput[] | Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: Estoque_TecidosCreateOrConnectWithoutEstabelecimentoInput | Estoque_TecidosCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: Estoque_TecidosUpsertWithWhereUniqueWithoutEstabelecimentoInput | Estoque_TecidosUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: Estoque_TecidosCreateManyEstabelecimentoInputEnvelope
    set?: Estoque_TecidosWhereUniqueInput | Estoque_TecidosWhereUniqueInput[]
    disconnect?: Estoque_TecidosWhereUniqueInput | Estoque_TecidosWhereUniqueInput[]
    delete?: Estoque_TecidosWhereUniqueInput | Estoque_TecidosWhereUniqueInput[]
    connect?: Estoque_TecidosWhereUniqueInput | Estoque_TecidosWhereUniqueInput[]
    update?: Estoque_TecidosUpdateWithWhereUniqueWithoutEstabelecimentoInput | Estoque_TecidosUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: Estoque_TecidosUpdateManyWithWhereWithoutEstabelecimentoInput | Estoque_TecidosUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: Estoque_TecidosScalarWhereInput | Estoque_TecidosScalarWhereInput[]
  }

  export type Estoque_AgulhasUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<Estoque_AgulhasCreateWithoutEstabelecimentoInput, Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput> | Estoque_AgulhasCreateWithoutEstabelecimentoInput[] | Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: Estoque_AgulhasCreateOrConnectWithoutEstabelecimentoInput | Estoque_AgulhasCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: Estoque_AgulhasUpsertWithWhereUniqueWithoutEstabelecimentoInput | Estoque_AgulhasUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: Estoque_AgulhasCreateManyEstabelecimentoInputEnvelope
    set?: Estoque_AgulhasWhereUniqueInput | Estoque_AgulhasWhereUniqueInput[]
    disconnect?: Estoque_AgulhasWhereUniqueInput | Estoque_AgulhasWhereUniqueInput[]
    delete?: Estoque_AgulhasWhereUniqueInput | Estoque_AgulhasWhereUniqueInput[]
    connect?: Estoque_AgulhasWhereUniqueInput | Estoque_AgulhasWhereUniqueInput[]
    update?: Estoque_AgulhasUpdateWithWhereUniqueWithoutEstabelecimentoInput | Estoque_AgulhasUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: Estoque_AgulhasUpdateManyWithWhereWithoutEstabelecimentoInput | Estoque_AgulhasUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: Estoque_AgulhasScalarWhereInput | Estoque_AgulhasScalarWhereInput[]
  }

  export type TarefasUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<TarefasCreateWithoutEstabelecimentoInput, TarefasUncheckedCreateWithoutEstabelecimentoInput> | TarefasCreateWithoutEstabelecimentoInput[] | TarefasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: TarefasCreateOrConnectWithoutEstabelecimentoInput | TarefasCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: TarefasUpsertWithWhereUniqueWithoutEstabelecimentoInput | TarefasUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: TarefasCreateManyEstabelecimentoInputEnvelope
    set?: TarefasWhereUniqueInput | TarefasWhereUniqueInput[]
    disconnect?: TarefasWhereUniqueInput | TarefasWhereUniqueInput[]
    delete?: TarefasWhereUniqueInput | TarefasWhereUniqueInput[]
    connect?: TarefasWhereUniqueInput | TarefasWhereUniqueInput[]
    update?: TarefasUpdateWithWhereUniqueWithoutEstabelecimentoInput | TarefasUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: TarefasUpdateManyWithWhereWithoutEstabelecimentoInput | TarefasUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: TarefasScalarWhereInput | TarefasScalarWhereInput[]
  }

  export type PecasOPUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<PecasOPCreateWithoutEstabelecimentoInput, PecasOPUncheckedCreateWithoutEstabelecimentoInput> | PecasOPCreateWithoutEstabelecimentoInput[] | PecasOPUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: PecasOPCreateOrConnectWithoutEstabelecimentoInput | PecasOPCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: PecasOPUpsertWithWhereUniqueWithoutEstabelecimentoInput | PecasOPUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: PecasOPCreateManyEstabelecimentoInputEnvelope
    set?: PecasOPWhereUniqueInput | PecasOPWhereUniqueInput[]
    disconnect?: PecasOPWhereUniqueInput | PecasOPWhereUniqueInput[]
    delete?: PecasOPWhereUniqueInput | PecasOPWhereUniqueInput[]
    connect?: PecasOPWhereUniqueInput | PecasOPWhereUniqueInput[]
    update?: PecasOPUpdateWithWhereUniqueWithoutEstabelecimentoInput | PecasOPUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: PecasOPUpdateManyWithWhereWithoutEstabelecimentoInput | PecasOPUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: PecasOPScalarWhereInput | PecasOPScalarWhereInput[]
  }

  export type ProducaoUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<ProducaoCreateWithoutEstabelecimentoInput, ProducaoUncheckedCreateWithoutEstabelecimentoInput> | ProducaoCreateWithoutEstabelecimentoInput[] | ProducaoUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutEstabelecimentoInput | ProducaoCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: ProducaoUpsertWithWhereUniqueWithoutEstabelecimentoInput | ProducaoUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: ProducaoCreateManyEstabelecimentoInputEnvelope
    set?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    disconnect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    delete?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    update?: ProducaoUpdateWithWhereUniqueWithoutEstabelecimentoInput | ProducaoUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: ProducaoUpdateManyWithWhereWithoutEstabelecimentoInput | ProducaoUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: ProducaoScalarWhereInput | ProducaoScalarWhereInput[]
  }

  export type UsuariosUncheckedUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<UsuariosCreateWithoutEstabelecimentoInput, UsuariosUncheckedCreateWithoutEstabelecimentoInput> | UsuariosCreateWithoutEstabelecimentoInput[] | UsuariosUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: UsuariosCreateOrConnectWithoutEstabelecimentoInput | UsuariosCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: UsuariosUpsertWithWhereUniqueWithoutEstabelecimentoInput | UsuariosUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: UsuariosCreateManyEstabelecimentoInputEnvelope
    set?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    disconnect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    delete?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    connect?: UsuariosWhereUniqueInput | UsuariosWhereUniqueInput[]
    update?: UsuariosUpdateWithWhereUniqueWithoutEstabelecimentoInput | UsuariosUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: UsuariosUpdateManyWithWhereWithoutEstabelecimentoInput | UsuariosUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
  }

  export type EquipesGruposUncheckedUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<EquipesGruposCreateWithoutEstabelecimentoInput, EquipesGruposUncheckedCreateWithoutEstabelecimentoInput> | EquipesGruposCreateWithoutEstabelecimentoInput[] | EquipesGruposUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: EquipesGruposCreateOrConnectWithoutEstabelecimentoInput | EquipesGruposCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: EquipesGruposUpsertWithWhereUniqueWithoutEstabelecimentoInput | EquipesGruposUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: EquipesGruposCreateManyEstabelecimentoInputEnvelope
    set?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    disconnect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    delete?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    connect?: EquipesGruposWhereUniqueInput | EquipesGruposWhereUniqueInput[]
    update?: EquipesGruposUpdateWithWhereUniqueWithoutEstabelecimentoInput | EquipesGruposUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: EquipesGruposUpdateManyWithWhereWithoutEstabelecimentoInput | EquipesGruposUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: EquipesGruposScalarWhereInput | EquipesGruposScalarWhereInput[]
  }

  export type Estoque_TecidosUncheckedUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<Estoque_TecidosCreateWithoutEstabelecimentoInput, Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput> | Estoque_TecidosCreateWithoutEstabelecimentoInput[] | Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: Estoque_TecidosCreateOrConnectWithoutEstabelecimentoInput | Estoque_TecidosCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: Estoque_TecidosUpsertWithWhereUniqueWithoutEstabelecimentoInput | Estoque_TecidosUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: Estoque_TecidosCreateManyEstabelecimentoInputEnvelope
    set?: Estoque_TecidosWhereUniqueInput | Estoque_TecidosWhereUniqueInput[]
    disconnect?: Estoque_TecidosWhereUniqueInput | Estoque_TecidosWhereUniqueInput[]
    delete?: Estoque_TecidosWhereUniqueInput | Estoque_TecidosWhereUniqueInput[]
    connect?: Estoque_TecidosWhereUniqueInput | Estoque_TecidosWhereUniqueInput[]
    update?: Estoque_TecidosUpdateWithWhereUniqueWithoutEstabelecimentoInput | Estoque_TecidosUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: Estoque_TecidosUpdateManyWithWhereWithoutEstabelecimentoInput | Estoque_TecidosUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: Estoque_TecidosScalarWhereInput | Estoque_TecidosScalarWhereInput[]
  }

  export type Estoque_AgulhasUncheckedUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<Estoque_AgulhasCreateWithoutEstabelecimentoInput, Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput> | Estoque_AgulhasCreateWithoutEstabelecimentoInput[] | Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: Estoque_AgulhasCreateOrConnectWithoutEstabelecimentoInput | Estoque_AgulhasCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: Estoque_AgulhasUpsertWithWhereUniqueWithoutEstabelecimentoInput | Estoque_AgulhasUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: Estoque_AgulhasCreateManyEstabelecimentoInputEnvelope
    set?: Estoque_AgulhasWhereUniqueInput | Estoque_AgulhasWhereUniqueInput[]
    disconnect?: Estoque_AgulhasWhereUniqueInput | Estoque_AgulhasWhereUniqueInput[]
    delete?: Estoque_AgulhasWhereUniqueInput | Estoque_AgulhasWhereUniqueInput[]
    connect?: Estoque_AgulhasWhereUniqueInput | Estoque_AgulhasWhereUniqueInput[]
    update?: Estoque_AgulhasUpdateWithWhereUniqueWithoutEstabelecimentoInput | Estoque_AgulhasUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: Estoque_AgulhasUpdateManyWithWhereWithoutEstabelecimentoInput | Estoque_AgulhasUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: Estoque_AgulhasScalarWhereInput | Estoque_AgulhasScalarWhereInput[]
  }

  export type TarefasUncheckedUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<TarefasCreateWithoutEstabelecimentoInput, TarefasUncheckedCreateWithoutEstabelecimentoInput> | TarefasCreateWithoutEstabelecimentoInput[] | TarefasUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: TarefasCreateOrConnectWithoutEstabelecimentoInput | TarefasCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: TarefasUpsertWithWhereUniqueWithoutEstabelecimentoInput | TarefasUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: TarefasCreateManyEstabelecimentoInputEnvelope
    set?: TarefasWhereUniqueInput | TarefasWhereUniqueInput[]
    disconnect?: TarefasWhereUniqueInput | TarefasWhereUniqueInput[]
    delete?: TarefasWhereUniqueInput | TarefasWhereUniqueInput[]
    connect?: TarefasWhereUniqueInput | TarefasWhereUniqueInput[]
    update?: TarefasUpdateWithWhereUniqueWithoutEstabelecimentoInput | TarefasUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: TarefasUpdateManyWithWhereWithoutEstabelecimentoInput | TarefasUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: TarefasScalarWhereInput | TarefasScalarWhereInput[]
  }

  export type PecasOPUncheckedUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<PecasOPCreateWithoutEstabelecimentoInput, PecasOPUncheckedCreateWithoutEstabelecimentoInput> | PecasOPCreateWithoutEstabelecimentoInput[] | PecasOPUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: PecasOPCreateOrConnectWithoutEstabelecimentoInput | PecasOPCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: PecasOPUpsertWithWhereUniqueWithoutEstabelecimentoInput | PecasOPUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: PecasOPCreateManyEstabelecimentoInputEnvelope
    set?: PecasOPWhereUniqueInput | PecasOPWhereUniqueInput[]
    disconnect?: PecasOPWhereUniqueInput | PecasOPWhereUniqueInput[]
    delete?: PecasOPWhereUniqueInput | PecasOPWhereUniqueInput[]
    connect?: PecasOPWhereUniqueInput | PecasOPWhereUniqueInput[]
    update?: PecasOPUpdateWithWhereUniqueWithoutEstabelecimentoInput | PecasOPUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: PecasOPUpdateManyWithWhereWithoutEstabelecimentoInput | PecasOPUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: PecasOPScalarWhereInput | PecasOPScalarWhereInput[]
  }

  export type ProducaoUncheckedUpdateManyWithoutEstabelecimentoNestedInput = {
    create?: XOR<ProducaoCreateWithoutEstabelecimentoInput, ProducaoUncheckedCreateWithoutEstabelecimentoInput> | ProducaoCreateWithoutEstabelecimentoInput[] | ProducaoUncheckedCreateWithoutEstabelecimentoInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutEstabelecimentoInput | ProducaoCreateOrConnectWithoutEstabelecimentoInput[]
    upsert?: ProducaoUpsertWithWhereUniqueWithoutEstabelecimentoInput | ProducaoUpsertWithWhereUniqueWithoutEstabelecimentoInput[]
    createMany?: ProducaoCreateManyEstabelecimentoInputEnvelope
    set?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    disconnect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    delete?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    update?: ProducaoUpdateWithWhereUniqueWithoutEstabelecimentoInput | ProducaoUpdateWithWhereUniqueWithoutEstabelecimentoInput[]
    updateMany?: ProducaoUpdateManyWithWhereWithoutEstabelecimentoInput | ProducaoUpdateManyWithWhereWithoutEstabelecimentoInput[]
    deleteMany?: ProducaoScalarWhereInput | ProducaoScalarWhereInput[]
  }

  export type EstabelecimentoCreateNestedOneWithoutPecasOPInput = {
    create?: XOR<EstabelecimentoCreateWithoutPecasOPInput, EstabelecimentoUncheckedCreateWithoutPecasOPInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutPecasOPInput
    connect?: EstabelecimentoWhereUniqueInput
  }

  export type ProducaoCreateNestedManyWithoutProducao_pecaInput = {
    create?: XOR<ProducaoCreateWithoutProducao_pecaInput, ProducaoUncheckedCreateWithoutProducao_pecaInput> | ProducaoCreateWithoutProducao_pecaInput[] | ProducaoUncheckedCreateWithoutProducao_pecaInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_pecaInput | ProducaoCreateOrConnectWithoutProducao_pecaInput[]
    createMany?: ProducaoCreateManyProducao_pecaInputEnvelope
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
  }

  export type PecasEtapasCreateNestedManyWithoutPeca_opInput = {
    create?: XOR<PecasEtapasCreateWithoutPeca_opInput, PecasEtapasUncheckedCreateWithoutPeca_opInput> | PecasEtapasCreateWithoutPeca_opInput[] | PecasEtapasUncheckedCreateWithoutPeca_opInput[]
    connectOrCreate?: PecasEtapasCreateOrConnectWithoutPeca_opInput | PecasEtapasCreateOrConnectWithoutPeca_opInput[]
    createMany?: PecasEtapasCreateManyPeca_opInputEnvelope
    connect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
  }

  export type ProducaoUncheckedCreateNestedManyWithoutProducao_pecaInput = {
    create?: XOR<ProducaoCreateWithoutProducao_pecaInput, ProducaoUncheckedCreateWithoutProducao_pecaInput> | ProducaoCreateWithoutProducao_pecaInput[] | ProducaoUncheckedCreateWithoutProducao_pecaInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_pecaInput | ProducaoCreateOrConnectWithoutProducao_pecaInput[]
    createMany?: ProducaoCreateManyProducao_pecaInputEnvelope
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
  }

  export type PecasEtapasUncheckedCreateNestedManyWithoutPeca_opInput = {
    create?: XOR<PecasEtapasCreateWithoutPeca_opInput, PecasEtapasUncheckedCreateWithoutPeca_opInput> | PecasEtapasCreateWithoutPeca_opInput[] | PecasEtapasUncheckedCreateWithoutPeca_opInput[]
    connectOrCreate?: PecasEtapasCreateOrConnectWithoutPeca_opInput | PecasEtapasCreateOrConnectWithoutPeca_opInput[]
    createMany?: PecasEtapasCreateManyPeca_opInputEnvelope
    connect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EstabelecimentoUpdateOneRequiredWithoutPecasOPNestedInput = {
    create?: XOR<EstabelecimentoCreateWithoutPecasOPInput, EstabelecimentoUncheckedCreateWithoutPecasOPInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutPecasOPInput
    upsert?: EstabelecimentoUpsertWithoutPecasOPInput
    connect?: EstabelecimentoWhereUniqueInput
    update?: XOR<XOR<EstabelecimentoUpdateToOneWithWhereWithoutPecasOPInput, EstabelecimentoUpdateWithoutPecasOPInput>, EstabelecimentoUncheckedUpdateWithoutPecasOPInput>
  }

  export type ProducaoUpdateManyWithoutProducao_pecaNestedInput = {
    create?: XOR<ProducaoCreateWithoutProducao_pecaInput, ProducaoUncheckedCreateWithoutProducao_pecaInput> | ProducaoCreateWithoutProducao_pecaInput[] | ProducaoUncheckedCreateWithoutProducao_pecaInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_pecaInput | ProducaoCreateOrConnectWithoutProducao_pecaInput[]
    upsert?: ProducaoUpsertWithWhereUniqueWithoutProducao_pecaInput | ProducaoUpsertWithWhereUniqueWithoutProducao_pecaInput[]
    createMany?: ProducaoCreateManyProducao_pecaInputEnvelope
    set?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    disconnect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    delete?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    update?: ProducaoUpdateWithWhereUniqueWithoutProducao_pecaInput | ProducaoUpdateWithWhereUniqueWithoutProducao_pecaInput[]
    updateMany?: ProducaoUpdateManyWithWhereWithoutProducao_pecaInput | ProducaoUpdateManyWithWhereWithoutProducao_pecaInput[]
    deleteMany?: ProducaoScalarWhereInput | ProducaoScalarWhereInput[]
  }

  export type PecasEtapasUpdateManyWithoutPeca_opNestedInput = {
    create?: XOR<PecasEtapasCreateWithoutPeca_opInput, PecasEtapasUncheckedCreateWithoutPeca_opInput> | PecasEtapasCreateWithoutPeca_opInput[] | PecasEtapasUncheckedCreateWithoutPeca_opInput[]
    connectOrCreate?: PecasEtapasCreateOrConnectWithoutPeca_opInput | PecasEtapasCreateOrConnectWithoutPeca_opInput[]
    upsert?: PecasEtapasUpsertWithWhereUniqueWithoutPeca_opInput | PecasEtapasUpsertWithWhereUniqueWithoutPeca_opInput[]
    createMany?: PecasEtapasCreateManyPeca_opInputEnvelope
    set?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    disconnect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    delete?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    connect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    update?: PecasEtapasUpdateWithWhereUniqueWithoutPeca_opInput | PecasEtapasUpdateWithWhereUniqueWithoutPeca_opInput[]
    updateMany?: PecasEtapasUpdateManyWithWhereWithoutPeca_opInput | PecasEtapasUpdateManyWithWhereWithoutPeca_opInput[]
    deleteMany?: PecasEtapasScalarWhereInput | PecasEtapasScalarWhereInput[]
  }

  export type ProducaoUncheckedUpdateManyWithoutProducao_pecaNestedInput = {
    create?: XOR<ProducaoCreateWithoutProducao_pecaInput, ProducaoUncheckedCreateWithoutProducao_pecaInput> | ProducaoCreateWithoutProducao_pecaInput[] | ProducaoUncheckedCreateWithoutProducao_pecaInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_pecaInput | ProducaoCreateOrConnectWithoutProducao_pecaInput[]
    upsert?: ProducaoUpsertWithWhereUniqueWithoutProducao_pecaInput | ProducaoUpsertWithWhereUniqueWithoutProducao_pecaInput[]
    createMany?: ProducaoCreateManyProducao_pecaInputEnvelope
    set?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    disconnect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    delete?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    update?: ProducaoUpdateWithWhereUniqueWithoutProducao_pecaInput | ProducaoUpdateWithWhereUniqueWithoutProducao_pecaInput[]
    updateMany?: ProducaoUpdateManyWithWhereWithoutProducao_pecaInput | ProducaoUpdateManyWithWhereWithoutProducao_pecaInput[]
    deleteMany?: ProducaoScalarWhereInput | ProducaoScalarWhereInput[]
  }

  export type PecasEtapasUncheckedUpdateManyWithoutPeca_opNestedInput = {
    create?: XOR<PecasEtapasCreateWithoutPeca_opInput, PecasEtapasUncheckedCreateWithoutPeca_opInput> | PecasEtapasCreateWithoutPeca_opInput[] | PecasEtapasUncheckedCreateWithoutPeca_opInput[]
    connectOrCreate?: PecasEtapasCreateOrConnectWithoutPeca_opInput | PecasEtapasCreateOrConnectWithoutPeca_opInput[]
    upsert?: PecasEtapasUpsertWithWhereUniqueWithoutPeca_opInput | PecasEtapasUpsertWithWhereUniqueWithoutPeca_opInput[]
    createMany?: PecasEtapasCreateManyPeca_opInputEnvelope
    set?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    disconnect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    delete?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    connect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    update?: PecasEtapasUpdateWithWhereUniqueWithoutPeca_opInput | PecasEtapasUpdateWithWhereUniqueWithoutPeca_opInput[]
    updateMany?: PecasEtapasUpdateManyWithWhereWithoutPeca_opInput | PecasEtapasUpdateManyWithWhereWithoutPeca_opInput[]
    deleteMany?: PecasEtapasScalarWhereInput | PecasEtapasScalarWhereInput[]
  }

  export type PecasEtapasCreateNestedManyWithoutEtapaInput = {
    create?: XOR<PecasEtapasCreateWithoutEtapaInput, PecasEtapasUncheckedCreateWithoutEtapaInput> | PecasEtapasCreateWithoutEtapaInput[] | PecasEtapasUncheckedCreateWithoutEtapaInput[]
    connectOrCreate?: PecasEtapasCreateOrConnectWithoutEtapaInput | PecasEtapasCreateOrConnectWithoutEtapaInput[]
    createMany?: PecasEtapasCreateManyEtapaInputEnvelope
    connect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
  }

  export type ProducaoCreateNestedManyWithoutProducao_etapaInput = {
    create?: XOR<ProducaoCreateWithoutProducao_etapaInput, ProducaoUncheckedCreateWithoutProducao_etapaInput> | ProducaoCreateWithoutProducao_etapaInput[] | ProducaoUncheckedCreateWithoutProducao_etapaInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_etapaInput | ProducaoCreateOrConnectWithoutProducao_etapaInput[]
    createMany?: ProducaoCreateManyProducao_etapaInputEnvelope
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
  }

  export type PecasEtapasUncheckedCreateNestedManyWithoutEtapaInput = {
    create?: XOR<PecasEtapasCreateWithoutEtapaInput, PecasEtapasUncheckedCreateWithoutEtapaInput> | PecasEtapasCreateWithoutEtapaInput[] | PecasEtapasUncheckedCreateWithoutEtapaInput[]
    connectOrCreate?: PecasEtapasCreateOrConnectWithoutEtapaInput | PecasEtapasCreateOrConnectWithoutEtapaInput[]
    createMany?: PecasEtapasCreateManyEtapaInputEnvelope
    connect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
  }

  export type ProducaoUncheckedCreateNestedManyWithoutProducao_etapaInput = {
    create?: XOR<ProducaoCreateWithoutProducao_etapaInput, ProducaoUncheckedCreateWithoutProducao_etapaInput> | ProducaoCreateWithoutProducao_etapaInput[] | ProducaoUncheckedCreateWithoutProducao_etapaInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_etapaInput | ProducaoCreateOrConnectWithoutProducao_etapaInput[]
    createMany?: ProducaoCreateManyProducao_etapaInputEnvelope
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
  }

  export type PecasEtapasUpdateManyWithoutEtapaNestedInput = {
    create?: XOR<PecasEtapasCreateWithoutEtapaInput, PecasEtapasUncheckedCreateWithoutEtapaInput> | PecasEtapasCreateWithoutEtapaInput[] | PecasEtapasUncheckedCreateWithoutEtapaInput[]
    connectOrCreate?: PecasEtapasCreateOrConnectWithoutEtapaInput | PecasEtapasCreateOrConnectWithoutEtapaInput[]
    upsert?: PecasEtapasUpsertWithWhereUniqueWithoutEtapaInput | PecasEtapasUpsertWithWhereUniqueWithoutEtapaInput[]
    createMany?: PecasEtapasCreateManyEtapaInputEnvelope
    set?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    disconnect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    delete?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    connect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    update?: PecasEtapasUpdateWithWhereUniqueWithoutEtapaInput | PecasEtapasUpdateWithWhereUniqueWithoutEtapaInput[]
    updateMany?: PecasEtapasUpdateManyWithWhereWithoutEtapaInput | PecasEtapasUpdateManyWithWhereWithoutEtapaInput[]
    deleteMany?: PecasEtapasScalarWhereInput | PecasEtapasScalarWhereInput[]
  }

  export type ProducaoUpdateManyWithoutProducao_etapaNestedInput = {
    create?: XOR<ProducaoCreateWithoutProducao_etapaInput, ProducaoUncheckedCreateWithoutProducao_etapaInput> | ProducaoCreateWithoutProducao_etapaInput[] | ProducaoUncheckedCreateWithoutProducao_etapaInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_etapaInput | ProducaoCreateOrConnectWithoutProducao_etapaInput[]
    upsert?: ProducaoUpsertWithWhereUniqueWithoutProducao_etapaInput | ProducaoUpsertWithWhereUniqueWithoutProducao_etapaInput[]
    createMany?: ProducaoCreateManyProducao_etapaInputEnvelope
    set?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    disconnect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    delete?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    update?: ProducaoUpdateWithWhereUniqueWithoutProducao_etapaInput | ProducaoUpdateWithWhereUniqueWithoutProducao_etapaInput[]
    updateMany?: ProducaoUpdateManyWithWhereWithoutProducao_etapaInput | ProducaoUpdateManyWithWhereWithoutProducao_etapaInput[]
    deleteMany?: ProducaoScalarWhereInput | ProducaoScalarWhereInput[]
  }

  export type PecasEtapasUncheckedUpdateManyWithoutEtapaNestedInput = {
    create?: XOR<PecasEtapasCreateWithoutEtapaInput, PecasEtapasUncheckedCreateWithoutEtapaInput> | PecasEtapasCreateWithoutEtapaInput[] | PecasEtapasUncheckedCreateWithoutEtapaInput[]
    connectOrCreate?: PecasEtapasCreateOrConnectWithoutEtapaInput | PecasEtapasCreateOrConnectWithoutEtapaInput[]
    upsert?: PecasEtapasUpsertWithWhereUniqueWithoutEtapaInput | PecasEtapasUpsertWithWhereUniqueWithoutEtapaInput[]
    createMany?: PecasEtapasCreateManyEtapaInputEnvelope
    set?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    disconnect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    delete?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    connect?: PecasEtapasWhereUniqueInput | PecasEtapasWhereUniqueInput[]
    update?: PecasEtapasUpdateWithWhereUniqueWithoutEtapaInput | PecasEtapasUpdateWithWhereUniqueWithoutEtapaInput[]
    updateMany?: PecasEtapasUpdateManyWithWhereWithoutEtapaInput | PecasEtapasUpdateManyWithWhereWithoutEtapaInput[]
    deleteMany?: PecasEtapasScalarWhereInput | PecasEtapasScalarWhereInput[]
  }

  export type ProducaoUncheckedUpdateManyWithoutProducao_etapaNestedInput = {
    create?: XOR<ProducaoCreateWithoutProducao_etapaInput, ProducaoUncheckedCreateWithoutProducao_etapaInput> | ProducaoCreateWithoutProducao_etapaInput[] | ProducaoUncheckedCreateWithoutProducao_etapaInput[]
    connectOrCreate?: ProducaoCreateOrConnectWithoutProducao_etapaInput | ProducaoCreateOrConnectWithoutProducao_etapaInput[]
    upsert?: ProducaoUpsertWithWhereUniqueWithoutProducao_etapaInput | ProducaoUpsertWithWhereUniqueWithoutProducao_etapaInput[]
    createMany?: ProducaoCreateManyProducao_etapaInputEnvelope
    set?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    disconnect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    delete?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    connect?: ProducaoWhereUniqueInput | ProducaoWhereUniqueInput[]
    update?: ProducaoUpdateWithWhereUniqueWithoutProducao_etapaInput | ProducaoUpdateWithWhereUniqueWithoutProducao_etapaInput[]
    updateMany?: ProducaoUpdateManyWithWhereWithoutProducao_etapaInput | ProducaoUpdateManyWithWhereWithoutProducao_etapaInput[]
    deleteMany?: ProducaoScalarWhereInput | ProducaoScalarWhereInput[]
  }

  export type PecasOPCreateNestedOneWithoutEtapasInput = {
    create?: XOR<PecasOPCreateWithoutEtapasInput, PecasOPUncheckedCreateWithoutEtapasInput>
    connectOrCreate?: PecasOPCreateOrConnectWithoutEtapasInput
    connect?: PecasOPWhereUniqueInput
  }

  export type EtapaCreateNestedOneWithoutPecasInput = {
    create?: XOR<EtapaCreateWithoutPecasInput, EtapaUncheckedCreateWithoutPecasInput>
    connectOrCreate?: EtapaCreateOrConnectWithoutPecasInput
    connect?: EtapaWhereUniqueInput
  }

  export type PecasOPUpdateOneRequiredWithoutEtapasNestedInput = {
    create?: XOR<PecasOPCreateWithoutEtapasInput, PecasOPUncheckedCreateWithoutEtapasInput>
    connectOrCreate?: PecasOPCreateOrConnectWithoutEtapasInput
    upsert?: PecasOPUpsertWithoutEtapasInput
    connect?: PecasOPWhereUniqueInput
    update?: XOR<XOR<PecasOPUpdateToOneWithWhereWithoutEtapasInput, PecasOPUpdateWithoutEtapasInput>, PecasOPUncheckedUpdateWithoutEtapasInput>
  }

  export type EtapaUpdateOneRequiredWithoutPecasNestedInput = {
    create?: XOR<EtapaCreateWithoutPecasInput, EtapaUncheckedCreateWithoutPecasInput>
    connectOrCreate?: EtapaCreateOrConnectWithoutPecasInput
    upsert?: EtapaUpsertWithoutPecasInput
    connect?: EtapaWhereUniqueInput
    update?: XOR<XOR<EtapaUpdateToOneWithWhereWithoutPecasInput, EtapaUpdateWithoutPecasInput>, EtapaUncheckedUpdateWithoutPecasInput>
  }

  export type EstabelecimentoCreateNestedOneWithoutProducaoInput = {
    create?: XOR<EstabelecimentoCreateWithoutProducaoInput, EstabelecimentoUncheckedCreateWithoutProducaoInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutProducaoInput
    connect?: EstabelecimentoWhereUniqueInput
  }

  export type PecasOPCreateNestedOneWithoutProducao_pecaInput = {
    create?: XOR<PecasOPCreateWithoutProducao_pecaInput, PecasOPUncheckedCreateWithoutProducao_pecaInput>
    connectOrCreate?: PecasOPCreateOrConnectWithoutProducao_pecaInput
    connect?: PecasOPWhereUniqueInput
  }

  export type UsuariosCreateNestedOneWithoutProducao_funcionarioInput = {
    create?: XOR<UsuariosCreateWithoutProducao_funcionarioInput, UsuariosUncheckedCreateWithoutProducao_funcionarioInput>
    connectOrCreate?: UsuariosCreateOrConnectWithoutProducao_funcionarioInput
    connect?: UsuariosWhereUniqueInput
  }

  export type EtapaCreateNestedOneWithoutProducao_etapaInput = {
    create?: XOR<EtapaCreateWithoutProducao_etapaInput, EtapaUncheckedCreateWithoutProducao_etapaInput>
    connectOrCreate?: EtapaCreateOrConnectWithoutProducao_etapaInput
    connect?: EtapaWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type EstabelecimentoUpdateOneRequiredWithoutProducaoNestedInput = {
    create?: XOR<EstabelecimentoCreateWithoutProducaoInput, EstabelecimentoUncheckedCreateWithoutProducaoInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutProducaoInput
    upsert?: EstabelecimentoUpsertWithoutProducaoInput
    connect?: EstabelecimentoWhereUniqueInput
    update?: XOR<XOR<EstabelecimentoUpdateToOneWithWhereWithoutProducaoInput, EstabelecimentoUpdateWithoutProducaoInput>, EstabelecimentoUncheckedUpdateWithoutProducaoInput>
  }

  export type PecasOPUpdateOneRequiredWithoutProducao_pecaNestedInput = {
    create?: XOR<PecasOPCreateWithoutProducao_pecaInput, PecasOPUncheckedCreateWithoutProducao_pecaInput>
    connectOrCreate?: PecasOPCreateOrConnectWithoutProducao_pecaInput
    upsert?: PecasOPUpsertWithoutProducao_pecaInput
    connect?: PecasOPWhereUniqueInput
    update?: XOR<XOR<PecasOPUpdateToOneWithWhereWithoutProducao_pecaInput, PecasOPUpdateWithoutProducao_pecaInput>, PecasOPUncheckedUpdateWithoutProducao_pecaInput>
  }

  export type UsuariosUpdateOneRequiredWithoutProducao_funcionarioNestedInput = {
    create?: XOR<UsuariosCreateWithoutProducao_funcionarioInput, UsuariosUncheckedCreateWithoutProducao_funcionarioInput>
    connectOrCreate?: UsuariosCreateOrConnectWithoutProducao_funcionarioInput
    upsert?: UsuariosUpsertWithoutProducao_funcionarioInput
    connect?: UsuariosWhereUniqueInput
    update?: XOR<XOR<UsuariosUpdateToOneWithWhereWithoutProducao_funcionarioInput, UsuariosUpdateWithoutProducao_funcionarioInput>, UsuariosUncheckedUpdateWithoutProducao_funcionarioInput>
  }

  export type EtapaUpdateOneRequiredWithoutProducao_etapaNestedInput = {
    create?: XOR<EtapaCreateWithoutProducao_etapaInput, EtapaUncheckedCreateWithoutProducao_etapaInput>
    connectOrCreate?: EtapaCreateOrConnectWithoutProducao_etapaInput
    upsert?: EtapaUpsertWithoutProducao_etapaInput
    connect?: EtapaWhereUniqueInput
    update?: XOR<XOR<EtapaUpdateToOneWithWhereWithoutProducao_etapaInput, EtapaUpdateWithoutProducao_etapaInput>, EtapaUncheckedUpdateWithoutProducao_etapaInput>
  }

  export type EstabelecimentoCreateNestedOneWithoutEstoque_tecidosInput = {
    create?: XOR<EstabelecimentoCreateWithoutEstoque_tecidosInput, EstabelecimentoUncheckedCreateWithoutEstoque_tecidosInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutEstoque_tecidosInput
    connect?: EstabelecimentoWhereUniqueInput
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EstabelecimentoUpdateOneRequiredWithoutEstoque_tecidosNestedInput = {
    create?: XOR<EstabelecimentoCreateWithoutEstoque_tecidosInput, EstabelecimentoUncheckedCreateWithoutEstoque_tecidosInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutEstoque_tecidosInput
    upsert?: EstabelecimentoUpsertWithoutEstoque_tecidosInput
    connect?: EstabelecimentoWhereUniqueInput
    update?: XOR<XOR<EstabelecimentoUpdateToOneWithWhereWithoutEstoque_tecidosInput, EstabelecimentoUpdateWithoutEstoque_tecidosInput>, EstabelecimentoUncheckedUpdateWithoutEstoque_tecidosInput>
  }

  export type EstabelecimentoCreateNestedOneWithoutEstoque_agulhasInput = {
    create?: XOR<EstabelecimentoCreateWithoutEstoque_agulhasInput, EstabelecimentoUncheckedCreateWithoutEstoque_agulhasInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutEstoque_agulhasInput
    connect?: EstabelecimentoWhereUniqueInput
  }

  export type EstabelecimentoUpdateOneRequiredWithoutEstoque_agulhasNestedInput = {
    create?: XOR<EstabelecimentoCreateWithoutEstoque_agulhasInput, EstabelecimentoUncheckedCreateWithoutEstoque_agulhasInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutEstoque_agulhasInput
    upsert?: EstabelecimentoUpsertWithoutEstoque_agulhasInput
    connect?: EstabelecimentoWhereUniqueInput
    update?: XOR<XOR<EstabelecimentoUpdateToOneWithWhereWithoutEstoque_agulhasInput, EstabelecimentoUpdateWithoutEstoque_agulhasInput>, EstabelecimentoUncheckedUpdateWithoutEstoque_agulhasInput>
  }

  export type EstabelecimentoCreateNestedOneWithoutTarefasInput = {
    create?: XOR<EstabelecimentoCreateWithoutTarefasInput, EstabelecimentoUncheckedCreateWithoutTarefasInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutTarefasInput
    connect?: EstabelecimentoWhereUniqueInput
  }

  export type EstabelecimentoUpdateOneRequiredWithoutTarefasNestedInput = {
    create?: XOR<EstabelecimentoCreateWithoutTarefasInput, EstabelecimentoUncheckedCreateWithoutTarefasInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutTarefasInput
    upsert?: EstabelecimentoUpsertWithoutTarefasInput
    connect?: EstabelecimentoWhereUniqueInput
    update?: XOR<XOR<EstabelecimentoUpdateToOneWithWhereWithoutTarefasInput, EstabelecimentoUpdateWithoutTarefasInput>, EstabelecimentoUncheckedUpdateWithoutTarefasInput>
  }

  export type UsuariosCreateNestedOneWithoutEquipesGruposInput = {
    create?: XOR<UsuariosCreateWithoutEquipesGruposInput, UsuariosUncheckedCreateWithoutEquipesGruposInput>
    connectOrCreate?: UsuariosCreateOrConnectWithoutEquipesGruposInput
    connect?: UsuariosWhereUniqueInput
  }

  export type EstabelecimentoCreateNestedOneWithoutEquipesGruposInput = {
    create?: XOR<EstabelecimentoCreateWithoutEquipesGruposInput, EstabelecimentoUncheckedCreateWithoutEquipesGruposInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutEquipesGruposInput
    connect?: EstabelecimentoWhereUniqueInput
  }

  export type UsuariosUpdateOneRequiredWithoutEquipesGruposNestedInput = {
    create?: XOR<UsuariosCreateWithoutEquipesGruposInput, UsuariosUncheckedCreateWithoutEquipesGruposInput>
    connectOrCreate?: UsuariosCreateOrConnectWithoutEquipesGruposInput
    upsert?: UsuariosUpsertWithoutEquipesGruposInput
    connect?: UsuariosWhereUniqueInput
    update?: XOR<XOR<UsuariosUpdateToOneWithWhereWithoutEquipesGruposInput, UsuariosUpdateWithoutEquipesGruposInput>, UsuariosUncheckedUpdateWithoutEquipesGruposInput>
  }

  export type EstabelecimentoUpdateOneRequiredWithoutEquipesGruposNestedInput = {
    create?: XOR<EstabelecimentoCreateWithoutEquipesGruposInput, EstabelecimentoUncheckedCreateWithoutEquipesGruposInput>
    connectOrCreate?: EstabelecimentoCreateOrConnectWithoutEquipesGruposInput
    upsert?: EstabelecimentoUpsertWithoutEquipesGruposInput
    connect?: EstabelecimentoWhereUniqueInput
    update?: XOR<XOR<EstabelecimentoUpdateToOneWithWhereWithoutEquipesGruposInput, EstabelecimentoUpdateWithoutEquipesGruposInput>, EstabelecimentoUncheckedUpdateWithoutEquipesGruposInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type EquipesGruposCreateWithoutUsuarioInput = {
    nome: string
    descricao?: string | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutEquipesGruposInput
  }

  export type EquipesGruposUncheckedCreateWithoutUsuarioInput = {
    id?: number
    nome: string
    descricao?: string | null
    estabelecimentoCnpj: string
  }

  export type EquipesGruposCreateOrConnectWithoutUsuarioInput = {
    where: EquipesGruposWhereUniqueInput
    create: XOR<EquipesGruposCreateWithoutUsuarioInput, EquipesGruposUncheckedCreateWithoutUsuarioInput>
  }

  export type EquipesGruposCreateManyUsuarioInputEnvelope = {
    data: EquipesGruposCreateManyUsuarioInput | EquipesGruposCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type EstabelecimentoCreateWithoutUsuariosInput = {
    cnpj: string
    EquipesGrupos?: EquipesGruposCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoUncheckedCreateWithoutUsuariosInput = {
    cnpj: string
    EquipesGrupos?: EquipesGruposUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPUncheckedCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoUncheckedCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoCreateOrConnectWithoutUsuariosInput = {
    where: EstabelecimentoWhereUniqueInput
    create: XOR<EstabelecimentoCreateWithoutUsuariosInput, EstabelecimentoUncheckedCreateWithoutUsuariosInput>
  }

  export type ProducaoCreateWithoutProducao_funcionarioInput = {
    quantidade_pecas?: number | null
    data_inicio?: Date | string | null
    hora_registro?: string | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutProducaoInput
    producao_peca: PecasOPCreateNestedOneWithoutProducao_pecaInput
    producao_etapa: EtapaCreateNestedOneWithoutProducao_etapaInput
  }

  export type ProducaoUncheckedCreateWithoutProducao_funcionarioInput = {
    id_da_producao?: number
    quantidade_pecas?: number | null
    id_Estabelecimento: string
    id_da_op: number
    id_da_funcao: number
    data_inicio?: Date | string | null
    hora_registro?: string | null
  }

  export type ProducaoCreateOrConnectWithoutProducao_funcionarioInput = {
    where: ProducaoWhereUniqueInput
    create: XOR<ProducaoCreateWithoutProducao_funcionarioInput, ProducaoUncheckedCreateWithoutProducao_funcionarioInput>
  }

  export type ProducaoCreateManyProducao_funcionarioInputEnvelope = {
    data: ProducaoCreateManyProducao_funcionarioInput | ProducaoCreateManyProducao_funcionarioInput[]
    skipDuplicates?: boolean
  }

  export type EquipesGruposUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: EquipesGruposWhereUniqueInput
    update: XOR<EquipesGruposUpdateWithoutUsuarioInput, EquipesGruposUncheckedUpdateWithoutUsuarioInput>
    create: XOR<EquipesGruposCreateWithoutUsuarioInput, EquipesGruposUncheckedCreateWithoutUsuarioInput>
  }

  export type EquipesGruposUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: EquipesGruposWhereUniqueInput
    data: XOR<EquipesGruposUpdateWithoutUsuarioInput, EquipesGruposUncheckedUpdateWithoutUsuarioInput>
  }

  export type EquipesGruposUpdateManyWithWhereWithoutUsuarioInput = {
    where: EquipesGruposScalarWhereInput
    data: XOR<EquipesGruposUpdateManyMutationInput, EquipesGruposUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type EquipesGruposScalarWhereInput = {
    AND?: EquipesGruposScalarWhereInput | EquipesGruposScalarWhereInput[]
    OR?: EquipesGruposScalarWhereInput[]
    NOT?: EquipesGruposScalarWhereInput | EquipesGruposScalarWhereInput[]
    id?: IntFilter<"EquipesGrupos"> | number
    nome?: StringFilter<"EquipesGrupos"> | string
    descricao?: StringNullableFilter<"EquipesGrupos"> | string | null
    usuarioEmail?: StringFilter<"EquipesGrupos"> | string
    estabelecimentoCnpj?: StringFilter<"EquipesGrupos"> | string
  }

  export type EstabelecimentoUpsertWithoutUsuariosInput = {
    update: XOR<EstabelecimentoUpdateWithoutUsuariosInput, EstabelecimentoUncheckedUpdateWithoutUsuariosInput>
    create: XOR<EstabelecimentoCreateWithoutUsuariosInput, EstabelecimentoUncheckedCreateWithoutUsuariosInput>
    where?: EstabelecimentoWhereInput
  }

  export type EstabelecimentoUpdateToOneWithWhereWithoutUsuariosInput = {
    where?: EstabelecimentoWhereInput
    data: XOR<EstabelecimentoUpdateWithoutUsuariosInput, EstabelecimentoUncheckedUpdateWithoutUsuariosInput>
  }

  export type EstabelecimentoUpdateWithoutUsuariosInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    EquipesGrupos?: EquipesGruposUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoUncheckedUpdateWithoutUsuariosInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    EquipesGrupos?: EquipesGruposUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUncheckedUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type ProducaoUpsertWithWhereUniqueWithoutProducao_funcionarioInput = {
    where: ProducaoWhereUniqueInput
    update: XOR<ProducaoUpdateWithoutProducao_funcionarioInput, ProducaoUncheckedUpdateWithoutProducao_funcionarioInput>
    create: XOR<ProducaoCreateWithoutProducao_funcionarioInput, ProducaoUncheckedCreateWithoutProducao_funcionarioInput>
  }

  export type ProducaoUpdateWithWhereUniqueWithoutProducao_funcionarioInput = {
    where: ProducaoWhereUniqueInput
    data: XOR<ProducaoUpdateWithoutProducao_funcionarioInput, ProducaoUncheckedUpdateWithoutProducao_funcionarioInput>
  }

  export type ProducaoUpdateManyWithWhereWithoutProducao_funcionarioInput = {
    where: ProducaoScalarWhereInput
    data: XOR<ProducaoUpdateManyMutationInput, ProducaoUncheckedUpdateManyWithoutProducao_funcionarioInput>
  }

  export type ProducaoScalarWhereInput = {
    AND?: ProducaoScalarWhereInput | ProducaoScalarWhereInput[]
    OR?: ProducaoScalarWhereInput[]
    NOT?: ProducaoScalarWhereInput | ProducaoScalarWhereInput[]
    id_da_producao?: IntFilter<"Producao"> | number
    quantidade_pecas?: IntNullableFilter<"Producao"> | number | null
    id_Estabelecimento?: StringFilter<"Producao"> | string
    id_da_op?: IntFilter<"Producao"> | number
    id_funcionario?: StringFilter<"Producao"> | string
    id_da_funcao?: IntFilter<"Producao"> | number
    data_inicio?: DateTimeNullableFilter<"Producao"> | Date | string | null
    hora_registro?: StringNullableFilter<"Producao"> | string | null
  }

  export type UsuariosCreateWithoutEstabelecimentoInput = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes?: string | null
    identidade?: string | null
    cpf?: string | null
    pis?: string | null
    pix?: string | null
    notas?: string | null
    EquipesGrupos?: EquipesGruposCreateNestedManyWithoutUsuarioInput
    producao_funcionario?: ProducaoCreateNestedManyWithoutProducao_funcionarioInput
  }

  export type UsuariosUncheckedCreateWithoutEstabelecimentoInput = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes?: string | null
    identidade?: string | null
    cpf?: string | null
    pis?: string | null
    pix?: string | null
    notas?: string | null
    EquipesGrupos?: EquipesGruposUncheckedCreateNestedManyWithoutUsuarioInput
    producao_funcionario?: ProducaoUncheckedCreateNestedManyWithoutProducao_funcionarioInput
  }

  export type UsuariosCreateOrConnectWithoutEstabelecimentoInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutEstabelecimentoInput, UsuariosUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type UsuariosCreateManyEstabelecimentoInputEnvelope = {
    data: UsuariosCreateManyEstabelecimentoInput | UsuariosCreateManyEstabelecimentoInput[]
    skipDuplicates?: boolean
  }

  export type EquipesGruposCreateWithoutEstabelecimentoInput = {
    nome: string
    descricao?: string | null
    Usuario: UsuariosCreateNestedOneWithoutEquipesGruposInput
  }

  export type EquipesGruposUncheckedCreateWithoutEstabelecimentoInput = {
    id?: number
    nome: string
    descricao?: string | null
    usuarioEmail: string
  }

  export type EquipesGruposCreateOrConnectWithoutEstabelecimentoInput = {
    where: EquipesGruposWhereUniqueInput
    create: XOR<EquipesGruposCreateWithoutEstabelecimentoInput, EquipesGruposUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type EquipesGruposCreateManyEstabelecimentoInputEnvelope = {
    data: EquipesGruposCreateManyEstabelecimentoInput | EquipesGruposCreateManyEstabelecimentoInput[]
    skipDuplicates?: boolean
  }

  export type Estoque_TecidosCreateWithoutEstabelecimentoInput = {
    nome_do_tecido: string
    valor: number
    fornecedor: string
    composicao?: string | null
    largura?: number | null
    peso?: number | null
    estoque: number
    data_: Date | string
    tamanho?: number | null
    notas?: string | null
  }

  export type Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput = {
    id_do_tecido?: number
    nome_do_tecido: string
    valor: number
    fornecedor: string
    composicao?: string | null
    largura?: number | null
    peso?: number | null
    estoque: number
    data_: Date | string
    tamanho?: number | null
    notas?: string | null
  }

  export type Estoque_TecidosCreateOrConnectWithoutEstabelecimentoInput = {
    where: Estoque_TecidosWhereUniqueInput
    create: XOR<Estoque_TecidosCreateWithoutEstabelecimentoInput, Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type Estoque_TecidosCreateManyEstabelecimentoInputEnvelope = {
    data: Estoque_TecidosCreateManyEstabelecimentoInput | Estoque_TecidosCreateManyEstabelecimentoInput[]
    skipDuplicates?: boolean
  }

  export type Estoque_AgulhasCreateWithoutEstabelecimentoInput = {
    valor: number
    fornecedor?: string | null
    numeracao?: string | null
    estoque: number
    data: Date | string
    notas?: string | null
  }

  export type Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput = {
    id_da_agulha?: number
    valor: number
    fornecedor?: string | null
    numeracao?: string | null
    estoque: number
    data: Date | string
    notas?: string | null
  }

  export type Estoque_AgulhasCreateOrConnectWithoutEstabelecimentoInput = {
    where: Estoque_AgulhasWhereUniqueInput
    create: XOR<Estoque_AgulhasCreateWithoutEstabelecimentoInput, Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type Estoque_AgulhasCreateManyEstabelecimentoInputEnvelope = {
    data: Estoque_AgulhasCreateManyEstabelecimentoInput | Estoque_AgulhasCreateManyEstabelecimentoInput[]
    skipDuplicates?: boolean
  }

  export type TarefasCreateWithoutEstabelecimentoInput = {
    tarefa: string
    status: string
    data_abertura: Date | string
    data_conclusao?: Date | string | null
    notas?: string | null
  }

  export type TarefasUncheckedCreateWithoutEstabelecimentoInput = {
    id?: number
    tarefa: string
    status: string
    data_abertura: Date | string
    data_conclusao?: Date | string | null
    notas?: string | null
  }

  export type TarefasCreateOrConnectWithoutEstabelecimentoInput = {
    where: TarefasWhereUniqueInput
    create: XOR<TarefasCreateWithoutEstabelecimentoInput, TarefasUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type TarefasCreateManyEstabelecimentoInputEnvelope = {
    data: TarefasCreateManyEstabelecimentoInput | TarefasCreateManyEstabelecimentoInput[]
    skipDuplicates?: boolean
  }

  export type PecasOPCreateWithoutEstabelecimentoInput = {
    status?: string | null
    descricao?: string | null
    quantidade_pecas?: number | null
    pedido_por?: string | null
    valor_peca?: number | null
    data_do_pedido?: string | null
    data_de_entrega?: string | null
    notas?: string | null
    tempo_estimado?: number | null
    tempo_esperado?: number | null
    producao_peca?: ProducaoCreateNestedManyWithoutProducao_pecaInput
    etapas?: PecasEtapasCreateNestedManyWithoutPeca_opInput
  }

  export type PecasOPUncheckedCreateWithoutEstabelecimentoInput = {
    id_da_op?: number
    status?: string | null
    descricao?: string | null
    quantidade_pecas?: number | null
    pedido_por?: string | null
    valor_peca?: number | null
    data_do_pedido?: string | null
    data_de_entrega?: string | null
    notas?: string | null
    tempo_estimado?: number | null
    tempo_esperado?: number | null
    producao_peca?: ProducaoUncheckedCreateNestedManyWithoutProducao_pecaInput
    etapas?: PecasEtapasUncheckedCreateNestedManyWithoutPeca_opInput
  }

  export type PecasOPCreateOrConnectWithoutEstabelecimentoInput = {
    where: PecasOPWhereUniqueInput
    create: XOR<PecasOPCreateWithoutEstabelecimentoInput, PecasOPUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type PecasOPCreateManyEstabelecimentoInputEnvelope = {
    data: PecasOPCreateManyEstabelecimentoInput | PecasOPCreateManyEstabelecimentoInput[]
    skipDuplicates?: boolean
  }

  export type ProducaoCreateWithoutEstabelecimentoInput = {
    quantidade_pecas?: number | null
    data_inicio?: Date | string | null
    hora_registro?: string | null
    producao_peca: PecasOPCreateNestedOneWithoutProducao_pecaInput
    producao_funcionario: UsuariosCreateNestedOneWithoutProducao_funcionarioInput
    producao_etapa: EtapaCreateNestedOneWithoutProducao_etapaInput
  }

  export type ProducaoUncheckedCreateWithoutEstabelecimentoInput = {
    id_da_producao?: number
    quantidade_pecas?: number | null
    id_da_op: number
    id_funcionario: string
    id_da_funcao: number
    data_inicio?: Date | string | null
    hora_registro?: string | null
  }

  export type ProducaoCreateOrConnectWithoutEstabelecimentoInput = {
    where: ProducaoWhereUniqueInput
    create: XOR<ProducaoCreateWithoutEstabelecimentoInput, ProducaoUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type ProducaoCreateManyEstabelecimentoInputEnvelope = {
    data: ProducaoCreateManyEstabelecimentoInput | ProducaoCreateManyEstabelecimentoInput[]
    skipDuplicates?: boolean
  }

  export type UsuariosUpsertWithWhereUniqueWithoutEstabelecimentoInput = {
    where: UsuariosWhereUniqueInput
    update: XOR<UsuariosUpdateWithoutEstabelecimentoInput, UsuariosUncheckedUpdateWithoutEstabelecimentoInput>
    create: XOR<UsuariosCreateWithoutEstabelecimentoInput, UsuariosUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type UsuariosUpdateWithWhereUniqueWithoutEstabelecimentoInput = {
    where: UsuariosWhereUniqueInput
    data: XOR<UsuariosUpdateWithoutEstabelecimentoInput, UsuariosUncheckedUpdateWithoutEstabelecimentoInput>
  }

  export type UsuariosUpdateManyWithWhereWithoutEstabelecimentoInput = {
    where: UsuariosScalarWhereInput
    data: XOR<UsuariosUpdateManyMutationInput, UsuariosUncheckedUpdateManyWithoutEstabelecimentoInput>
  }

  export type UsuariosScalarWhereInput = {
    AND?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
    OR?: UsuariosScalarWhereInput[]
    NOT?: UsuariosScalarWhereInput | UsuariosScalarWhereInput[]
    nome?: StringFilter<"Usuarios"> | string
    email?: StringFilter<"Usuarios"> | string
    senha?: StringFilter<"Usuarios"> | string
    foto?: StringFilter<"Usuarios"> | string
    idade?: IntFilter<"Usuarios"> | number
    funcoes?: StringNullableFilter<"Usuarios"> | string | null
    identidade?: StringNullableFilter<"Usuarios"> | string | null
    cpf?: StringNullableFilter<"Usuarios"> | string | null
    pis?: StringNullableFilter<"Usuarios"> | string | null
    pix?: StringNullableFilter<"Usuarios"> | string | null
    notas?: StringNullableFilter<"Usuarios"> | string | null
    estabelecimentoCnpj?: StringFilter<"Usuarios"> | string
  }

  export type EquipesGruposUpsertWithWhereUniqueWithoutEstabelecimentoInput = {
    where: EquipesGruposWhereUniqueInput
    update: XOR<EquipesGruposUpdateWithoutEstabelecimentoInput, EquipesGruposUncheckedUpdateWithoutEstabelecimentoInput>
    create: XOR<EquipesGruposCreateWithoutEstabelecimentoInput, EquipesGruposUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type EquipesGruposUpdateWithWhereUniqueWithoutEstabelecimentoInput = {
    where: EquipesGruposWhereUniqueInput
    data: XOR<EquipesGruposUpdateWithoutEstabelecimentoInput, EquipesGruposUncheckedUpdateWithoutEstabelecimentoInput>
  }

  export type EquipesGruposUpdateManyWithWhereWithoutEstabelecimentoInput = {
    where: EquipesGruposScalarWhereInput
    data: XOR<EquipesGruposUpdateManyMutationInput, EquipesGruposUncheckedUpdateManyWithoutEstabelecimentoInput>
  }

  export type Estoque_TecidosUpsertWithWhereUniqueWithoutEstabelecimentoInput = {
    where: Estoque_TecidosWhereUniqueInput
    update: XOR<Estoque_TecidosUpdateWithoutEstabelecimentoInput, Estoque_TecidosUncheckedUpdateWithoutEstabelecimentoInput>
    create: XOR<Estoque_TecidosCreateWithoutEstabelecimentoInput, Estoque_TecidosUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type Estoque_TecidosUpdateWithWhereUniqueWithoutEstabelecimentoInput = {
    where: Estoque_TecidosWhereUniqueInput
    data: XOR<Estoque_TecidosUpdateWithoutEstabelecimentoInput, Estoque_TecidosUncheckedUpdateWithoutEstabelecimentoInput>
  }

  export type Estoque_TecidosUpdateManyWithWhereWithoutEstabelecimentoInput = {
    where: Estoque_TecidosScalarWhereInput
    data: XOR<Estoque_TecidosUpdateManyMutationInput, Estoque_TecidosUncheckedUpdateManyWithoutEstabelecimentoInput>
  }

  export type Estoque_TecidosScalarWhereInput = {
    AND?: Estoque_TecidosScalarWhereInput | Estoque_TecidosScalarWhereInput[]
    OR?: Estoque_TecidosScalarWhereInput[]
    NOT?: Estoque_TecidosScalarWhereInput | Estoque_TecidosScalarWhereInput[]
    id_do_tecido?: IntFilter<"Estoque_Tecidos"> | number
    id_Estabelecimento?: StringFilter<"Estoque_Tecidos"> | string
    nome_do_tecido?: StringFilter<"Estoque_Tecidos"> | string
    valor?: FloatFilter<"Estoque_Tecidos"> | number
    fornecedor?: StringFilter<"Estoque_Tecidos"> | string
    composicao?: StringNullableFilter<"Estoque_Tecidos"> | string | null
    largura?: FloatNullableFilter<"Estoque_Tecidos"> | number | null
    peso?: FloatNullableFilter<"Estoque_Tecidos"> | number | null
    estoque?: IntFilter<"Estoque_Tecidos"> | number
    data_?: DateTimeFilter<"Estoque_Tecidos"> | Date | string
    tamanho?: FloatNullableFilter<"Estoque_Tecidos"> | number | null
    notas?: StringNullableFilter<"Estoque_Tecidos"> | string | null
  }

  export type Estoque_AgulhasUpsertWithWhereUniqueWithoutEstabelecimentoInput = {
    where: Estoque_AgulhasWhereUniqueInput
    update: XOR<Estoque_AgulhasUpdateWithoutEstabelecimentoInput, Estoque_AgulhasUncheckedUpdateWithoutEstabelecimentoInput>
    create: XOR<Estoque_AgulhasCreateWithoutEstabelecimentoInput, Estoque_AgulhasUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type Estoque_AgulhasUpdateWithWhereUniqueWithoutEstabelecimentoInput = {
    where: Estoque_AgulhasWhereUniqueInput
    data: XOR<Estoque_AgulhasUpdateWithoutEstabelecimentoInput, Estoque_AgulhasUncheckedUpdateWithoutEstabelecimentoInput>
  }

  export type Estoque_AgulhasUpdateManyWithWhereWithoutEstabelecimentoInput = {
    where: Estoque_AgulhasScalarWhereInput
    data: XOR<Estoque_AgulhasUpdateManyMutationInput, Estoque_AgulhasUncheckedUpdateManyWithoutEstabelecimentoInput>
  }

  export type Estoque_AgulhasScalarWhereInput = {
    AND?: Estoque_AgulhasScalarWhereInput | Estoque_AgulhasScalarWhereInput[]
    OR?: Estoque_AgulhasScalarWhereInput[]
    NOT?: Estoque_AgulhasScalarWhereInput | Estoque_AgulhasScalarWhereInput[]
    id_da_agulha?: IntFilter<"Estoque_Agulhas"> | number
    id_Estabelecimento?: StringFilter<"Estoque_Agulhas"> | string
    valor?: FloatFilter<"Estoque_Agulhas"> | number
    fornecedor?: StringNullableFilter<"Estoque_Agulhas"> | string | null
    numeracao?: StringNullableFilter<"Estoque_Agulhas"> | string | null
    estoque?: IntFilter<"Estoque_Agulhas"> | number
    data?: DateTimeFilter<"Estoque_Agulhas"> | Date | string
    notas?: StringNullableFilter<"Estoque_Agulhas"> | string | null
  }

  export type TarefasUpsertWithWhereUniqueWithoutEstabelecimentoInput = {
    where: TarefasWhereUniqueInput
    update: XOR<TarefasUpdateWithoutEstabelecimentoInput, TarefasUncheckedUpdateWithoutEstabelecimentoInput>
    create: XOR<TarefasCreateWithoutEstabelecimentoInput, TarefasUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type TarefasUpdateWithWhereUniqueWithoutEstabelecimentoInput = {
    where: TarefasWhereUniqueInput
    data: XOR<TarefasUpdateWithoutEstabelecimentoInput, TarefasUncheckedUpdateWithoutEstabelecimentoInput>
  }

  export type TarefasUpdateManyWithWhereWithoutEstabelecimentoInput = {
    where: TarefasScalarWhereInput
    data: XOR<TarefasUpdateManyMutationInput, TarefasUncheckedUpdateManyWithoutEstabelecimentoInput>
  }

  export type TarefasScalarWhereInput = {
    AND?: TarefasScalarWhereInput | TarefasScalarWhereInput[]
    OR?: TarefasScalarWhereInput[]
    NOT?: TarefasScalarWhereInput | TarefasScalarWhereInput[]
    id?: IntFilter<"Tarefas"> | number
    id_Estabelecimento?: StringFilter<"Tarefas"> | string
    tarefa?: StringFilter<"Tarefas"> | string
    status?: StringFilter<"Tarefas"> | string
    data_abertura?: DateTimeFilter<"Tarefas"> | Date | string
    data_conclusao?: DateTimeNullableFilter<"Tarefas"> | Date | string | null
    notas?: StringNullableFilter<"Tarefas"> | string | null
  }

  export type PecasOPUpsertWithWhereUniqueWithoutEstabelecimentoInput = {
    where: PecasOPWhereUniqueInput
    update: XOR<PecasOPUpdateWithoutEstabelecimentoInput, PecasOPUncheckedUpdateWithoutEstabelecimentoInput>
    create: XOR<PecasOPCreateWithoutEstabelecimentoInput, PecasOPUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type PecasOPUpdateWithWhereUniqueWithoutEstabelecimentoInput = {
    where: PecasOPWhereUniqueInput
    data: XOR<PecasOPUpdateWithoutEstabelecimentoInput, PecasOPUncheckedUpdateWithoutEstabelecimentoInput>
  }

  export type PecasOPUpdateManyWithWhereWithoutEstabelecimentoInput = {
    where: PecasOPScalarWhereInput
    data: XOR<PecasOPUpdateManyMutationInput, PecasOPUncheckedUpdateManyWithoutEstabelecimentoInput>
  }

  export type PecasOPScalarWhereInput = {
    AND?: PecasOPScalarWhereInput | PecasOPScalarWhereInput[]
    OR?: PecasOPScalarWhereInput[]
    NOT?: PecasOPScalarWhereInput | PecasOPScalarWhereInput[]
    id_da_op?: IntFilter<"PecasOP"> | number
    id_Estabelecimento?: StringFilter<"PecasOP"> | string
    status?: StringNullableFilter<"PecasOP"> | string | null
    descricao?: StringNullableFilter<"PecasOP"> | string | null
    quantidade_pecas?: IntNullableFilter<"PecasOP"> | number | null
    pedido_por?: StringNullableFilter<"PecasOP"> | string | null
    valor_peca?: FloatNullableFilter<"PecasOP"> | number | null
    data_do_pedido?: StringNullableFilter<"PecasOP"> | string | null
    data_de_entrega?: StringNullableFilter<"PecasOP"> | string | null
    notas?: StringNullableFilter<"PecasOP"> | string | null
    tempo_estimado?: FloatNullableFilter<"PecasOP"> | number | null
    tempo_esperado?: FloatNullableFilter<"PecasOP"> | number | null
  }

  export type ProducaoUpsertWithWhereUniqueWithoutEstabelecimentoInput = {
    where: ProducaoWhereUniqueInput
    update: XOR<ProducaoUpdateWithoutEstabelecimentoInput, ProducaoUncheckedUpdateWithoutEstabelecimentoInput>
    create: XOR<ProducaoCreateWithoutEstabelecimentoInput, ProducaoUncheckedCreateWithoutEstabelecimentoInput>
  }

  export type ProducaoUpdateWithWhereUniqueWithoutEstabelecimentoInput = {
    where: ProducaoWhereUniqueInput
    data: XOR<ProducaoUpdateWithoutEstabelecimentoInput, ProducaoUncheckedUpdateWithoutEstabelecimentoInput>
  }

  export type ProducaoUpdateManyWithWhereWithoutEstabelecimentoInput = {
    where: ProducaoScalarWhereInput
    data: XOR<ProducaoUpdateManyMutationInput, ProducaoUncheckedUpdateManyWithoutEstabelecimentoInput>
  }

  export type EstabelecimentoCreateWithoutPecasOPInput = {
    cnpj: string
    usuarios?: UsuariosCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoUncheckedCreateWithoutPecasOPInput = {
    cnpj: string
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoUncheckedCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoCreateOrConnectWithoutPecasOPInput = {
    where: EstabelecimentoWhereUniqueInput
    create: XOR<EstabelecimentoCreateWithoutPecasOPInput, EstabelecimentoUncheckedCreateWithoutPecasOPInput>
  }

  export type ProducaoCreateWithoutProducao_pecaInput = {
    quantidade_pecas?: number | null
    data_inicio?: Date | string | null
    hora_registro?: string | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutProducaoInput
    producao_funcionario: UsuariosCreateNestedOneWithoutProducao_funcionarioInput
    producao_etapa: EtapaCreateNestedOneWithoutProducao_etapaInput
  }

  export type ProducaoUncheckedCreateWithoutProducao_pecaInput = {
    id_da_producao?: number
    quantidade_pecas?: number | null
    id_Estabelecimento: string
    id_funcionario: string
    id_da_funcao: number
    data_inicio?: Date | string | null
    hora_registro?: string | null
  }

  export type ProducaoCreateOrConnectWithoutProducao_pecaInput = {
    where: ProducaoWhereUniqueInput
    create: XOR<ProducaoCreateWithoutProducao_pecaInput, ProducaoUncheckedCreateWithoutProducao_pecaInput>
  }

  export type ProducaoCreateManyProducao_pecaInputEnvelope = {
    data: ProducaoCreateManyProducao_pecaInput | ProducaoCreateManyProducao_pecaInput[]
    skipDuplicates?: boolean
  }

  export type PecasEtapasCreateWithoutPeca_opInput = {
    etapa: EtapaCreateNestedOneWithoutPecasInput
  }

  export type PecasEtapasUncheckedCreateWithoutPeca_opInput = {
    id_da_funcao: number
  }

  export type PecasEtapasCreateOrConnectWithoutPeca_opInput = {
    where: PecasEtapasWhereUniqueInput
    create: XOR<PecasEtapasCreateWithoutPeca_opInput, PecasEtapasUncheckedCreateWithoutPeca_opInput>
  }

  export type PecasEtapasCreateManyPeca_opInputEnvelope = {
    data: PecasEtapasCreateManyPeca_opInput | PecasEtapasCreateManyPeca_opInput[]
    skipDuplicates?: boolean
  }

  export type EstabelecimentoUpsertWithoutPecasOPInput = {
    update: XOR<EstabelecimentoUpdateWithoutPecasOPInput, EstabelecimentoUncheckedUpdateWithoutPecasOPInput>
    create: XOR<EstabelecimentoCreateWithoutPecasOPInput, EstabelecimentoUncheckedCreateWithoutPecasOPInput>
    where?: EstabelecimentoWhereInput
  }

  export type EstabelecimentoUpdateToOneWithWhereWithoutPecasOPInput = {
    where?: EstabelecimentoWhereInput
    data: XOR<EstabelecimentoUpdateWithoutPecasOPInput, EstabelecimentoUncheckedUpdateWithoutPecasOPInput>
  }

  export type EstabelecimentoUpdateWithoutPecasOPInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoUncheckedUpdateWithoutPecasOPInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUncheckedUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type ProducaoUpsertWithWhereUniqueWithoutProducao_pecaInput = {
    where: ProducaoWhereUniqueInput
    update: XOR<ProducaoUpdateWithoutProducao_pecaInput, ProducaoUncheckedUpdateWithoutProducao_pecaInput>
    create: XOR<ProducaoCreateWithoutProducao_pecaInput, ProducaoUncheckedCreateWithoutProducao_pecaInput>
  }

  export type ProducaoUpdateWithWhereUniqueWithoutProducao_pecaInput = {
    where: ProducaoWhereUniqueInput
    data: XOR<ProducaoUpdateWithoutProducao_pecaInput, ProducaoUncheckedUpdateWithoutProducao_pecaInput>
  }

  export type ProducaoUpdateManyWithWhereWithoutProducao_pecaInput = {
    where: ProducaoScalarWhereInput
    data: XOR<ProducaoUpdateManyMutationInput, ProducaoUncheckedUpdateManyWithoutProducao_pecaInput>
  }

  export type PecasEtapasUpsertWithWhereUniqueWithoutPeca_opInput = {
    where: PecasEtapasWhereUniqueInput
    update: XOR<PecasEtapasUpdateWithoutPeca_opInput, PecasEtapasUncheckedUpdateWithoutPeca_opInput>
    create: XOR<PecasEtapasCreateWithoutPeca_opInput, PecasEtapasUncheckedCreateWithoutPeca_opInput>
  }

  export type PecasEtapasUpdateWithWhereUniqueWithoutPeca_opInput = {
    where: PecasEtapasWhereUniqueInput
    data: XOR<PecasEtapasUpdateWithoutPeca_opInput, PecasEtapasUncheckedUpdateWithoutPeca_opInput>
  }

  export type PecasEtapasUpdateManyWithWhereWithoutPeca_opInput = {
    where: PecasEtapasScalarWhereInput
    data: XOR<PecasEtapasUpdateManyMutationInput, PecasEtapasUncheckedUpdateManyWithoutPeca_opInput>
  }

  export type PecasEtapasScalarWhereInput = {
    AND?: PecasEtapasScalarWhereInput | PecasEtapasScalarWhereInput[]
    OR?: PecasEtapasScalarWhereInput[]
    NOT?: PecasEtapasScalarWhereInput | PecasEtapasScalarWhereInput[]
    id_da_op?: IntFilter<"PecasEtapas"> | number
    id_da_funcao?: IntFilter<"PecasEtapas"> | number
  }

  export type PecasEtapasCreateWithoutEtapaInput = {
    peca_op: PecasOPCreateNestedOneWithoutEtapasInput
  }

  export type PecasEtapasUncheckedCreateWithoutEtapaInput = {
    id_da_op: number
  }

  export type PecasEtapasCreateOrConnectWithoutEtapaInput = {
    where: PecasEtapasWhereUniqueInput
    create: XOR<PecasEtapasCreateWithoutEtapaInput, PecasEtapasUncheckedCreateWithoutEtapaInput>
  }

  export type PecasEtapasCreateManyEtapaInputEnvelope = {
    data: PecasEtapasCreateManyEtapaInput | PecasEtapasCreateManyEtapaInput[]
    skipDuplicates?: boolean
  }

  export type ProducaoCreateWithoutProducao_etapaInput = {
    quantidade_pecas?: number | null
    data_inicio?: Date | string | null
    hora_registro?: string | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutProducaoInput
    producao_peca: PecasOPCreateNestedOneWithoutProducao_pecaInput
    producao_funcionario: UsuariosCreateNestedOneWithoutProducao_funcionarioInput
  }

  export type ProducaoUncheckedCreateWithoutProducao_etapaInput = {
    id_da_producao?: number
    quantidade_pecas?: number | null
    id_Estabelecimento: string
    id_da_op: number
    id_funcionario: string
    data_inicio?: Date | string | null
    hora_registro?: string | null
  }

  export type ProducaoCreateOrConnectWithoutProducao_etapaInput = {
    where: ProducaoWhereUniqueInput
    create: XOR<ProducaoCreateWithoutProducao_etapaInput, ProducaoUncheckedCreateWithoutProducao_etapaInput>
  }

  export type ProducaoCreateManyProducao_etapaInputEnvelope = {
    data: ProducaoCreateManyProducao_etapaInput | ProducaoCreateManyProducao_etapaInput[]
    skipDuplicates?: boolean
  }

  export type PecasEtapasUpsertWithWhereUniqueWithoutEtapaInput = {
    where: PecasEtapasWhereUniqueInput
    update: XOR<PecasEtapasUpdateWithoutEtapaInput, PecasEtapasUncheckedUpdateWithoutEtapaInput>
    create: XOR<PecasEtapasCreateWithoutEtapaInput, PecasEtapasUncheckedCreateWithoutEtapaInput>
  }

  export type PecasEtapasUpdateWithWhereUniqueWithoutEtapaInput = {
    where: PecasEtapasWhereUniqueInput
    data: XOR<PecasEtapasUpdateWithoutEtapaInput, PecasEtapasUncheckedUpdateWithoutEtapaInput>
  }

  export type PecasEtapasUpdateManyWithWhereWithoutEtapaInput = {
    where: PecasEtapasScalarWhereInput
    data: XOR<PecasEtapasUpdateManyMutationInput, PecasEtapasUncheckedUpdateManyWithoutEtapaInput>
  }

  export type ProducaoUpsertWithWhereUniqueWithoutProducao_etapaInput = {
    where: ProducaoWhereUniqueInput
    update: XOR<ProducaoUpdateWithoutProducao_etapaInput, ProducaoUncheckedUpdateWithoutProducao_etapaInput>
    create: XOR<ProducaoCreateWithoutProducao_etapaInput, ProducaoUncheckedCreateWithoutProducao_etapaInput>
  }

  export type ProducaoUpdateWithWhereUniqueWithoutProducao_etapaInput = {
    where: ProducaoWhereUniqueInput
    data: XOR<ProducaoUpdateWithoutProducao_etapaInput, ProducaoUncheckedUpdateWithoutProducao_etapaInput>
  }

  export type ProducaoUpdateManyWithWhereWithoutProducao_etapaInput = {
    where: ProducaoScalarWhereInput
    data: XOR<ProducaoUpdateManyMutationInput, ProducaoUncheckedUpdateManyWithoutProducao_etapaInput>
  }

  export type PecasOPCreateWithoutEtapasInput = {
    status?: string | null
    descricao?: string | null
    quantidade_pecas?: number | null
    pedido_por?: string | null
    valor_peca?: number | null
    data_do_pedido?: string | null
    data_de_entrega?: string | null
    notas?: string | null
    tempo_estimado?: number | null
    tempo_esperado?: number | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutPecasOPInput
    producao_peca?: ProducaoCreateNestedManyWithoutProducao_pecaInput
  }

  export type PecasOPUncheckedCreateWithoutEtapasInput = {
    id_da_op?: number
    id_Estabelecimento: string
    status?: string | null
    descricao?: string | null
    quantidade_pecas?: number | null
    pedido_por?: string | null
    valor_peca?: number | null
    data_do_pedido?: string | null
    data_de_entrega?: string | null
    notas?: string | null
    tempo_estimado?: number | null
    tempo_esperado?: number | null
    producao_peca?: ProducaoUncheckedCreateNestedManyWithoutProducao_pecaInput
  }

  export type PecasOPCreateOrConnectWithoutEtapasInput = {
    where: PecasOPWhereUniqueInput
    create: XOR<PecasOPCreateWithoutEtapasInput, PecasOPUncheckedCreateWithoutEtapasInput>
  }

  export type EtapaCreateWithoutPecasInput = {
    descricao: string
    producao_etapa?: ProducaoCreateNestedManyWithoutProducao_etapaInput
  }

  export type EtapaUncheckedCreateWithoutPecasInput = {
    id_da_funcao?: number
    descricao: string
    producao_etapa?: ProducaoUncheckedCreateNestedManyWithoutProducao_etapaInput
  }

  export type EtapaCreateOrConnectWithoutPecasInput = {
    where: EtapaWhereUniqueInput
    create: XOR<EtapaCreateWithoutPecasInput, EtapaUncheckedCreateWithoutPecasInput>
  }

  export type PecasOPUpsertWithoutEtapasInput = {
    update: XOR<PecasOPUpdateWithoutEtapasInput, PecasOPUncheckedUpdateWithoutEtapasInput>
    create: XOR<PecasOPCreateWithoutEtapasInput, PecasOPUncheckedCreateWithoutEtapasInput>
    where?: PecasOPWhereInput
  }

  export type PecasOPUpdateToOneWithWhereWithoutEtapasInput = {
    where?: PecasOPWhereInput
    data: XOR<PecasOPUpdateWithoutEtapasInput, PecasOPUncheckedUpdateWithoutEtapasInput>
  }

  export type PecasOPUpdateWithoutEtapasInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutPecasOPNestedInput
    producao_peca?: ProducaoUpdateManyWithoutProducao_pecaNestedInput
  }

  export type PecasOPUncheckedUpdateWithoutEtapasInput = {
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
    producao_peca?: ProducaoUncheckedUpdateManyWithoutProducao_pecaNestedInput
  }

  export type EtapaUpsertWithoutPecasInput = {
    update: XOR<EtapaUpdateWithoutPecasInput, EtapaUncheckedUpdateWithoutPecasInput>
    create: XOR<EtapaCreateWithoutPecasInput, EtapaUncheckedCreateWithoutPecasInput>
    where?: EtapaWhereInput
  }

  export type EtapaUpdateToOneWithWhereWithoutPecasInput = {
    where?: EtapaWhereInput
    data: XOR<EtapaUpdateWithoutPecasInput, EtapaUncheckedUpdateWithoutPecasInput>
  }

  export type EtapaUpdateWithoutPecasInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    producao_etapa?: ProducaoUpdateManyWithoutProducao_etapaNestedInput
  }

  export type EtapaUncheckedUpdateWithoutPecasInput = {
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    producao_etapa?: ProducaoUncheckedUpdateManyWithoutProducao_etapaNestedInput
  }

  export type EstabelecimentoCreateWithoutProducaoInput = {
    cnpj: string
    usuarios?: UsuariosCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoUncheckedCreateWithoutProducaoInput = {
    cnpj: string
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPUncheckedCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoCreateOrConnectWithoutProducaoInput = {
    where: EstabelecimentoWhereUniqueInput
    create: XOR<EstabelecimentoCreateWithoutProducaoInput, EstabelecimentoUncheckedCreateWithoutProducaoInput>
  }

  export type PecasOPCreateWithoutProducao_pecaInput = {
    status?: string | null
    descricao?: string | null
    quantidade_pecas?: number | null
    pedido_por?: string | null
    valor_peca?: number | null
    data_do_pedido?: string | null
    data_de_entrega?: string | null
    notas?: string | null
    tempo_estimado?: number | null
    tempo_esperado?: number | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutPecasOPInput
    etapas?: PecasEtapasCreateNestedManyWithoutPeca_opInput
  }

  export type PecasOPUncheckedCreateWithoutProducao_pecaInput = {
    id_da_op?: number
    id_Estabelecimento: string
    status?: string | null
    descricao?: string | null
    quantidade_pecas?: number | null
    pedido_por?: string | null
    valor_peca?: number | null
    data_do_pedido?: string | null
    data_de_entrega?: string | null
    notas?: string | null
    tempo_estimado?: number | null
    tempo_esperado?: number | null
    etapas?: PecasEtapasUncheckedCreateNestedManyWithoutPeca_opInput
  }

  export type PecasOPCreateOrConnectWithoutProducao_pecaInput = {
    where: PecasOPWhereUniqueInput
    create: XOR<PecasOPCreateWithoutProducao_pecaInput, PecasOPUncheckedCreateWithoutProducao_pecaInput>
  }

  export type UsuariosCreateWithoutProducao_funcionarioInput = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes?: string | null
    identidade?: string | null
    cpf?: string | null
    pis?: string | null
    pix?: string | null
    notas?: string | null
    EquipesGrupos?: EquipesGruposCreateNestedManyWithoutUsuarioInput
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutUsuariosInput
  }

  export type UsuariosUncheckedCreateWithoutProducao_funcionarioInput = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes?: string | null
    identidade?: string | null
    cpf?: string | null
    pis?: string | null
    pix?: string | null
    notas?: string | null
    estabelecimentoCnpj: string
    EquipesGrupos?: EquipesGruposUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type UsuariosCreateOrConnectWithoutProducao_funcionarioInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutProducao_funcionarioInput, UsuariosUncheckedCreateWithoutProducao_funcionarioInput>
  }

  export type EtapaCreateWithoutProducao_etapaInput = {
    descricao: string
    pecas?: PecasEtapasCreateNestedManyWithoutEtapaInput
  }

  export type EtapaUncheckedCreateWithoutProducao_etapaInput = {
    id_da_funcao?: number
    descricao: string
    pecas?: PecasEtapasUncheckedCreateNestedManyWithoutEtapaInput
  }

  export type EtapaCreateOrConnectWithoutProducao_etapaInput = {
    where: EtapaWhereUniqueInput
    create: XOR<EtapaCreateWithoutProducao_etapaInput, EtapaUncheckedCreateWithoutProducao_etapaInput>
  }

  export type EstabelecimentoUpsertWithoutProducaoInput = {
    update: XOR<EstabelecimentoUpdateWithoutProducaoInput, EstabelecimentoUncheckedUpdateWithoutProducaoInput>
    create: XOR<EstabelecimentoCreateWithoutProducaoInput, EstabelecimentoUncheckedCreateWithoutProducaoInput>
    where?: EstabelecimentoWhereInput
  }

  export type EstabelecimentoUpdateToOneWithWhereWithoutProducaoInput = {
    where?: EstabelecimentoWhereInput
    data: XOR<EstabelecimentoUpdateWithoutProducaoInput, EstabelecimentoUncheckedUpdateWithoutProducaoInput>
  }

  export type EstabelecimentoUpdateWithoutProducaoInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoUncheckedUpdateWithoutProducaoInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUncheckedUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type PecasOPUpsertWithoutProducao_pecaInput = {
    update: XOR<PecasOPUpdateWithoutProducao_pecaInput, PecasOPUncheckedUpdateWithoutProducao_pecaInput>
    create: XOR<PecasOPCreateWithoutProducao_pecaInput, PecasOPUncheckedCreateWithoutProducao_pecaInput>
    where?: PecasOPWhereInput
  }

  export type PecasOPUpdateToOneWithWhereWithoutProducao_pecaInput = {
    where?: PecasOPWhereInput
    data: XOR<PecasOPUpdateWithoutProducao_pecaInput, PecasOPUncheckedUpdateWithoutProducao_pecaInput>
  }

  export type PecasOPUpdateWithoutProducao_pecaInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutPecasOPNestedInput
    etapas?: PecasEtapasUpdateManyWithoutPeca_opNestedInput
  }

  export type PecasOPUncheckedUpdateWithoutProducao_pecaInput = {
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
    etapas?: PecasEtapasUncheckedUpdateManyWithoutPeca_opNestedInput
  }

  export type UsuariosUpsertWithoutProducao_funcionarioInput = {
    update: XOR<UsuariosUpdateWithoutProducao_funcionarioInput, UsuariosUncheckedUpdateWithoutProducao_funcionarioInput>
    create: XOR<UsuariosCreateWithoutProducao_funcionarioInput, UsuariosUncheckedCreateWithoutProducao_funcionarioInput>
    where?: UsuariosWhereInput
  }

  export type UsuariosUpdateToOneWithWhereWithoutProducao_funcionarioInput = {
    where?: UsuariosWhereInput
    data: XOR<UsuariosUpdateWithoutProducao_funcionarioInput, UsuariosUncheckedUpdateWithoutProducao_funcionarioInput>
  }

  export type UsuariosUpdateWithoutProducao_funcionarioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    EquipesGrupos?: EquipesGruposUpdateManyWithoutUsuarioNestedInput
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutUsuariosNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutProducao_funcionarioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoCnpj?: StringFieldUpdateOperationsInput | string
    EquipesGrupos?: EquipesGruposUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type EtapaUpsertWithoutProducao_etapaInput = {
    update: XOR<EtapaUpdateWithoutProducao_etapaInput, EtapaUncheckedUpdateWithoutProducao_etapaInput>
    create: XOR<EtapaCreateWithoutProducao_etapaInput, EtapaUncheckedCreateWithoutProducao_etapaInput>
    where?: EtapaWhereInput
  }

  export type EtapaUpdateToOneWithWhereWithoutProducao_etapaInput = {
    where?: EtapaWhereInput
    data: XOR<EtapaUpdateWithoutProducao_etapaInput, EtapaUncheckedUpdateWithoutProducao_etapaInput>
  }

  export type EtapaUpdateWithoutProducao_etapaInput = {
    descricao?: StringFieldUpdateOperationsInput | string
    pecas?: PecasEtapasUpdateManyWithoutEtapaNestedInput
  }

  export type EtapaUncheckedUpdateWithoutProducao_etapaInput = {
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    descricao?: StringFieldUpdateOperationsInput | string
    pecas?: PecasEtapasUncheckedUpdateManyWithoutEtapaNestedInput
  }

  export type EstabelecimentoCreateWithoutEstoque_tecidosInput = {
    cnpj: string
    usuarios?: UsuariosCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoUncheckedCreateWithoutEstoque_tecidosInput = {
    cnpj: string
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPUncheckedCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoUncheckedCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoCreateOrConnectWithoutEstoque_tecidosInput = {
    where: EstabelecimentoWhereUniqueInput
    create: XOR<EstabelecimentoCreateWithoutEstoque_tecidosInput, EstabelecimentoUncheckedCreateWithoutEstoque_tecidosInput>
  }

  export type EstabelecimentoUpsertWithoutEstoque_tecidosInput = {
    update: XOR<EstabelecimentoUpdateWithoutEstoque_tecidosInput, EstabelecimentoUncheckedUpdateWithoutEstoque_tecidosInput>
    create: XOR<EstabelecimentoCreateWithoutEstoque_tecidosInput, EstabelecimentoUncheckedCreateWithoutEstoque_tecidosInput>
    where?: EstabelecimentoWhereInput
  }

  export type EstabelecimentoUpdateToOneWithWhereWithoutEstoque_tecidosInput = {
    where?: EstabelecimentoWhereInput
    data: XOR<EstabelecimentoUpdateWithoutEstoque_tecidosInput, EstabelecimentoUncheckedUpdateWithoutEstoque_tecidosInput>
  }

  export type EstabelecimentoUpdateWithoutEstoque_tecidosInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoUncheckedUpdateWithoutEstoque_tecidosInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUncheckedUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoCreateWithoutEstoque_agulhasInput = {
    cnpj: string
    usuarios?: UsuariosCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoUncheckedCreateWithoutEstoque_agulhasInput = {
    cnpj: string
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPUncheckedCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoUncheckedCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoCreateOrConnectWithoutEstoque_agulhasInput = {
    where: EstabelecimentoWhereUniqueInput
    create: XOR<EstabelecimentoCreateWithoutEstoque_agulhasInput, EstabelecimentoUncheckedCreateWithoutEstoque_agulhasInput>
  }

  export type EstabelecimentoUpsertWithoutEstoque_agulhasInput = {
    update: XOR<EstabelecimentoUpdateWithoutEstoque_agulhasInput, EstabelecimentoUncheckedUpdateWithoutEstoque_agulhasInput>
    create: XOR<EstabelecimentoCreateWithoutEstoque_agulhasInput, EstabelecimentoUncheckedCreateWithoutEstoque_agulhasInput>
    where?: EstabelecimentoWhereInput
  }

  export type EstabelecimentoUpdateToOneWithWhereWithoutEstoque_agulhasInput = {
    where?: EstabelecimentoWhereInput
    data: XOR<EstabelecimentoUpdateWithoutEstoque_agulhasInput, EstabelecimentoUncheckedUpdateWithoutEstoque_agulhasInput>
  }

  export type EstabelecimentoUpdateWithoutEstoque_agulhasInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoUncheckedUpdateWithoutEstoque_agulhasInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUncheckedUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoCreateWithoutTarefasInput = {
    cnpj: string
    usuarios?: UsuariosCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoUncheckedCreateWithoutTarefasInput = {
    cnpj: string
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    EquipesGrupos?: EquipesGruposUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPUncheckedCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoUncheckedCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoCreateOrConnectWithoutTarefasInput = {
    where: EstabelecimentoWhereUniqueInput
    create: XOR<EstabelecimentoCreateWithoutTarefasInput, EstabelecimentoUncheckedCreateWithoutTarefasInput>
  }

  export type EstabelecimentoUpsertWithoutTarefasInput = {
    update: XOR<EstabelecimentoUpdateWithoutTarefasInput, EstabelecimentoUncheckedUpdateWithoutTarefasInput>
    create: XOR<EstabelecimentoCreateWithoutTarefasInput, EstabelecimentoUncheckedCreateWithoutTarefasInput>
    where?: EstabelecimentoWhereInput
  }

  export type EstabelecimentoUpdateToOneWithWhereWithoutTarefasInput = {
    where?: EstabelecimentoWhereInput
    data: XOR<EstabelecimentoUpdateWithoutTarefasInput, EstabelecimentoUncheckedUpdateWithoutTarefasInput>
  }

  export type EstabelecimentoUpdateWithoutTarefasInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoUncheckedUpdateWithoutTarefasInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    EquipesGrupos?: EquipesGruposUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUncheckedUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type UsuariosCreateWithoutEquipesGruposInput = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes?: string | null
    identidade?: string | null
    cpf?: string | null
    pis?: string | null
    pix?: string | null
    notas?: string | null
    Estabelecimento: EstabelecimentoCreateNestedOneWithoutUsuariosInput
    producao_funcionario?: ProducaoCreateNestedManyWithoutProducao_funcionarioInput
  }

  export type UsuariosUncheckedCreateWithoutEquipesGruposInput = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes?: string | null
    identidade?: string | null
    cpf?: string | null
    pis?: string | null
    pix?: string | null
    notas?: string | null
    estabelecimentoCnpj: string
    producao_funcionario?: ProducaoUncheckedCreateNestedManyWithoutProducao_funcionarioInput
  }

  export type UsuariosCreateOrConnectWithoutEquipesGruposInput = {
    where: UsuariosWhereUniqueInput
    create: XOR<UsuariosCreateWithoutEquipesGruposInput, UsuariosUncheckedCreateWithoutEquipesGruposInput>
  }

  export type EstabelecimentoCreateWithoutEquipesGruposInput = {
    cnpj: string
    usuarios?: UsuariosCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoUncheckedCreateWithoutEquipesGruposInput = {
    cnpj: string
    usuarios?: UsuariosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_tecidos?: Estoque_TecidosUncheckedCreateNestedManyWithoutEstabelecimentoInput
    estoque_agulhas?: Estoque_AgulhasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    tarefas?: TarefasUncheckedCreateNestedManyWithoutEstabelecimentoInput
    PecasOP?: PecasOPUncheckedCreateNestedManyWithoutEstabelecimentoInput
    Producao?: ProducaoUncheckedCreateNestedManyWithoutEstabelecimentoInput
  }

  export type EstabelecimentoCreateOrConnectWithoutEquipesGruposInput = {
    where: EstabelecimentoWhereUniqueInput
    create: XOR<EstabelecimentoCreateWithoutEquipesGruposInput, EstabelecimentoUncheckedCreateWithoutEquipesGruposInput>
  }

  export type UsuariosUpsertWithoutEquipesGruposInput = {
    update: XOR<UsuariosUpdateWithoutEquipesGruposInput, UsuariosUncheckedUpdateWithoutEquipesGruposInput>
    create: XOR<UsuariosCreateWithoutEquipesGruposInput, UsuariosUncheckedCreateWithoutEquipesGruposInput>
    where?: UsuariosWhereInput
  }

  export type UsuariosUpdateToOneWithWhereWithoutEquipesGruposInput = {
    where?: UsuariosWhereInput
    data: XOR<UsuariosUpdateWithoutEquipesGruposInput, UsuariosUncheckedUpdateWithoutEquipesGruposInput>
  }

  export type UsuariosUpdateWithoutEquipesGruposInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutUsuariosNestedInput
    producao_funcionario?: ProducaoUpdateManyWithoutProducao_funcionarioNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutEquipesGruposInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoCnpj?: StringFieldUpdateOperationsInput | string
    producao_funcionario?: ProducaoUncheckedUpdateManyWithoutProducao_funcionarioNestedInput
  }

  export type EstabelecimentoUpsertWithoutEquipesGruposInput = {
    update: XOR<EstabelecimentoUpdateWithoutEquipesGruposInput, EstabelecimentoUncheckedUpdateWithoutEquipesGruposInput>
    create: XOR<EstabelecimentoCreateWithoutEquipesGruposInput, EstabelecimentoUncheckedCreateWithoutEquipesGruposInput>
    where?: EstabelecimentoWhereInput
  }

  export type EstabelecimentoUpdateToOneWithWhereWithoutEquipesGruposInput = {
    where?: EstabelecimentoWhereInput
    data: XOR<EstabelecimentoUpdateWithoutEquipesGruposInput, EstabelecimentoUncheckedUpdateWithoutEquipesGruposInput>
  }

  export type EstabelecimentoUpdateWithoutEquipesGruposInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EstabelecimentoUncheckedUpdateWithoutEquipesGruposInput = {
    cnpj?: StringFieldUpdateOperationsInput | string
    usuarios?: UsuariosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_tecidos?: Estoque_TecidosUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    estoque_agulhas?: Estoque_AgulhasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    tarefas?: TarefasUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    PecasOP?: PecasOPUncheckedUpdateManyWithoutEstabelecimentoNestedInput
    Producao?: ProducaoUncheckedUpdateManyWithoutEstabelecimentoNestedInput
  }

  export type EquipesGruposCreateManyUsuarioInput = {
    id?: number
    nome: string
    descricao?: string | null
    estabelecimentoCnpj: string
  }

  export type ProducaoCreateManyProducao_funcionarioInput = {
    id_da_producao?: number
    quantidade_pecas?: number | null
    id_Estabelecimento: string
    id_da_op: number
    id_da_funcao: number
    data_inicio?: Date | string | null
    hora_registro?: string | null
  }

  export type EquipesGruposUpdateWithoutUsuarioInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutEquipesGruposNestedInput
  }

  export type EquipesGruposUncheckedUpdateWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoCnpj?: StringFieldUpdateOperationsInput | string
  }

  export type EquipesGruposUncheckedUpdateManyWithoutUsuarioInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    estabelecimentoCnpj?: StringFieldUpdateOperationsInput | string
  }

  export type ProducaoUpdateWithoutProducao_funcionarioInput = {
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutProducaoNestedInput
    producao_peca?: PecasOPUpdateOneRequiredWithoutProducao_pecaNestedInput
    producao_etapa?: EtapaUpdateOneRequiredWithoutProducao_etapaNestedInput
  }

  export type ProducaoUncheckedUpdateWithoutProducao_funcionarioInput = {
    id_da_producao?: IntFieldUpdateOperationsInput | number
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProducaoUncheckedUpdateManyWithoutProducao_funcionarioInput = {
    id_da_producao?: IntFieldUpdateOperationsInput | number
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UsuariosCreateManyEstabelecimentoInput = {
    nome: string
    email: string
    senha: string
    foto: string
    idade: number
    funcoes?: string | null
    identidade?: string | null
    cpf?: string | null
    pis?: string | null
    pix?: string | null
    notas?: string | null
  }

  export type EquipesGruposCreateManyEstabelecimentoInput = {
    id?: number
    nome: string
    descricao?: string | null
    usuarioEmail: string
  }

  export type Estoque_TecidosCreateManyEstabelecimentoInput = {
    id_do_tecido?: number
    nome_do_tecido: string
    valor: number
    fornecedor: string
    composicao?: string | null
    largura?: number | null
    peso?: number | null
    estoque: number
    data_: Date | string
    tamanho?: number | null
    notas?: string | null
  }

  export type Estoque_AgulhasCreateManyEstabelecimentoInput = {
    id_da_agulha?: number
    valor: number
    fornecedor?: string | null
    numeracao?: string | null
    estoque: number
    data: Date | string
    notas?: string | null
  }

  export type TarefasCreateManyEstabelecimentoInput = {
    id?: number
    tarefa: string
    status: string
    data_abertura: Date | string
    data_conclusao?: Date | string | null
    notas?: string | null
  }

  export type PecasOPCreateManyEstabelecimentoInput = {
    id_da_op?: number
    status?: string | null
    descricao?: string | null
    quantidade_pecas?: number | null
    pedido_por?: string | null
    valor_peca?: number | null
    data_do_pedido?: string | null
    data_de_entrega?: string | null
    notas?: string | null
    tempo_estimado?: number | null
    tempo_esperado?: number | null
  }

  export type ProducaoCreateManyEstabelecimentoInput = {
    id_da_producao?: number
    quantidade_pecas?: number | null
    id_da_op: number
    id_funcionario: string
    id_da_funcao: number
    data_inicio?: Date | string | null
    hora_registro?: string | null
  }

  export type UsuariosUpdateWithoutEstabelecimentoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    EquipesGrupos?: EquipesGruposUpdateManyWithoutUsuarioNestedInput
    producao_funcionario?: ProducaoUpdateManyWithoutProducao_funcionarioNestedInput
  }

  export type UsuariosUncheckedUpdateWithoutEstabelecimentoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    EquipesGrupos?: EquipesGruposUncheckedUpdateManyWithoutUsuarioNestedInput
    producao_funcionario?: ProducaoUncheckedUpdateManyWithoutProducao_funcionarioNestedInput
  }

  export type UsuariosUncheckedUpdateManyWithoutEstabelecimentoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    senha?: StringFieldUpdateOperationsInput | string
    foto?: StringFieldUpdateOperationsInput | string
    idade?: IntFieldUpdateOperationsInput | number
    funcoes?: NullableStringFieldUpdateOperationsInput | string | null
    identidade?: NullableStringFieldUpdateOperationsInput | string | null
    cpf?: NullableStringFieldUpdateOperationsInput | string | null
    pis?: NullableStringFieldUpdateOperationsInput | string | null
    pix?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EquipesGruposUpdateWithoutEstabelecimentoInput = {
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    Usuario?: UsuariosUpdateOneRequiredWithoutEquipesGruposNestedInput
  }

  export type EquipesGruposUncheckedUpdateWithoutEstabelecimentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioEmail?: StringFieldUpdateOperationsInput | string
  }

  export type EquipesGruposUncheckedUpdateManyWithoutEstabelecimentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    nome?: StringFieldUpdateOperationsInput | string
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    usuarioEmail?: StringFieldUpdateOperationsInput | string
  }

  export type Estoque_TecidosUpdateWithoutEstabelecimentoInput = {
    nome_do_tecido?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: StringFieldUpdateOperationsInput | string
    composicao?: NullableStringFieldUpdateOperationsInput | string | null
    largura?: NullableFloatFieldUpdateOperationsInput | number | null
    peso?: NullableFloatFieldUpdateOperationsInput | number | null
    estoque?: IntFieldUpdateOperationsInput | number
    data_?: DateTimeFieldUpdateOperationsInput | Date | string
    tamanho?: NullableFloatFieldUpdateOperationsInput | number | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_TecidosUncheckedUpdateWithoutEstabelecimentoInput = {
    id_do_tecido?: IntFieldUpdateOperationsInput | number
    nome_do_tecido?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: StringFieldUpdateOperationsInput | string
    composicao?: NullableStringFieldUpdateOperationsInput | string | null
    largura?: NullableFloatFieldUpdateOperationsInput | number | null
    peso?: NullableFloatFieldUpdateOperationsInput | number | null
    estoque?: IntFieldUpdateOperationsInput | number
    data_?: DateTimeFieldUpdateOperationsInput | Date | string
    tamanho?: NullableFloatFieldUpdateOperationsInput | number | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_TecidosUncheckedUpdateManyWithoutEstabelecimentoInput = {
    id_do_tecido?: IntFieldUpdateOperationsInput | number
    nome_do_tecido?: StringFieldUpdateOperationsInput | string
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: StringFieldUpdateOperationsInput | string
    composicao?: NullableStringFieldUpdateOperationsInput | string | null
    largura?: NullableFloatFieldUpdateOperationsInput | number | null
    peso?: NullableFloatFieldUpdateOperationsInput | number | null
    estoque?: IntFieldUpdateOperationsInput | number
    data_?: DateTimeFieldUpdateOperationsInput | Date | string
    tamanho?: NullableFloatFieldUpdateOperationsInput | number | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_AgulhasUpdateWithoutEstabelecimentoInput = {
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: NullableStringFieldUpdateOperationsInput | string | null
    numeracao?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_AgulhasUncheckedUpdateWithoutEstabelecimentoInput = {
    id_da_agulha?: IntFieldUpdateOperationsInput | number
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: NullableStringFieldUpdateOperationsInput | string | null
    numeracao?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type Estoque_AgulhasUncheckedUpdateManyWithoutEstabelecimentoInput = {
    id_da_agulha?: IntFieldUpdateOperationsInput | number
    valor?: FloatFieldUpdateOperationsInput | number
    fornecedor?: NullableStringFieldUpdateOperationsInput | string | null
    numeracao?: NullableStringFieldUpdateOperationsInput | string | null
    estoque?: IntFieldUpdateOperationsInput | number
    data?: DateTimeFieldUpdateOperationsInput | Date | string
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TarefasUpdateWithoutEstabelecimentoInput = {
    tarefa?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    data_abertura?: DateTimeFieldUpdateOperationsInput | Date | string
    data_conclusao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TarefasUncheckedUpdateWithoutEstabelecimentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    tarefa?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    data_abertura?: DateTimeFieldUpdateOperationsInput | Date | string
    data_conclusao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type TarefasUncheckedUpdateManyWithoutEstabelecimentoInput = {
    id?: IntFieldUpdateOperationsInput | number
    tarefa?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    data_abertura?: DateTimeFieldUpdateOperationsInput | Date | string
    data_conclusao?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PecasOPUpdateWithoutEstabelecimentoInput = {
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
    producao_peca?: ProducaoUpdateManyWithoutProducao_pecaNestedInput
    etapas?: PecasEtapasUpdateManyWithoutPeca_opNestedInput
  }

  export type PecasOPUncheckedUpdateWithoutEstabelecimentoInput = {
    id_da_op?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
    producao_peca?: ProducaoUncheckedUpdateManyWithoutProducao_pecaNestedInput
    etapas?: PecasEtapasUncheckedUpdateManyWithoutPeca_opNestedInput
  }

  export type PecasOPUncheckedUpdateManyWithoutEstabelecimentoInput = {
    id_da_op?: IntFieldUpdateOperationsInput | number
    status?: NullableStringFieldUpdateOperationsInput | string | null
    descricao?: NullableStringFieldUpdateOperationsInput | string | null
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    pedido_por?: NullableStringFieldUpdateOperationsInput | string | null
    valor_peca?: NullableFloatFieldUpdateOperationsInput | number | null
    data_do_pedido?: NullableStringFieldUpdateOperationsInput | string | null
    data_de_entrega?: NullableStringFieldUpdateOperationsInput | string | null
    notas?: NullableStringFieldUpdateOperationsInput | string | null
    tempo_estimado?: NullableFloatFieldUpdateOperationsInput | number | null
    tempo_esperado?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ProducaoUpdateWithoutEstabelecimentoInput = {
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
    producao_peca?: PecasOPUpdateOneRequiredWithoutProducao_pecaNestedInput
    producao_funcionario?: UsuariosUpdateOneRequiredWithoutProducao_funcionarioNestedInput
    producao_etapa?: EtapaUpdateOneRequiredWithoutProducao_etapaNestedInput
  }

  export type ProducaoUncheckedUpdateWithoutEstabelecimentoInput = {
    id_da_producao?: IntFieldUpdateOperationsInput | number
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_funcionario?: StringFieldUpdateOperationsInput | string
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProducaoUncheckedUpdateManyWithoutEstabelecimentoInput = {
    id_da_producao?: IntFieldUpdateOperationsInput | number
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_funcionario?: StringFieldUpdateOperationsInput | string
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProducaoCreateManyProducao_pecaInput = {
    id_da_producao?: number
    quantidade_pecas?: number | null
    id_Estabelecimento: string
    id_funcionario: string
    id_da_funcao: number
    data_inicio?: Date | string | null
    hora_registro?: string | null
  }

  export type PecasEtapasCreateManyPeca_opInput = {
    id_da_funcao: number
  }

  export type ProducaoUpdateWithoutProducao_pecaInput = {
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutProducaoNestedInput
    producao_funcionario?: UsuariosUpdateOneRequiredWithoutProducao_funcionarioNestedInput
    producao_etapa?: EtapaUpdateOneRequiredWithoutProducao_etapaNestedInput
  }

  export type ProducaoUncheckedUpdateWithoutProducao_pecaInput = {
    id_da_producao?: IntFieldUpdateOperationsInput | number
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    id_funcionario?: StringFieldUpdateOperationsInput | string
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProducaoUncheckedUpdateManyWithoutProducao_pecaInput = {
    id_da_producao?: IntFieldUpdateOperationsInput | number
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    id_funcionario?: StringFieldUpdateOperationsInput | string
    id_da_funcao?: IntFieldUpdateOperationsInput | number
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PecasEtapasUpdateWithoutPeca_opInput = {
    etapa?: EtapaUpdateOneRequiredWithoutPecasNestedInput
  }

  export type PecasEtapasUncheckedUpdateWithoutPeca_opInput = {
    id_da_funcao?: IntFieldUpdateOperationsInput | number
  }

  export type PecasEtapasUncheckedUpdateManyWithoutPeca_opInput = {
    id_da_funcao?: IntFieldUpdateOperationsInput | number
  }

  export type PecasEtapasCreateManyEtapaInput = {
    id_da_op: number
  }

  export type ProducaoCreateManyProducao_etapaInput = {
    id_da_producao?: number
    quantidade_pecas?: number | null
    id_Estabelecimento: string
    id_da_op: number
    id_funcionario: string
    data_inicio?: Date | string | null
    hora_registro?: string | null
  }

  export type PecasEtapasUpdateWithoutEtapaInput = {
    peca_op?: PecasOPUpdateOneRequiredWithoutEtapasNestedInput
  }

  export type PecasEtapasUncheckedUpdateWithoutEtapaInput = {
    id_da_op?: IntFieldUpdateOperationsInput | number
  }

  export type PecasEtapasUncheckedUpdateManyWithoutEtapaInput = {
    id_da_op?: IntFieldUpdateOperationsInput | number
  }

  export type ProducaoUpdateWithoutProducao_etapaInput = {
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
    Estabelecimento?: EstabelecimentoUpdateOneRequiredWithoutProducaoNestedInput
    producao_peca?: PecasOPUpdateOneRequiredWithoutProducao_pecaNestedInput
    producao_funcionario?: UsuariosUpdateOneRequiredWithoutProducao_funcionarioNestedInput
  }

  export type ProducaoUncheckedUpdateWithoutProducao_etapaInput = {
    id_da_producao?: IntFieldUpdateOperationsInput | number
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_funcionario?: StringFieldUpdateOperationsInput | string
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProducaoUncheckedUpdateManyWithoutProducao_etapaInput = {
    id_da_producao?: IntFieldUpdateOperationsInput | number
    quantidade_pecas?: NullableIntFieldUpdateOperationsInput | number | null
    id_Estabelecimento?: StringFieldUpdateOperationsInput | string
    id_da_op?: IntFieldUpdateOperationsInput | number
    id_funcionario?: StringFieldUpdateOperationsInput | string
    data_inicio?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hora_registro?: NullableStringFieldUpdateOperationsInput | string | null
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}