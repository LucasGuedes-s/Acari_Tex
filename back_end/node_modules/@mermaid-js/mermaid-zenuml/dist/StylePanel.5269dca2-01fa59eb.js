import { Y as Ye$1, g as ge, F as Fn, G as G$1, x as xh, o as ov, k as k$1, R as Re$1, j as jt$1, A, q as q$1, a as Fe$1, O as On$1, _ as _e, v as ve$1, V as Ve$1, b as Yt$1, r as rh, K as KO, c as YC, f as f1, n as n3, e as e3, W as We$1, d as gr, U as Ut$1, s as s8, i as i8, N as N8, h as x0, Q as Qt$1, l as ct, m as Gh, p as xe$1, t as gl, I as I0, u as an$1 } from "./zenuml-definition-0bd2d146.js";
const ze = ["top", "right", "bottom", "left"], Re = ["start", "end"], Pe = /* @__PURE__ */ ze.reduce((e, t) => e.concat(t, t + "-" + Re[0], t + "-" + Re[1]), []), J = Math.min, Y = Math.max, le = Math.round, se = Math.floor, X = (e) => ({
  x: e,
  y: e
}), At = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, St = {
  start: "end",
  end: "start"
};
function ye(e, t, n) {
  return Y(e, J(t, n));
}
function K(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function V(e) {
  return e.split("-")[0];
}
function M(e) {
  return e.split("-")[1];
}
function He(e) {
  return e === "x" ? "y" : "x";
}
function xe(e) {
  return e === "y" ? "height" : "width";
}
function fe(e) {
  return ["top", "bottom"].includes(V(e)) ? "y" : "x";
}
function be(e) {
  return He(fe(e));
}
function Ve(e, t, n) {
  n === void 0 && (n = false);
  const i = M(e), o = be(e), r = xe(o);
  let s = o === "x" ? i === (n ? "end" : "start") ? "right" : "left" : i === "start" ? "bottom" : "top";
  return t.reference[r] > t.floating[r] && (s = ce(s)), [s, ce(s)];
}
function Tt(e) {
  const t = ce(e);
  return [ae(e), t, ae(t)];
}
function ae(e) {
  return e.replace(/start|end/g, (t) => St[t]);
}
function Rt(e, t, n) {
  const i = ["left", "right"], o = ["right", "left"], r = ["top", "bottom"], s = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return n ? t ? o : i : t ? i : o;
    case "left":
    case "right":
      return t ? r : s;
    default:
      return [];
  }
}
function Pt(e, t, n, i) {
  const o = M(e);
  let r = Rt(V(e), n === "start", i);
  return o && (r = r.map((s) => s + "-" + o), t && (r = r.concat(r.map(ae)))), r;
}
function ce(e) {
  return e.replace(/left|right|bottom|top/g, (t) => At[t]);
}
function Ft(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function We(e) {
  return typeof e != "number" ? Ft(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function ue(e) {
  return {
    ...e,
    top: e.y,
    left: e.x,
    right: e.x + e.width,
    bottom: e.y + e.height
  };
}
function Fe(e, t, n) {
  let {
    reference: i,
    floating: o
  } = e;
  const r = fe(t), s = be(t), l = xe(s), c = V(t), u = r === "y", m = i.x + i.width / 2 - o.width / 2, d = i.y + i.height / 2 - o.height / 2, p = i[l] / 2 - o[l] / 2;
  let f;
  switch (c) {
    case "top":
      f = {
        x: m,
        y: i.y - o.height
      };
      break;
    case "bottom":
      f = {
        x: m,
        y: i.y + i.height
      };
      break;
    case "right":
      f = {
        x: i.x + i.width,
        y: d
      };
      break;
    case "left":
      f = {
        x: i.x - o.width,
        y: d
      };
      break;
    default:
      f = {
        x: i.x,
        y: i.y
      };
  }
  switch (M(t)) {
    case "start":
      f[s] -= p * (n && u ? -1 : 1);
      break;
    case "end":
      f[s] += p * (n && u ? -1 : 1);
      break;
  }
  return f;
}
const Lt = async (e, t, n) => {
  const {
    placement: i = "bottom",
    strategy: o = "absolute",
    middleware: r = [],
    platform: s
  } = n, l = r.filter(Boolean), c = await (s.isRTL == null ? void 0 : s.isRTL(t));
  let u = await s.getElementRects({
    reference: e,
    floating: t,
    strategy: o
  }), {
    x: m,
    y: d
  } = Fe(u, i, c), p = i, f = {}, a = 0;
  for (let h = 0; h < l.length; h++) {
    const {
      name: v,
      fn: g
    } = l[h], {
      x,
      y: b,
      data: C,
      reset: w
    } = await g({
      x: m,
      y: d,
      initialPlacement: i,
      placement: p,
      strategy: o,
      middlewareData: f,
      rects: u,
      platform: s,
      elements: {
        reference: e,
        floating: t
      }
    });
    if (m = x != null ? x : m, d = b != null ? b : d, f = {
      ...f,
      [v]: {
        ...f[v],
        ...C
      }
    }, w && a <= 50) {
      a++, typeof w == "object" && (w.placement && (p = w.placement), w.rects && (u = w.rects === true ? await s.getElementRects({
        reference: e,
        floating: t,
        strategy: o
      }) : w.rects), {
        x: m,
        y: d
      } = Fe(u, p, c)), h = -1;
      continue;
    }
  }
  return {
    x: m,
    y: d,
    placement: p,
    strategy: o,
    middlewareData: f
  };
};
async function ne(e, t) {
  var n;
  t === void 0 && (t = {});
  const {
    x: i,
    y: o,
    platform: r,
    rects: s,
    elements: l,
    strategy: c
  } = e, {
    boundary: u = "clippingAncestors",
    rootBoundary: m = "viewport",
    elementContext: d = "floating",
    altBoundary: p = false,
    padding: f = 0
  } = K(t, e), a = We(f), v = l[p ? d === "floating" ? "reference" : "floating" : d], g = ue(await r.getClippingRect({
    element: (n = await (r.isElement == null ? void 0 : r.isElement(v))) == null || n ? v : v.contextElement || await (r.getDocumentElement == null ? void 0 : r.getDocumentElement(l.floating)),
    boundary: u,
    rootBoundary: m,
    strategy: c
  })), x = d === "floating" ? {
    ...s.floating,
    x: i,
    y: o
  } : s.reference, b = await (r.getOffsetParent == null ? void 0 : r.getOffsetParent(l.floating)), C = await (r.isElement == null ? void 0 : r.isElement(b)) ? await (r.getScale == null ? void 0 : r.getScale(b)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, w = ue(r.convertOffsetParentRelativeRectToViewportRelativeRect ? await r.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect: x,
    offsetParent: b,
    strategy: c
  }) : x);
  return {
    top: (g.top - w.top + a.top) / C.y,
    bottom: (w.bottom - g.bottom + a.bottom) / C.y,
    left: (g.left - w.left + a.left) / C.x,
    right: (w.right - g.right + a.right) / C.x
  };
}
const Bt = (e) => ({
  name: "arrow",
  options: e,
  async fn(t) {
    const {
      x: n,
      y: i,
      placement: o,
      rects: r,
      platform: s,
      elements: l,
      middlewareData: c
    } = t, {
      element: u,
      padding: m = 0
    } = K(e, t) || {};
    if (u == null)
      return {};
    const d = We(m), p = {
      x: n,
      y: i
    }, f = be(o), a = xe(f), h = await s.getDimensions(u), v = f === "y", g = v ? "top" : "left", x = v ? "bottom" : "right", b = v ? "clientHeight" : "clientWidth", C = r.reference[a] + r.reference[f] - p[f] - r.floating[a], w = p[f] - r.reference[f], O = await (s.getOffsetParent == null ? void 0 : s.getOffsetParent(u));
    let E = O ? O[b] : 0;
    (!E || !await (s.isElement == null ? void 0 : s.isElement(O))) && (E = l.floating[b] || r.floating[a]);
    const A2 = C / 2 - w / 2, R = E / 2 - h[a] / 2 - 1, T = J(d[g], R), S = J(d[x], R), P = T, _ = E - h[a] - S, B = E / 2 - h[a] / 2 + A2, N = ye(P, B, _), $ = !c.arrow && M(o) != null && B != N && r.reference[a] / 2 - (B < P ? T : S) - h[a] / 2 < 0, z = $ ? B < P ? B - P : B - _ : 0;
    return {
      [f]: p[f] + z,
      data: {
        [f]: N,
        centerOffset: B - N - z,
        ...$ && {
          alignmentOffset: z
        }
      },
      reset: $
    };
  }
});
function kt(e, t, n) {
  return (e ? [...n.filter((o) => M(o) === e), ...n.filter((o) => M(o) !== e)] : n.filter((o) => V(o) === o)).filter((o) => e ? M(o) === e || (t ? ae(o) !== o : false) : true);
}
const Dt = function(e) {
  return e === void 0 && (e = {}), {
    name: "autoPlacement",
    options: e,
    async fn(t) {
      var n, i, o;
      const {
        rects: r,
        middlewareData: s,
        placement: l,
        platform: c,
        elements: u
      } = t, {
        crossAxis: m = false,
        alignment: d,
        allowedPlacements: p = Pe,
        autoAlignment: f = true,
        ...a
      } = K(e, t), h = d !== void 0 || p === Pe ? kt(d || null, f, p) : p, v = await ne(t, a), g = ((n = s.autoPlacement) == null ? void 0 : n.index) || 0, x = h[g];
      if (x == null)
        return {};
      const b = Ve(x, r, await (c.isRTL == null ? void 0 : c.isRTL(u.floating)));
      if (l !== x)
        return {
          reset: {
            placement: h[0]
          }
        };
      const C = [v[V(x)], v[b[0]], v[b[1]]], w = [...((i = s.autoPlacement) == null ? void 0 : i.overflows) || [], {
        placement: x,
        overflows: C
      }], O = h[g + 1];
      if (O)
        return {
          data: {
            index: g + 1,
            overflows: w
          },
          reset: {
            placement: O
          }
        };
      const E = w.map((T) => {
        const S = M(T.placement);
        return [T.placement, S && m ? T.overflows.slice(0, 2).reduce((P, _) => P + _, 0) : T.overflows[0], T.overflows];
      }).sort((T, S) => T[1] - S[1]), R = ((o = E.filter((T) => T[2].slice(
        0,
        M(T[0]) ? 2 : 3
      ).every((S) => S <= 0))[0]) == null ? void 0 : o[0]) || E[0][0];
      return R !== l ? {
        data: {
          index: g + 1,
          overflows: w
        },
        reset: {
          placement: R
        }
      } : {};
    }
  };
}, Nt = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var n, i;
      const {
        placement: o,
        middlewareData: r,
        rects: s,
        initialPlacement: l,
        platform: c,
        elements: u
      } = t, {
        mainAxis: m = true,
        crossAxis: d = true,
        fallbackPlacements: p,
        fallbackStrategy: f = "bestFit",
        fallbackAxisSideDirection: a = "none",
        flipAlignment: h = true,
        ...v
      } = K(e, t);
      if ((n = r.arrow) != null && n.alignmentOffset)
        return {};
      const g = V(o), x = V(l) === l, b = await (c.isRTL == null ? void 0 : c.isRTL(u.floating)), C = p || (x || !h ? [ce(l)] : Tt(l));
      !p && a !== "none" && C.push(...Pt(l, h, a, b));
      const w = [l, ...C], O = await ne(t, v), E = [];
      let A2 = ((i = r.flip) == null ? void 0 : i.overflows) || [];
      if (m && E.push(O[g]), d) {
        const P = Ve(o, s, b);
        E.push(O[P[0]], O[P[1]]);
      }
      if (A2 = [...A2, {
        placement: o,
        overflows: E
      }], !E.every((P) => P <= 0)) {
        var R, T;
        const P = (((R = r.flip) == null ? void 0 : R.index) || 0) + 1, _ = w[P];
        if (_)
          return {
            data: {
              index: P,
              overflows: A2
            },
            reset: {
              placement: _
            }
          };
        let B = (T = A2.filter((N) => N.overflows[0] <= 0).sort((N, $) => N.overflows[1] - $.overflows[1])[0]) == null ? void 0 : T.placement;
        if (!B)
          switch (f) {
            case "bestFit": {
              var S;
              const N = (S = A2.map(($) => [$.placement, $.overflows.filter((z) => z > 0).reduce((z, tt) => z + tt, 0)]).sort(($, z) => $[1] - z[1])[0]) == null ? void 0 : S[0];
              N && (B = N);
              break;
            }
            case "initialPlacement":
              B = l;
              break;
          }
        if (o !== B)
          return {
            reset: {
              placement: B
            }
          };
      }
      return {};
    }
  };
};
function Le(e, t) {
  return {
    top: e.top - t.height,
    right: e.right - t.width,
    bottom: e.bottom - t.height,
    left: e.left - t.width
  };
}
function Be(e) {
  return ze.some((t) => e[t] >= 0);
}
const $t = function(e) {
  return e === void 0 && (e = {}), {
    name: "hide",
    options: e,
    async fn(t) {
      const {
        rects: n
      } = t, {
        strategy: i = "referenceHidden",
        ...o
      } = K(e, t);
      switch (i) {
        case "referenceHidden": {
          const r = await ne(t, {
            ...o,
            elementContext: "reference"
          }), s = Le(r, n.reference);
          return {
            data: {
              referenceHiddenOffsets: s,
              referenceHidden: Be(s)
            }
          };
        }
        case "escaped": {
          const r = await ne(t, {
            ...o,
            altBoundary: true
          }), s = Le(r, n.floating);
          return {
            data: {
              escapedOffsets: s,
              escaped: Be(s)
            }
          };
        }
        default:
          return {};
      }
    }
  };
};
async function jt(e, t) {
  const {
    placement: n,
    platform: i,
    elements: o
  } = e, r = await (i.isRTL == null ? void 0 : i.isRTL(o.floating)), s = V(n), l = M(n), c = fe(n) === "y", u = ["left", "top"].includes(s) ? -1 : 1, m = r && c ? -1 : 1, d = K(t, e);
  let {
    mainAxis: p,
    crossAxis: f,
    alignmentAxis: a
  } = typeof d == "number" ? {
    mainAxis: d,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...d
  };
  return l && typeof a == "number" && (f = l === "end" ? a * -1 : a), c ? {
    x: f * m,
    y: p * u
  } : {
    x: p * u,
    y: f * m
  };
}
const Mt = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      const {
        x: n,
        y: i
      } = t, o = await jt(t, e);
      return {
        x: n + o.x,
        y: i + o.y,
        data: o
      };
    }
  };
}, It = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: n,
        y: i,
        placement: o
      } = t, {
        mainAxis: r = true,
        crossAxis: s = false,
        limiter: l = {
          fn: (v) => {
            let {
              x: g,
              y: x
            } = v;
            return {
              x: g,
              y: x
            };
          }
        },
        ...c
      } = K(e, t), u = {
        x: n,
        y: i
      }, m = await ne(t, c), d = fe(V(o)), p = He(d);
      let f = u[p], a = u[d];
      if (r) {
        const v = p === "y" ? "top" : "left", g = p === "y" ? "bottom" : "right", x = f + m[v], b = f - m[g];
        f = ye(x, f, b);
      }
      if (s) {
        const v = d === "y" ? "top" : "left", g = d === "y" ? "bottom" : "right", x = a + m[v], b = a - m[g];
        a = ye(x, a, b);
      }
      const h = l.fn({
        ...t,
        [p]: f,
        [d]: a
      });
      return {
        ...h,
        data: {
          x: h.x - n,
          y: h.y - i
        }
      };
    }
  };
};
function q(e) {
  return Ue(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function k(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function U(e) {
  var t;
  return (t = (Ue(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function Ue(e) {
  return e instanceof Node || e instanceof k(e).Node;
}
function W(e) {
  return e instanceof Element || e instanceof k(e).Element;
}
function I(e) {
  return e instanceof HTMLElement || e instanceof k(e).HTMLElement;
}
function ke(e) {
  return typeof ShadowRoot > "u" ? false : e instanceof ShadowRoot || e instanceof k(e).ShadowRoot;
}
function re(e) {
  const {
    overflow: t,
    overflowX: n,
    overflowY: i,
    display: o
  } = D(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + i + n) && !["inline", "contents"].includes(o);
}
function _t(e) {
  return ["table", "td", "th"].includes(q(e));
}
function Ce(e) {
  const t = Oe(), n = D(e);
  return n.transform !== "none" || n.perspective !== "none" || (n.containerType ? n.containerType !== "normal" : false) || !t && (n.backdropFilter ? n.backdropFilter !== "none" : false) || !t && (n.filter ? n.filter !== "none" : false) || ["transform", "perspective", "filter"].some((i) => (n.willChange || "").includes(i)) || ["paint", "layout", "strict", "content"].some((i) => (n.contain || "").includes(i));
}
function zt(e) {
  let t = ee(e);
  for (; I(t) && !de(t); ) {
    if (Ce(t))
      return t;
    t = ee(t);
  }
  return null;
}
function Oe() {
  return typeof CSS > "u" || !CSS.supports ? false : CSS.supports("-webkit-backdrop-filter", "none");
}
function de(e) {
  return ["html", "body", "#document"].includes(q(e));
}
function D(e) {
  return k(e).getComputedStyle(e);
}
function me(e) {
  return W(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.pageXOffset,
    scrollTop: e.pageYOffset
  };
}
function ee(e) {
  if (q(e) === "html")
    return e;
  const t = e.assignedSlot || e.parentNode || ke(e) && e.host || U(e);
  return ke(t) ? t.host : t;
}
function Xe(e) {
  const t = ee(e);
  return de(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : I(t) && re(t) ? t : Xe(t);
}
function oe(e, t, n) {
  var i;
  t === void 0 && (t = []), n === void 0 && (n = true);
  const o = Xe(e), r = o === ((i = e.ownerDocument) == null ? void 0 : i.body), s = k(o);
  return r ? t.concat(s, s.visualViewport || [], re(o) ? o : [], s.frameElement && n ? oe(s.frameElement) : []) : t.concat(o, oe(o, [], n));
}
function qe(e) {
  const t = D(e);
  let n = parseFloat(t.width) || 0, i = parseFloat(t.height) || 0;
  const o = I(e), r = o ? e.offsetWidth : n, s = o ? e.offsetHeight : i, l = le(n) !== r || le(i) !== s;
  return l && (n = r, i = s), {
    width: n,
    height: i,
    $: l
  };
}
function Ee(e) {
  return W(e) ? e : e.contextElement;
}
function Z(e) {
  const t = Ee(e);
  if (!I(t))
    return X(1);
  const n = t.getBoundingClientRect(), {
    width: i,
    height: o,
    $: r
  } = qe(t);
  let s = (r ? le(n.width) : n.width) / i, l = (r ? le(n.height) : n.height) / o;
  return (!s || !Number.isFinite(s)) && (s = 1), (!l || !Number.isFinite(l)) && (l = 1), {
    x: s,
    y: l
  };
}
const Ht = /* @__PURE__ */ X(0);
function Ye(e) {
  const t = k(e);
  return !Oe() || !t.visualViewport ? Ht : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function Vt(e, t, n) {
  return t === void 0 && (t = false), !n || t && n !== k(e) ? false : t;
}
function G(e, t, n, i) {
  t === void 0 && (t = false), n === void 0 && (n = false);
  const o = e.getBoundingClientRect(), r = Ee(e);
  let s = X(1);
  t && (i ? W(i) && (s = Z(i)) : s = Z(e));
  const l = Vt(r, n, i) ? Ye(r) : X(0);
  let c = (o.left + l.x) / s.x, u = (o.top + l.y) / s.y, m = o.width / s.x, d = o.height / s.y;
  if (r) {
    const p = k(r), f = i && W(i) ? k(i) : i;
    let a = p.frameElement;
    for (; a && i && f !== p; ) {
      const h = Z(a), v = a.getBoundingClientRect(), g = D(a), x = v.left + (a.clientLeft + parseFloat(g.paddingLeft)) * h.x, b = v.top + (a.clientTop + parseFloat(g.paddingTop)) * h.y;
      c *= h.x, u *= h.y, m *= h.x, d *= h.y, c += x, u += b, a = k(a).frameElement;
    }
  }
  return ue({
    width: m,
    height: d,
    x: c,
    y: u
  });
}
function Wt(e) {
  let {
    rect: t,
    offsetParent: n,
    strategy: i
  } = e;
  const o = I(n), r = U(n);
  if (n === r)
    return t;
  let s = {
    scrollLeft: 0,
    scrollTop: 0
  }, l = X(1);
  const c = X(0);
  if ((o || !o && i !== "fixed") && ((q(n) !== "body" || re(r)) && (s = me(n)), I(n))) {
    const u = G(n);
    l = Z(n), c.x = u.x + n.clientLeft, c.y = u.y + n.clientTop;
  }
  return {
    width: t.width * l.x,
    height: t.height * l.y,
    x: t.x * l.x - s.scrollLeft * l.x + c.x,
    y: t.y * l.y - s.scrollTop * l.y + c.y
  };
}
function Ut(e) {
  return Array.from(e.getClientRects());
}
function Ge(e) {
  return G(U(e)).left + me(e).scrollLeft;
}
function Xt(e) {
  const t = U(e), n = me(e), i = e.ownerDocument.body, o = Y(t.scrollWidth, t.clientWidth, i.scrollWidth, i.clientWidth), r = Y(t.scrollHeight, t.clientHeight, i.scrollHeight, i.clientHeight);
  let s = -n.scrollLeft + Ge(e);
  const l = -n.scrollTop;
  return D(i).direction === "rtl" && (s += Y(t.clientWidth, i.clientWidth) - o), {
    width: o,
    height: r,
    x: s,
    y: l
  };
}
function qt(e, t) {
  const n = k(e), i = U(e), o = n.visualViewport;
  let r = i.clientWidth, s = i.clientHeight, l = 0, c = 0;
  if (o) {
    r = o.width, s = o.height;
    const u = Oe();
    (!u || u && t === "fixed") && (l = o.offsetLeft, c = o.offsetTop);
  }
  return {
    width: r,
    height: s,
    x: l,
    y: c
  };
}
function Yt(e, t) {
  const n = G(e, true, t === "fixed"), i = n.top + e.clientTop, o = n.left + e.clientLeft, r = I(e) ? Z(e) : X(1), s = e.clientWidth * r.x, l = e.clientHeight * r.y, c = o * r.x, u = i * r.y;
  return {
    width: s,
    height: l,
    x: c,
    y: u
  };
}
function De(e, t, n) {
  let i;
  if (t === "viewport")
    i = qt(e, n);
  else if (t === "document")
    i = Xt(U(e));
  else if (W(t))
    i = Yt(t, n);
  else {
    const o = Ye(e);
    i = {
      ...t,
      x: t.x - o.x,
      y: t.y - o.y
    };
  }
  return ue(i);
}
function Ke(e, t) {
  const n = ee(e);
  return n === t || !W(n) || de(n) ? false : D(n).position === "fixed" || Ke(n, t);
}
function Gt(e, t) {
  const n = t.get(e);
  if (n)
    return n;
  let i = oe(e, [], false).filter((l) => W(l) && q(l) !== "body"), o = null;
  const r = D(e).position === "fixed";
  let s = r ? ee(e) : e;
  for (; W(s) && !de(s); ) {
    const l = D(s), c = Ce(s);
    !c && l.position === "fixed" && (o = null), (r ? !c && !o : !c && l.position === "static" && !!o && ["absolute", "fixed"].includes(o.position) || re(s) && !c && Ke(e, s)) ? i = i.filter((m) => m !== s) : o = l, s = ee(s);
  }
  return t.set(e, i), i;
}
function Kt(e) {
  let {
    element: t,
    boundary: n,
    rootBoundary: i,
    strategy: o
  } = e;
  const s = [...n === "clippingAncestors" ? Gt(t, this._c) : [].concat(n), i], l = s[0], c = s.reduce((u, m) => {
    const d = De(t, m, o);
    return u.top = Y(d.top, u.top), u.right = J(d.right, u.right), u.bottom = J(d.bottom, u.bottom), u.left = Y(d.left, u.left), u;
  }, De(t, l, o));
  return {
    width: c.right - c.left,
    height: c.bottom - c.top,
    x: c.left,
    y: c.top
  };
}
function Qt(e) {
  return qe(e);
}
function Zt(e, t, n) {
  const i = I(t), o = U(t), r = n === "fixed", s = G(e, true, r, t);
  let l = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const c = X(0);
  if (i || !i && !r)
    if ((q(t) !== "body" || re(o)) && (l = me(t)), i) {
      const u = G(t, true, r, t);
      c.x = u.x + t.clientLeft, c.y = u.y + t.clientTop;
    } else
      o && (c.x = Ge(o));
  return {
    x: s.left + l.scrollLeft - c.x,
    y: s.top + l.scrollTop - c.y,
    width: s.width,
    height: s.height
  };
}
function Ne(e, t) {
  return !I(e) || D(e).position === "fixed" ? null : t ? t(e) : e.offsetParent;
}
function Qe(e, t) {
  const n = k(e);
  if (!I(e))
    return n;
  let i = Ne(e, t);
  for (; i && _t(i) && D(i).position === "static"; )
    i = Ne(i, t);
  return i && (q(i) === "html" || q(i) === "body" && D(i).position === "static" && !Ce(i)) ? n : i || zt(e) || n;
}
const Jt = async function(e) {
  let {
    reference: t,
    floating: n,
    strategy: i
  } = e;
  const o = this.getOffsetParent || Qe, r = this.getDimensions;
  return {
    reference: Zt(t, await o(n), i),
    floating: {
      x: 0,
      y: 0,
      ...await r(n)
    }
  };
};
function en(e) {
  return D(e).direction === "rtl";
}
const tn = {
  convertOffsetParentRelativeRectToViewportRelativeRect: Wt,
  getDocumentElement: U,
  getClippingRect: Kt,
  getOffsetParent: Qe,
  getElementRects: Jt,
  getClientRects: Ut,
  getDimensions: Qt,
  getScale: Z,
  isElement: W,
  isRTL: en
};
function nn(e, t) {
  let n = null, i;
  const o = U(e);
  function r() {
    clearTimeout(i), n && n.disconnect(), n = null;
  }
  function s(l, c) {
    l === void 0 && (l = false), c === void 0 && (c = 1), r();
    const {
      left: u,
      top: m,
      width: d,
      height: p
    } = e.getBoundingClientRect();
    if (l || t(), !d || !p)
      return;
    const f = se(m), a = se(o.clientWidth - (u + d)), h = se(o.clientHeight - (m + p)), v = se(u), x = {
      rootMargin: -f + "px " + -a + "px " + -h + "px " + -v + "px",
      threshold: Y(0, J(1, c)) || 1
    };
    let b = true;
    function C(w) {
      const O = w[0].intersectionRatio;
      if (O !== c) {
        if (!b)
          return s();
        O ? s(false, O) : i = setTimeout(() => {
          s(false, 1e-7);
        }, 100);
      }
      b = false;
    }
    try {
      n = new IntersectionObserver(C, {
        ...x,
        root: o.ownerDocument
      });
    } catch {
      n = new IntersectionObserver(C, x);
    }
    n.observe(e);
  }
  return s(true), r;
}
function on(e, t, n, i) {
  i === void 0 && (i = {});
  const {
    ancestorScroll: o = true,
    ancestorResize: r = true,
    elementResize: s = typeof ResizeObserver == "function",
    layoutShift: l = typeof IntersectionObserver == "function",
    animationFrame: c = false
  } = i, u = Ee(e), m = o || r ? [...u ? oe(u) : [], ...oe(t)] : [];
  m.forEach((g) => {
    o && g.addEventListener("scroll", n, {
      passive: true
    }), r && g.addEventListener("resize", n);
  });
  const d = u && l ? nn(u, n) : null;
  let p = -1, f = null;
  s && (f = new ResizeObserver((g) => {
    let [x] = g;
    x && x.target === u && f && (f.unobserve(t), cancelAnimationFrame(p), p = requestAnimationFrame(() => {
      f && f.observe(t);
    })), n();
  }), u && !c && f.observe(u), f.observe(t));
  let a, h = c ? G(e) : null;
  c && v();
  function v() {
    const g = G(e);
    h && (g.x !== h.x || g.y !== h.y || g.width !== h.width || g.height !== h.height) && n(), h = g, a = requestAnimationFrame(v);
  }
  return n(), () => {
    m.forEach((g) => {
      o && g.removeEventListener("scroll", n), r && g.removeEventListener("resize", n);
    }), d && d(), f && f.disconnect(), f = null, c && cancelAnimationFrame(a);
  };
}
const rn = (e, t, n) => {
  const i = /* @__PURE__ */ new Map(), o = {
    platform: tn,
    ...n
  }, r = {
    ...o.platform,
    _c: i
  };
  return Lt(e, t, {
    ...o,
    platform: r
  });
};
function we(e) {
  var t;
  return (t = e == null ? void 0 : e.$el) != null ? t : e;
}
function sn(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const n = we(_e(e.element));
      return n == null ? {} : Bt({
        element: n,
        padding: e.padding
      }).fn(t);
    }
  };
}
function ln(e, t, n) {
  n === void 0 && (n = {});
  const i = n.whileElementsMounted, o = G$1(() => {
    var w;
    return (w = _e(n.open)) != null ? w : true;
  }), r = G$1(() => _e(n.middleware)), s = G$1(() => {
    var w;
    return (w = _e(n.placement)) != null ? w : "bottom";
  }), l = G$1(() => {
    var w;
    return (w = _e(n.strategy)) != null ? w : "absolute";
  }), c = G$1(() => we(e.value)), u = G$1(() => we(t.value)), m = ge(null), d = ge(null), p = ge(l.value), f = ge(s.value), a = e3({}), h = ge(false);
  let v;
  function g() {
    c.value == null || u.value == null || rn(c.value, u.value, {
      middleware: r.value,
      placement: s.value,
      strategy: l.value
    }).then((w) => {
      m.value = w.x, d.value = w.y, p.value = w.strategy, f.value = w.placement, a.value = w.middlewareData, h.value = true;
    });
  }
  function x() {
    typeof v == "function" && (v(), v = void 0);
  }
  function b() {
    if (x(), i === void 0) {
      g();
      return;
    }
    if (c.value != null && u.value != null) {
      v = i(c.value, u.value, g);
      return;
    }
  }
  function C() {
    o.value || (h.value = false);
  }
  return Yt$1([r, s, l], g, {
    flush: "sync"
  }), Yt$1([c, u], b, {
    flush: "sync"
  }), Yt$1(o, C, {
    flush: "sync"
  }), s8() && i8(x), {
    x: N8(m),
    y: N8(d),
    strategy: N8(p),
    placement: N8(f),
    middlewareData: N8(a),
    isPositioned: N8(h),
    update: g
  };
}
var an = Object.defineProperty, cn = (e, t, n) => t in e ? an(e, t, { enumerable: true, configurable: true, writable: true, value: n }) : e[t] = n, un = (e, t, n) => (cn(e, typeof t != "symbol" ? t + "" : t, n), n);
function ie(e) {
  var n;
  if (e == null || e.value == null)
    return null;
  const t = (n = e.value.$el) != null ? n : e.value;
  return t.$el ? ie(ge(t)) : t;
}
class fn {
  constructor() {
    un(this, "current", this.detect());
  }
  set(t) {
    this.current !== t && (this.current = t);
  }
  reset() {
    this.set(this.detect());
  }
  get isServer() {
    return this.current === "server";
  }
  get isClient() {
    return this.current === "client";
  }
  detect() {
    return typeof window > "u" || typeof document > "u" ? "server" : "client";
  }
}
const pe = new fn();
function Ze(e) {
  return e.reduce((t, n) => n.type === Fe$1 ? t.concat(Ze(n.children)) : t.concat(n), []);
}
function dn(e) {
  return e == null ? false : typeof e.type == "string" || typeof e.type == "object" || typeof e.type == "function";
}
function $e(e) {
  return e = _e(e), e && (e == null ? void 0 : e.nodeType) !== Node.COMMENT_NODE;
}
function mn(e) {
  if (pe.isServer)
    return null;
  if (e instanceof Node)
    return e.ownerDocument;
  if (Object.prototype.hasOwnProperty.call(e, "value")) {
    const t = ie(e);
    if (t)
      return t.ownerDocument;
  }
  return document;
}
function pn(e, t, n, i, o) {
  Yt$1([
    () => o.offset,
    () => o.flip,
    () => o.shift,
    () => o.autoPlacement,
    () => o.arrow,
    () => o.hide,
    () => o.middleware
  ], () => {
    const r = [];
    (typeof o.offset == "number" || typeof o.offset == "object" || typeof o.offset == "function") && r.push(Mt(o.offset)), (o.flip === true || typeof o.flip == "number" || typeof o.flip == "object") && r.push(Nt({
      padding: typeof o.flip == "number" ? o.flip : void 0,
      ...typeof o.flip == "object" ? o.flip : {}
    })), (o.shift === true || typeof o.shift == "number" || typeof o.shift == "object") && r.push(It({
      padding: typeof o.shift == "number" ? o.shift : void 0,
      ...typeof o.shift == "object" ? o.shift : {}
    })), (o.autoPlacement === true || typeof o.autoPlacement == "object") && r.push(Dt(
      typeof o.autoPlacement == "object" ? o.autoPlacement : void 0
    )), (o.arrow === true || typeof o.arrow == "number") && r.push(sn({
      element: i,
      padding: o.arrow === true ? 0 : o.arrow
    })), r.push(...typeof o.middleware == "function" ? o.middleware({
      referenceEl: t,
      floatingEl: n
    }) : o.middleware || []), (o.hide === true || typeof o.hide == "object") && r.push($t(
      typeof o.hide == "object" ? o.hide : void 0
    )), e.value = r;
  }, { immediate: true });
}
function gn(e, t, n) {
  let i = () => {
  };
  We$1(() => {
    if (e && pe.isClient && typeof ResizeObserver < "u" && t.value && t.value instanceof Element) {
      const o = new ResizeObserver(([r]) => {
        n.value = r.borderBoxSize.reduce((s, { inlineSize: l }) => s + l, 0);
      });
      o.observe(t.value), i = () => {
        o.disconnect(), n.value = null;
      };
    }
  }), x0(() => {
    i();
  });
}
const hn = (e) => {
  switch (e) {
    case "top":
      return "origin-bottom";
    case "bottom":
      return "origin-top";
    case "left":
      return "origin-right";
    case "right":
      return "origin-left";
    case "top-start":
    case "right-end":
      return "origin-bottom-left";
    case "top-end":
    case "left-end":
      return "origin-bottom-right";
    case "right-start":
    case "bottom-start":
      return "origin-top-left";
    case "left-start":
    case "bottom-end":
      return "origin-top-right";
    default:
      return "";
  }
};
function vn(e, t) {
  const n = G$1(() => {
    if (typeof e.originClass == "function")
      return e.originClass(t.value);
    if (typeof e.originClass == "string")
      return e.originClass;
    if (e.tailwindcssOriginClass)
      return hn(t.value);
  }), i = G$1(
    () => e.enter || n.value ? `${e.enter || ""} ${n.value || ""}` : void 0
  ), o = G$1(
    () => e.leave || n.value ? `${e.leave || ""} ${n.value || ""}` : void 0
  );
  return { originClassRef: n, enterActiveClassRef: i, leaveActiveClassRef: o };
}
function Je(e, t, ...n) {
  if (e in t) {
    const o = t[e];
    return typeof o == "function" ? o(...n) : o;
  }
  const i = new Error(
    `Tried to handle "${e}" but there is no handler defined. Only defined handlers are: ${Object.keys(
      t
    ).map((o) => `"${o}"`).join(", ")}.`
  );
  throw Error.captureStackTrace && Error.captureStackTrace(i, Je), i;
}
const je = [
  "[contentEditable=true]",
  "[tabindex]",
  "a[href]",
  "area[href]",
  "button:not([disabled])",
  "iframe",
  "input:not([disabled])",
  "select:not([disabled])",
  "textarea:not([disabled])"
].map(
  (e) => `${e}:not([tabindex='-1'])`
).join(",");
var et = /* @__PURE__ */ ((e) => (e[e.Strict = 0] = "Strict", e[e.Loose = 1] = "Loose", e))(et || {});
function yn(e, t = 0) {
  var n;
  return e === ((n = mn(e)) == null ? void 0 : n.body) ? false : Je(t, {
    0() {
      return e.matches(je);
    },
    1() {
      let i = e;
      for (; i !== null; ) {
        if (i.matches(je))
          return true;
        i = i.parentElement;
      }
      return false;
    }
  });
}
function ve(e, t, n) {
  pe.isServer || Qt$1((i) => {
    document.addEventListener(e, t, n), i(() => document.removeEventListener(e, t, n));
  });
}
function wn(e, t, n = G$1(() => true)) {
  function i(r, s) {
    if (!n.value || r.defaultPrevented)
      return;
    const l = s(r);
    if (l === null || !l.getRootNode().contains(l))
      return;
    const c = function u(m) {
      return typeof m == "function" ? u(m()) : Array.isArray(m) || m instanceof Set ? m : [m];
    }(e);
    for (const u of c) {
      if (u === null)
        continue;
      const m = u instanceof HTMLElement ? u : ie(u);
      if (m != null && m.contains(l) || r.composed && r.composedPath().includes(m))
        return;
    }
    return !yn(l, et.Loose) && l.tabIndex !== -1 && r.preventDefault(), t(r, l);
  }
  const o = ge(null);
  ve("mousedown", (r) => {
    var s, l;
    n.value && (o.value = ((l = (s = r.composedPath) == null ? void 0 : s.call(r)) == null ? void 0 : l[0]) || r.target);
  }, true), ve(
    "click",
    (r) => {
      o.value && (i(r, () => o.value), o.value = null);
    },
    true
  ), ve("blur", (r) => i(
    r,
    () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null
  ), true);
}
const xn = Symbol("ArrowContext"), y = {
  as: {
    type: [String, Function],
    default: "template"
  },
  floatingAs: {
    type: [String, Function],
    default: "div"
  },
  show: {
    type: Boolean,
    default: null
  },
  placement: {
    type: String,
    default: "bottom-start"
  },
  strategy: {
    type: String,
    default: "absolute"
  },
  offset: [Number, Function, Object],
  shift: {
    type: [Boolean, Number, Object],
    default: false
  },
  flip: {
    type: [Boolean, Number, Object],
    default: false
  },
  arrow: {
    type: [Boolean, Number],
    default: false
  },
  autoPlacement: {
    type: [Boolean, Object],
    default: false
  },
  hide: {
    type: [Boolean, Object],
    default: false
  },
  autoUpdate: {
    type: [Boolean, Object],
    default: true
  },
  zIndex: {
    type: [Number, String],
    default: 9999
  },
  transitionName: String,
  transitionType: String,
  enter: String,
  enterFrom: String,
  enterTo: String,
  leave: String,
  leaveFrom: String,
  leaveTo: String,
  originClass: [String, Function],
  tailwindcssOriginClass: {
    type: Boolean,
    default: false
  },
  portal: {
    type: Boolean,
    default: false
  },
  transform: {
    type: Boolean,
    default: true
  },
  adaptiveWidth: {
    type: Boolean,
    default: false
  },
  composable: {
    type: Boolean,
    default: false
  },
  dialog: {
    type: Boolean,
    default: false
  },
  middleware: {
    type: [Array, Function],
    default: () => []
  }
};
function bn(e, t, n, i) {
  const { floatingRef: o, props: r, mounted: s, show: l, x: c, y: u, placement: m, strategy: d, referenceElWidth: p, updateFloating: f } = i, a = f1(
    { ...r, as: r.floatingAs },
    t
  ), { enterActiveClassRef: h, leaveActiveClassRef: v } = vn(a, m), g = {
    enterActiveClass: h.value,
    enterFromClass: a.enterFrom,
    enterToClass: a.enterTo,
    leaveActiveClass: v.value,
    leaveFromClass: a.leaveFrom,
    leaveToClass: a.leaveTo
  }, x = {
    name: a.transitionName,
    type: a.transitionType,
    appear: true,
    ...a.transitionName ? {} : g,
    onBeforeEnter() {
      l.value = true;
    },
    onAfterLeave() {
      l.value = false;
    }
  }, b = {
    enter: h.value,
    enterFrom: a.enterFrom,
    enterTo: a.enterTo,
    leave: v.value,
    leaveFrom: a.leaveFrom,
    leaveTo: a.leaveTo,
    onBeforeEnter: x.onBeforeEnter,
    onAfterLeave: x.onAfterLeave
  }, C = {
    style: {
      ...!a.dialog && a.transform ? {
        position: d.value,
        zIndex: a.zIndex,
        top: "0px",
        left: "0px",
        right: "auto",
        bottom: "auto",
        transform: `translate(${Math.round(c.value || 0)}px,${Math.round(u.value || 0)}px)`
      } : {
        position: d.value,
        zIndex: a.zIndex,
        top: `${u.value || 0}px`,
        left: `${c.value || 0}px`
      },
      width: a.adaptiveWidth && typeof p.value == "number" ? `${p.value}px` : void 0
    }
  };
  function w(A2) {
    return a.portal ? ct(Gh, () => A2) : A2;
  }
  function O(A2) {
    const R = f1(
      C,
      n,
      a.dialog ? {} : { ref: o }
    );
    return a.as === "template" ? A2 : typeof a.as == "string" ? ct(a.as, R, A2) : ct(a.as, R, () => A2);
  }
  function E() {
    function A2() {
      var R;
      const T = a.as === "template" ? f1(
        C,
        n,
        a.dialog ? {} : { ref: o }
      ) : null, S = an$1(e, T);
      return ((R = S.props) == null ? void 0 : R.unmount) === false ? (f(), S) : typeof a.show != "boolean" || a.show ? S : xe$1();
    }
    return pe.isServer ? s.value && a.show ? A2() : xe$1() : a.transitionChild ? ct(gl, {
      key: `placement-${m.value}`,
      ...a.dialog ? { ref: o } : {},
      as: "template",
      ...b
    }, A2) : ct(I0, {
      ...a.dialog ? { ref: o } : {},
      ...x
    }, A2);
  }
  return w(
    O(
      E()
    )
  );
}
function Cn(e, t, n, i, o) {
  const r = ge(false), s = n3(i, "placement"), l = n3(i, "strategy"), c = e3({}), u = ge(null), m = ge(void 0), d = ge(void 0), p = G$1(() => ie(t)), f = G$1(() => ie(n)), a = G$1(
    () => $e(p) && $e(f)
  ), { x: h, y: v, placement: g, strategy: x, middlewareData: b, update: C } = ln(p, f, {
    placement: s,
    strategy: l,
    middleware: c,
    whileElementsMounted: () => {
    }
  }), w = ge(null);
  We$1(() => {
    r.value = true;
  }), Yt$1(e, (S, P) => {
    S && !P ? o("show") : !S && P && o("hide");
  }, { immediate: true });
  function O() {
    a.value && (C(), o("update"));
  }
  Yt$1([s, l, c], O, { flush: "sync" }), pn(
    c,
    p,
    f,
    u,
    i
  ), Yt$1(b, () => {
    const S = b.value.arrow;
    m.value = S == null ? void 0 : S.x, d.value = S == null ? void 0 : S.y;
  }), gn(i.adaptiveWidth, p, w), Yt$1(e, async (S, P, _) => {
    if (await gr(), e.value && a.value && i.autoUpdate) {
      const B = on(
        p.value,
        f.value,
        O,
        typeof i.autoUpdate == "object" ? i.autoUpdate : void 0
      );
      _(B);
    }
  }, { flush: "post", immediate: true });
  const E = ge(true);
  Yt$1(p, () => {
    !(p.value instanceof Element) && a.value && E.value && (E.value = false, window.requestAnimationFrame(() => {
      E.value = true, O();
    }));
  }, { flush: "sync" });
  const A2 = {
    referenceRef: t,
    placement: g
  }, R = {
    floatingRef: n,
    props: i,
    mounted: r,
    show: e,
    x: h,
    y: v,
    placement: g,
    strategy: x,
    referenceElWidth: w,
    updateFloating: O
  }, T = {
    ref: u,
    placement: g,
    x: m,
    y: d
  };
  return Ut$1(xn, T), { referenceApi: A2, floatingApi: R, arrowApi: T, x: h, y: v, placement: g, strategy: x, referenceEl: p, floatingEl: f, middlewareData: b, update: O };
}
({
  ...y.as
});
const On = {
  as: y.as,
  show: y.show,
  placement: y.placement,
  strategy: y.strategy,
  offset: y.offset,
  shift: y.shift,
  flip: y.flip,
  arrow: y.arrow,
  autoPlacement: y.autoPlacement,
  hide: y.hide,
  autoUpdate: y.autoUpdate,
  zIndex: y.zIndex,
  transitionName: y.transitionName,
  transitionType: y.transitionType,
  enter: y.enter,
  enterFrom: y.enterFrom,
  enterTo: y.enterTo,
  leave: y.leave,
  leaveFrom: y.leaveFrom,
  leaveTo: y.leaveTo,
  originClass: y.originClass,
  tailwindcssOriginClass: y.tailwindcssOriginClass,
  portal: y.portal,
  transform: y.transform,
  middleware: y.middleware
}, En = {
  name: "FloatVirtual",
  inheritAttrs: false,
  props: On,
  emits: ["initial", "show", "hide", "update"],
  setup(e, { emit: t, slots: n, attrs: i }) {
    var m;
    const o = ge((m = e.show) != null ? m : false), r = ge({
      getBoundingClientRect() {
        return {
          x: 0,
          y: 0,
          top: 0,
          left: 0,
          bottom: 0,
          right: 0,
          width: 0,
          height: 0
        };
      }
    }), s = ge(null), {
      floatingApi: l,
      placement: c
    } = Cn(o, r, s, e, t);
    Yt$1(() => e.show, () => {
      var d;
      o.value = (d = e.show) != null ? d : false;
    });
    function u() {
      o.value = false;
    }
    return t("initial", {
      show: o,
      placement: c,
      reference: r,
      floating: s
    }), () => {
      if (!n.default)
        return;
      const d = {
        placement: c.value,
        close: u
      }, [p] = Ze(n.default(d)).filter(dn);
      return bn(
        p,
        {
          as: e.as,
          show: o.value
        },
        i,
        l
      );
    };
  }
};
({
  ...y.flip
});
const An = { class: "flex bg-white shadow-md z-10 rounded-md p-1" }, Sn = ["onClick"], Rn = /* @__PURE__ */ Ye$1({
  __name: "StylePanel",
  setup(e) {
    const t = ge({ value: null }), n = Fn(), i = G$1(
      () => n.getters.onContentChange || (() => {
      })
    ), o = G$1(
      () => xh(n.getters.diagramElement) + ov
    ), r = G$1(() => n.getters.code), s = (d) => {
      n.dispatch("updateCode", { code: d }), i.value(d);
    }, l = ge([]);
    let c;
    const u = ({ show: d, reference: p, floating: f }) => {
      let a, h, v, g, x, b;
      n.commit("onMessageClick", (C, w) => {
        var O;
        if (a = C.value.start.start, h = rh(r.value, a), v = KO(r.value, a), g = ((O = r.value.slice(h).match(/^\s*/)) == null ? void 0 : O[0]) || "", x = v.trim().startsWith("//"), x) {
          const E = v.trimStart().slice(2).trimStart(), A2 = E.indexOf("["), R = E.indexOf("]");
          b = Boolean(A2 === 0 && R), b ? l.value = E.slice(A2 + 1, R).split(",").map((T) => T.trim()) : l.value = [];
        }
        p.value = {
          getBoundingClientRect: () => w.getBoundingClientRect()
        }, t.value = C, d.value = true;
      }), wn(
        f,
        () => {
          d.value = false, l.value = [];
        },
        G$1(() => d.value)
      ), c = (C) => {
        var w;
        if (d.value = false, !!t.value.value)
          if (x) {
            let O = "";
            if (b) {
              let E;
              l.value.includes(C) ? E = l.value.filter((A2) => A2 !== C) : E = [...l.value, C], O = `${g}// [${E.filter(Boolean).join(", ")}] ${v.slice(v.indexOf("]") + 1).trimStart()}`;
            } else
              O = `${g}// [${C}] ${v.slice((((w = v.match(/\/\/*/)) == null ? void 0 : w.index) || -2) + 2).trimStart()}`;
            O.endsWith(`
`) || (O += `
`), s(
              r.value.slice(0, YC(r.value, a)) + O + r.value.slice(h)
            );
          } else
            s(
              r.value.slice(0, h) + `${g}// [${C}]
` + r.value.slice(h)
            );
      };
    }, m = [
      {
        name: "bold",
        content: "B",
        class: "font-bold"
      },
      {
        name: "italic",
        content: "I",
        class: "italic"
      },
      {
        name: "underline",
        content: "U",
        class: "underline"
      },
      {
        name: "strikethrough",
        content: "S",
        class: "line-through"
      }
    ];
    return (d, p) => (k$1(), Re$1(_e(En), {
      key: "tool",
      onInitial: u,
      placement: "top",
      offset: 5,
      flip: { padding: _e(o) },
      shift: "",
      zIndex: "30"
    }, {
      default: jt$1(() => [
        A("div", An, [
          (k$1(), q$1(Fe$1, null, On$1(m, (f) => A("div", {
            onClick: () => _e(c)(f.class),
            key: f.name
          }, [
            A("div", {
              class: ve$1(["w-6 mx-1 py-1 rounded-md text-black text-center cursor-pointer hover:bg-gray-200", [
                f.class,
                { "bg-gray-100": l.value.includes(f.class) }
              ]])
            }, Ve$1(f.content), 3)
          ], 8, Sn)), 64))
        ])
      ], void 0, true),
      _: 1
    }, 8, ["flip"]));
  }
});
export {
  Rn as default
};
