{
  "version": 3,
  "sources": ["../../../src/mermaidUtils.ts", "../../../src/parser.ts", "../../../src/zenumlRenderer.ts", "../../../src/zenuml-definition.ts"],
  "sourcesContent": ["import type { MermaidConfig } from 'mermaid';\n\nconst warning = (s: string) => {\n  // Todo remove debug code\n  // eslint-disable-next-line no-console\n  console.error('Log function was called before initialization', s);\n};\n\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'fatal';\n\nexport const LEVELS: Record<LogLevel, number> = {\n  trace: 0,\n  debug: 1,\n  info: 2,\n  warn: 3,\n  error: 4,\n  fatal: 5,\n};\n\nexport const log: Record<keyof typeof LEVELS, typeof console.log> = {\n  trace: warning,\n  debug: warning,\n  info: warning,\n  warn: warning,\n  error: warning,\n  fatal: warning,\n};\n\nexport let setLogLevel: (level: keyof typeof LEVELS | number | string) => void;\nexport let getConfig: () => MermaidConfig;\nexport let sanitizeText: (str: string) => string;\n// eslint-disable @typescript-eslint/no-explicit-any\nexport let setupGraphViewbox: (\n  graph: any,\n  svgElem: any,\n  padding: any,\n  useMaxWidth: boolean\n) => void;\n\nexport const injectUtils = (\n  _log: Record<keyof typeof LEVELS, typeof console.log>,\n  _setLogLevel: any,\n  _getConfig: any,\n  _sanitizeText: any,\n  _setupGraphViewbox: any\n) => {\n  _log.info('Mermaid utils injected');\n  log.trace = _log.trace;\n  log.debug = _log.debug;\n  log.info = _log.info;\n  log.warn = _log.warn;\n  log.error = _log.error;\n  log.fatal = _log.fatal;\n  setLogLevel = _setLogLevel;\n  getConfig = _getConfig;\n  sanitizeText = _sanitizeText;\n  setupGraphViewbox = _setupGraphViewbox;\n};\n", "/**\n * ZenUML manage parsing internally. It uses Antlr4 to parse the DSL.\n * The parser is defined in https://github.com/ZenUml/vue-sequence/blob/main/src/parser/index.js\n *\n * This is a dummy parser that satisfies the mermaid API logic.\n */\nexport default {\n  parse: () => {\n    // no op\n  },\n};\n", "import { getConfig, log } from './mermaidUtils.js';\nimport ZenUml from '@zenuml/core';\n\nconst regexp = /^\\s*zenuml/;\n\n// Create a Zen UML container outside the svg first for rendering, otherwise the Zen UML diagram cannot be rendered properly\nfunction createTemporaryZenumlContainer(id: string) {\n  const container = document.createElement('div');\n  container.id = `container-${id}`;\n  container.style.display = 'flex';\n  container.innerHTML = `<div id=\"zenUMLApp-${id}\"></div>`;\n  const app = container.querySelector(`#zenUMLApp-${id}`) as HTMLElement;\n  return { container, app };\n}\n\n// Create a foreignObject to wrap the Zen UML container in the svg\nfunction createForeignObject(id: string) {\n  const foreignObject = document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject');\n  foreignObject.setAttribute('x', '0');\n  foreignObject.setAttribute('y', '0');\n  foreignObject.setAttribute('width', '100%');\n  foreignObject.setAttribute('height', '100%');\n  const { container, app } = createTemporaryZenumlContainer(id);\n  foreignObject.appendChild(container);\n  return { foreignObject, container, app };\n}\n\n/**\n * Draws a Zen UML in the tag with id: id based on the graph definition in text.\n *\n * @param text - The text of the diagram\n * @param id - The id of the diagram which will be used as a DOM element id\u00A8\n */\nexport const draw = async function (text: string, id: string) {\n  log.info('draw with Zen UML renderer', ZenUml);\n\n  text = text.replace(regexp, '');\n  const { securityLevel } = getConfig();\n  // Handle root and Document for when rendering in sandbox mode\n  let sandboxElement: HTMLIFrameElement | null = null;\n  if (securityLevel === 'sandbox') {\n    sandboxElement = document.getElementById('i' + id) as HTMLIFrameElement;\n  }\n\n  const root = securityLevel === 'sandbox' ? sandboxElement?.contentWindow?.document : document;\n\n  const svgContainer = root?.querySelector(`svg#${id}`);\n\n  if (!root || !svgContainer) {\n    log.error('Cannot find root or svgContainer');\n    return;\n  }\n\n  const { foreignObject, container, app } = createForeignObject(id);\n  svgContainer.appendChild(foreignObject);\n  // @ts-expect-error @zenuml/core@3.0.0 exports the wrong type for ZenUml\n  const zenuml = new ZenUml(app);\n  // default is a theme name. More themes to be added and will be configurable in the future\n  await zenuml.render(text, { theme: 'default', mode: 'static' });\n\n  const { width, height } = window.getComputedStyle(container);\n  log.debug('zenuml diagram size', width, height);\n  svgContainer.setAttribute('style', `width: ${width}; height: ${height};`);\n};\n\nexport default {\n  draw,\n};\n", "import { injectUtils } from './mermaidUtils.js';\nimport parser from './parser.js';\nimport renderer from './zenumlRenderer.js';\n\nexport const diagram = {\n  db: {\n    clear: () => {\n      // no-op\n    },\n  },\n  renderer,\n  parser,\n  styles: () => {\n    // no-op\n  },\n  injectUtils,\n};\n"],
  "mappings": ";;;;;AAEA,IAAM,UAAU,wBAAC,MAAc;AAG7B,UAAQ,MAAM,iDAAiD,CAAC;AAClE,GAJgB;AAiBT,IAAM,MAAuD;AAAA,EAClE,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACT;AAEO,IAAI;AACJ,IAAI;AACJ,IAAI;AAEJ,IAAI;AAOJ,IAAM,cAAc,wBACzB,MACA,cACA,YACA,eACA,uBACG;AACH,OAAK,KAAK,wBAAwB;AAClC,MAAI,QAAQ,KAAK;AACjB,MAAI,QAAQ,KAAK;AACjB,MAAI,OAAO,KAAK;AAChB,MAAI,OAAO,KAAK;AAChB,MAAI,QAAQ,KAAK;AACjB,MAAI,QAAQ,KAAK;AACjB,gBAAc;AACd,cAAY;AACZ,iBAAe;AACf,sBAAoB;AACtB,GAlB2B;;;ACjC3B,IAAO,iBAAQ;AAAA,EACb,OAAO,MAAM;AAAA,EAEb;AACF;;;ACTA,OAAO,YAAY;AAEnB,IAAM,SAAS;AAGf,SAAS,+BAA+B,IAAY;AAClD,QAAM,YAAY,SAAS,cAAc,KAAK;AAC9C,YAAU,KAAK,aAAa,EAAE;AAC9B,YAAU,MAAM,UAAU;AAC1B,YAAU,YAAY,sBAAsB,EAAE;AAC9C,QAAM,MAAM,UAAU,cAAc,cAAc,EAAE,EAAE;AACtD,SAAO,EAAE,WAAW,IAAI;AAC1B;AAPS;AAUT,SAAS,oBAAoB,IAAY;AACvC,QAAM,gBAAgB,SAAS,gBAAgB,8BAA8B,eAAe;AAC5F,gBAAc,aAAa,KAAK,GAAG;AACnC,gBAAc,aAAa,KAAK,GAAG;AACnC,gBAAc,aAAa,SAAS,MAAM;AAC1C,gBAAc,aAAa,UAAU,MAAM;AAC3C,QAAM,EAAE,WAAW,IAAI,IAAI,+BAA+B,EAAE;AAC5D,gBAAc,YAAY,SAAS;AACnC,SAAO,EAAE,eAAe,WAAW,IAAI;AACzC;AATS;AAiBF,IAAM,OAAO,sCAAgB,MAAc,IAAY;AAC5D,MAAI,KAAK,8BAA8B,MAAM;AAE7C,SAAO,KAAK,QAAQ,QAAQ,EAAE;AAC9B,QAAM,EAAE,cAAc,IAAI,UAAU;AAEpC,MAAI,iBAA2C;AAC/C,MAAI,kBAAkB,WAAW;AAC/B,qBAAiB,SAAS,eAAe,MAAM,EAAE;AAAA,EACnD;AAEA,QAAM,OAAO,kBAAkB,YAAY,gBAAgB,eAAe,WAAW;AAErF,QAAM,eAAe,MAAM,cAAc,OAAO,EAAE,EAAE;AAEpD,MAAI,CAAC,QAAQ,CAAC,cAAc;AAC1B,QAAI,MAAM,kCAAkC;AAC5C;AAAA,EACF;AAEA,QAAM,EAAE,eAAe,WAAW,IAAI,IAAI,oBAAoB,EAAE;AAChE,eAAa,YAAY,aAAa;AAEtC,QAAM,SAAS,IAAI,OAAO,GAAG;AAE7B,QAAM,OAAO,OAAO,MAAM,EAAE,OAAO,WAAW,MAAM,SAAS,CAAC;AAE9D,QAAM,EAAE,OAAO,OAAO,IAAI,OAAO,iBAAiB,SAAS;AAC3D,MAAI,MAAM,uBAAuB,OAAO,MAAM;AAC9C,eAAa,aAAa,SAAS,UAAU,KAAK,aAAa,MAAM,GAAG;AAC1E,GA9BoB;AAgCpB,IAAO,yBAAQ;AAAA,EACb;AACF;;;AC/DO,IAAM,UAAU;AAAA,EACrB,IAAI;AAAA,IACF,OAAO,MAAM;AAAA,IAEb;AAAA,EACF;AAAA,EACA;AAAA,EACA;AAAA,EACA,QAAQ,MAAM;AAAA,EAEd;AAAA,EACA;AACF;",
  "names": []
}
